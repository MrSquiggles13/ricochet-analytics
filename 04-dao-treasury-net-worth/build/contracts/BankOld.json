{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "oracleContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "debtAmount",
          "type": "uint256"
        }
      ],
      "name": "Liquidation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PriceUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReserveDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReserveWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultRepay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultWithdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "KEEPER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REPORTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "keeper",
          "type": "address"
        }
      ],
      "name": "addKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "updater",
          "type": "address"
        }
      ],
      "name": "addReporter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBankFactoryOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralTokenLastUpdatedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralTokenPriceGranularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralizationRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getCurrentValue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ifRetrieve",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDebtTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDebtTokenLastUpdatedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDebtTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDebtTokenPriceGranularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLiquidationPenalty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOriginationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserveCollateralBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultCollateralAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "getVaultCollateralizationRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultDebtAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultRepayAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "originationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralizationRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationPenalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "bankFactoryOwner",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "oracleContract",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "reserveDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "reserveWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "reserveWithdrawCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldKeeper",
          "type": "address"
        }
      ],
      "name": "revokeKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldUpdater",
          "type": "address"
        }
      ],
      "name": "revokeReporter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setBankFactoryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenTellorRequestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenPriceGranularity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenPrice",
          "type": "uint256"
        }
      ],
      "name": "setCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "debtToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "debtTokenTellorRequestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtTokenPriceGranularity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtTokenPrice",
          "type": "uint256"
        }
      ],
      "name": "setDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateCollateralPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateDebtPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vaultBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vaultDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vaultRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vaultWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaults",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/AccessControl.sol",
    "1": "contracts/AccessControlEnumerable.sol",
    "10": "contracts/SafeERC20.sol",
    "12": "interfaces/IAccessControl.sol",
    "13": "interfaces/IAccessControlEnumerable.sol",
    "14": "interfaces/IERC165.sol",
    "15": "interfaces/IERC20.sol",
    "16": "interfaces/ITellor.sol",
    "2": "contracts/Address.sol",
    "3": "contracts/BankOld.sol",
    "4": "contracts/BankStorage.sol",
    "5": "contracts/Context.sol",
    "8": "contracts/Initializable.sol"
  },
  "ast": {
    "absolutePath": "contracts/BankOld.sol",
    "exportedSymbols": {
      "AccessControl": [
        2882
      ],
      "AccessControlEnumerable": [
        1338
      ],
      "Address": [
        3907
      ],
      "BankOld": [
        1213
      ],
      "BankStorage": [
        1689
      ],
      "Context": [
        3929
      ],
      "ERC165": [
        3986
      ],
      "EnumerableSet": [
        3481
      ],
      "IAccessControl": [
        4262
      ],
      "IAccessControlEnumerable": [
        3507
      ],
      "IERC165": [
        4274
      ],
      "IERC20": [
        2066
      ],
      "ITellor": [
        2559
      ],
      "Initializable": [
        1764
      ],
      "Ownable": [
        3612
      ],
      "SafeERC20": [
        1988
      ],
      "Strings": [
        4189
      ]
    },
    "id": 1214,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "contracts/BankStorage.sol",
        "file": "./BankStorage.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 1690,
        "src": "57:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ITellor.sol",
        "file": "../interfaces/ITellor.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 2560,
        "src": "85:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 2067,
        "src": "121:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 1989,
        "src": "156:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 1765,
        "src": "182:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AccessControlEnumerable.sol",
        "file": "./AccessControlEnumerable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1214,
        "sourceUnit": 1339,
        "src": "212:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "BankStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1689,
              "src": "484:11:3"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "484:11:3"
          },
          {
            "baseName": {
              "id": 11,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1338,
              "src": "497:23:3"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "497:23:3"
          },
          {
            "baseName": {
              "id": 13,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1764,
              "src": "522:13:3"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "522:13:3"
          }
        ],
        "canonicalName": "BankOld",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "253:210:3",
          "text": " @title Bank\n This contract allows the owner to deposit reserves(debt token), earn interest and\n origination fees from users that borrow against their collateral.\n The oracle for Bank is Tellor."
        },
        "fullyImplemented": true,
        "id": 1213,
        "linearizedBaseContracts": [
          1213,
          1764,
          1338,
          2882,
          4274,
          3507,
          4262,
          3929,
          1689
        ],
        "name": "BankOld",
        "nameLocation": "473:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 18,
            "libraryName": {
              "id": 15,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1988,
              "src": "548:9:3"
            },
            "nodeType": "UsingForDirective",
            "src": "542:27:3",
            "typeName": {
              "id": 17,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2066,
                "src": "562:6:3"
              },
              "referencedDeclaration": 2066,
              "src": "562:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2066",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "_bankFactoryOwner",
            "nameLocation": "591:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "575:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "575:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 24,
            "name": "ReserveDeposit",
            "nameLocation": "636:14:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "659:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "651:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "650:16:3"
            },
            "src": "630:37:3"
          },
          {
            "anonymous": false,
            "id": 30,
            "name": "ReserveWithdraw",
            "nameLocation": "678:15:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "702:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "694:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "717:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "709:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:31:3"
            },
            "src": "672:53:3"
          },
          {
            "anonymous": false,
            "id": 36,
            "name": "VaultDeposit",
            "nameLocation": "736:12:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "757:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "749:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "772:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "764:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "748:31:3"
            },
            "src": "730:50:3"
          },
          {
            "anonymous": false,
            "id": 42,
            "name": "VaultBorrow",
            "nameLocation": "791:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "811:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "803:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "829:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "821:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "802:34:3"
            },
            "src": "785:52:3"
          },
          {
            "anonymous": false,
            "id": 48,
            "name": "VaultRepay",
            "nameLocation": "848:10:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "867:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "859:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "885:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "877:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "858:34:3"
            },
            "src": "842:51:3"
          },
          {
            "anonymous": false,
            "id": 54,
            "name": "VaultWithdraw",
            "nameLocation": "904:13:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "926:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "918:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "944:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "936:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "917:34:3"
            },
            "src": "898:54:3"
          },
          {
            "anonymous": false,
            "id": 60,
            "name": "PriceUpdate",
            "nameLocation": "963:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "983:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "975:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "998:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "990:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:30:3"
            },
            "src": "957:48:3"
          },
          {
            "anonymous": false,
            "id": 66,
            "name": "Liquidation",
            "nameLocation": "1016:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "1036:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1028:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "debtAmount",
                  "nameLocation": "1054:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1046:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:38:3"
            },
            "src": "1010:56:3"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1136:56:3",
              "statements": [
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 71,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "1146:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "oracleContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1371,
                      "src": "1146:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74,
                      "name": "oracleContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1171:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1146:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:39:3"
                }
              ]
            },
            "id": 78,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "oracleContract",
                  "nameLocation": "1120:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1104:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:32:3"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:0:3"
            },
            "scope": 1213,
            "src": "1092:100:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1237:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 81,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1345,
                          "src": "1255:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 82,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1265:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1265:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1255:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4953204e4f54204f574e4552",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1277:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75f12d78ab7b0d8b36290227d7209106a2553fc949ffbe4443c7be6f23459db7",
                          "typeString": "literal_string \"IS NOT OWNER\""
                        },
                        "value": "IS NOT OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75f12d78ab7b0d8b36290227d7209106a2553fc949ffbe4443c7be6f23459db7",
                          "typeString": "literal_string \"IS NOT OWNER\""
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1247:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:45:3"
                },
                {
                  "id": 88,
                  "nodeType": "PlaceholderStatement",
                  "src": "1302:1:3"
                }
              ]
            },
            "id": 90,
            "name": "onlyOwner",
            "nameLocation": "1225:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:3"
            },
            "src": "1216:94:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1439:30:3",
              "statements": [
                {
                  "expression": {
                    "id": 96,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1345,
                    "src": "1456:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 95,
                  "id": 97,
                  "nodeType": "Return",
                  "src": "1449:13:3"
                }
              ]
            },
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "1334:53:3",
              "text": " @dev Returns the owner of the bank"
            },
            "functionSelector": "8da5cb5b",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "1401:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:2:3"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1430:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1429:9:3"
            },
            "scope": 1213,
            "src": "1392:77:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1727:34:3",
              "statements": [
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1345,
                      "src": "1737:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "1746:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1737:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1737:17:3"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1475:185:3",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner.\n NOTE: Override this to add changing the"
            },
            "functionSelector": "f2fde38b",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 104,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 90,
                  "src": "1717:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1717:9:3"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "1674:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1700:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1692:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:18:3"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:3"
            },
            "scope": 1213,
            "src": "1665:96:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "2226:459:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 137,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2590,
                        "src": "2281:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 138,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2301:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 136,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2790,
                      "src": "2270:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "2270:39:3"
                },
                {
                  "expression": {
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 141,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "2319:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "interestRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1363,
                      "src": "2319:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 144,
                      "name": "interestRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "2342:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2319:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2319:35:3"
                },
                {
                  "expression": {
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 147,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "2364:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "originationFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1365,
                      "src": "2364:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 150,
                      "name": "originationFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "2389:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2364:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2364:39:3"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 153,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "2413:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralizationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1367,
                      "src": "2413:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 156,
                      "name": "collateralizationRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "2446:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2413:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:55:3"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 159,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "2478:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "oracleContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1371,
                      "src": "2478:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 162,
                      "name": "oracleContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "2503:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2478:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2478:39:3"
                },
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 165,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "2527:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "liquidationPenalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1369,
                      "src": "2527:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 168,
                      "name": "liquidationPenalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "2556:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2527:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:47:3"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 171,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "2584:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "period",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1373,
                      "src": "2584:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2601:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2584:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:23:3"
                },
                {
                  "expression": {
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 177,
                      "name": "_bankFactoryOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2617:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 178,
                      "name": "bankFactoryOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "2637:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2617:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2617:36:3"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 181,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1347,
                      "src": "2663:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 182,
                      "name": "bankName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "2670:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2663:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:15:3"
                }
              ]
            },
            "documentation": {
              "id": 113,
              "nodeType": "StructuredDocumentation",
              "src": "1767:122:3",
              "text": " @dev This function sets the fundamental parameters for the bank\n      and assigns the first admin"
            },
            "functionSelector": "70c12f1e",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 134,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1737,
                  "src": "2214:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2214:11:3"
              }
            ],
            "name": "init",
            "nameLocation": "1903:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1925:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "1917:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1917:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "1956:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "1942:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "interestRate",
                  "nameLocation": "1982:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "1974:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "originationFee",
                  "nameLocation": "2012:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2004:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "collateralizationRatio",
                  "nameLocation": "2044:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2036:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2036:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "liquidationPenalty",
                  "nameLocation": "2084:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2076:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "2120:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2112:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "bankFactoryOwner",
                  "nameLocation": "2144:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2136:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "oracleContract",
                  "nameLocation": "2186:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "2170:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2170:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1907:299:3"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2226:0:3"
            },
            "scope": 1213,
            "src": "1894:791:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "3027:398:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 202,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "3058:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 203,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "3058:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3093:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3085:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 204,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3085:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3085:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3058:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 209,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "3115:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3142:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3134:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 210,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3134:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3134:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3115:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3058:86:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173657461626c65",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3158:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed5ca93dae053307ca4bbbc1b722e6711a23f5f33dc9226f5e7451b308d5ac49",
                          "typeString": "literal_string \"!setable\""
                        },
                        "value": "!setable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed5ca93dae053307ca4bbbc1b722e6711a23f5f33dc9226f5e7451b308d5ac49",
                          "typeString": "literal_string \"!setable\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3037:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:141:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:141:3"
                },
                {
                  "expression": {
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 219,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "3188:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1376,
                      "src": "3188:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 222,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "3214:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3188:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "3188:41:3"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 225,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "3239:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1378,
                      "src": "3239:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 228,
                      "name": "collateralTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "3258:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3239:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "3239:39:3"
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 231,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "3288:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1380,
                      "src": "3288:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 234,
                      "name": "collateralTokenPriceGranularity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "3318:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3288:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "3288:61:3"
                },
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 237,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "3359:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tellorRequestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1382,
                      "src": "3359:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 240,
                      "name": "collateralTokenTellorRequestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "3388:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3359:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:59:3"
                }
              ]
            },
            "documentation": {
              "id": 187,
              "nodeType": "StructuredDocumentation",
              "src": "2691:98:3",
              "text": " @dev This function sets the collateral token properties, only callable one time"
            },
            "functionSelector": "38507ff5",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 198,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2590,
                    "src": "3007:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 197,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2601,
                  "src": "2998:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2998:28:3"
              }
            ],
            "name": "setCollateral",
            "nameLocation": "2803:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "collateralToken",
                  "nameLocation": "2834:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2826:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "collateralTokenTellorRequestId",
                  "nameLocation": "2867:30:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2859:38:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2859:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "collateralTokenPriceGranularity",
                  "nameLocation": "2915:31:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2907:39:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "collateralTokenPrice",
                  "nameLocation": "2964:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2956:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2956:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2816:174:3"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3027:0:3"
            },
            "scope": 1213,
            "src": "2794:631:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "3731:322:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 260,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "3762:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "3762:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3791:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3783:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 262,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3783:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3783:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3762:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 267,
                            "name": "debtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "3797:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3818:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3810:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 268,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3810:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3810:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3797:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3762:58:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173657461626c65",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3834:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed5ca93dae053307ca4bbbc1b722e6711a23f5f33dc9226f5e7451b308d5ac49",
                          "typeString": "literal_string \"!setable\""
                        },
                        "value": "!setable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed5ca93dae053307ca4bbbc1b722e6711a23f5f33dc9226f5e7451b308d5ac49",
                          "typeString": "literal_string \"!setable\""
                        }
                      ],
                      "id": 259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3741:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:113:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3741:113:3"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 277,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "3864:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1376,
                      "src": "3864:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 280,
                      "name": "debtToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "3884:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3864:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "3864:29:3"
                },
                {
                  "expression": {
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 283,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "3903:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1378,
                      "src": "3903:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 286,
                      "name": "debtTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 253,
                      "src": "3916:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3903:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "3903:27:3"
                },
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 289,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "3940:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1380,
                      "src": "3940:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 292,
                      "name": "debtTokenPriceGranularity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "3964:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3940:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "3940:49:3"
                },
                {
                  "expression": {
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 295,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "3999:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tellorRequestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1382,
                      "src": "3999:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 298,
                      "name": "debtTokenTellorRequestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "4022:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3999:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3999:47:3"
                }
              ]
            },
            "documentation": {
              "id": 245,
              "nodeType": "StructuredDocumentation",
              "src": "3431:92:3",
              "text": " @dev This function sets the debt token properties, only callable one time"
            },
            "functionSelector": "c14d0454",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 256,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2590,
                    "src": "3711:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 255,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2601,
                  "src": "3702:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3702:28:3"
              }
            ],
            "name": "setDebt",
            "nameLocation": "3537:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "debtToken",
                  "nameLocation": "3562:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3554:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3554:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "debtTokenTellorRequestId",
                  "nameLocation": "3589:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3581:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "debtTokenPriceGranularity",
                  "nameLocation": "3631:25:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3623:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3623:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "debtTokenPrice",
                  "nameLocation": "3674:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "3666:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3666:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3544:150:3"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3731:0:3"
            },
            "scope": 1213,
            "src": "3528:525:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "4304:266:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 312,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "4322:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4331:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4322:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206973207a65726f202121",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4334:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        },
                        "value": "Amount is zero !!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4314:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4314:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "4314:40:3"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 318,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "4364:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "4364:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 321,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "4387:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4364:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "4364:29:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 329,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4459:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4459:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 333,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4491:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankOld_$1213",
                              "typeString": "contract BankOld"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BankOld_$1213",
                              "typeString": "contract BankOld"
                            }
                          ],
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4483:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 331,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4483:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4483:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 335,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "4510:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 325,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "4410:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "4410:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 324,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "4403:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4403:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1821,
                      "src": "4403:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4403:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:123:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 339,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "4556:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 338,
                      "name": "ReserveDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "4541:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4541:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "EmitStatement",
                  "src": "4536:27:3"
                }
              ]
            },
            "documentation": {
              "id": 303,
              "nodeType": "StructuredDocumentation",
              "src": "4059:142:3",
              "text": " @dev This function allows the Bank owner to deposit the reserve (debt tokens)\n @param amount is the amount to deposit"
            },
            "functionSelector": "0091a446",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 308,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2590,
                    "src": "4280:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 309,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 307,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2601,
                  "src": "4271:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4271:28:3"
              }
            ],
            "name": "reserveDeposit",
            "nameLocation": "4215:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4238:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "4230:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4230:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4229:16:3"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4304:0:3"
            },
            "scope": 1213,
            "src": "4206:364:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 407,
              "nodeType": "Block",
              "src": "4892:487:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 360,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4967:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BankOld_$1213",
                                    "typeString": "contract BankOld"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BankOld_$1213",
                                    "typeString": "contract BankOld"
                                  }
                                ],
                                "id": 359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4959:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 358,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4959:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4959:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 354,
                                    "name": "debt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1402,
                                    "src": "4930:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Token_$1387_storage",
                                      "typeString": "struct BankStorage.Token storage ref"
                                    }
                                  },
                                  "id": 355,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1376,
                                  "src": "4930:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 353,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "4923:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4923:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2066",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2005,
                            "src": "4923:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4923:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 363,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "4977:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4923:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5420454e4f554748204445425420544f4b454e5320494e2052455345525645",
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4997:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e03cb6c80e5ce49db8c0c22c3892ad79a9e29a6e4479ebf962906922fabf641",
                          "typeString": "literal_string \"NOT ENOUGH DEBT TOKENS IN RESERVE\""
                        },
                        "value": "NOT ENOUGH DEBT TOKENS IN RESERVE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e03cb6c80e5ce49db8c0c22c3892ad79a9e29a6e4479ebf962906922fabf641",
                          "typeString": "literal_string \"NOT ENOUGH DEBT TOKENS IN RESERVE\""
                        }
                      ],
                      "id": 352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4902:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4902:140:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "4902:140:3"
                },
                {
                  "assignments": [
                    369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 369,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "5060:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 407,
                      "src": "5052:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 368,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5052:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 370,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "5072:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5081:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "5072:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5052:32:3"
                },
                {
                  "expression": {
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 374,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "5128:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "5128:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 377,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "5151:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5128:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "5128:29:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 385,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5206:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5206:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 387,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "5218:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 388,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "5227:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5218:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 381,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "5174:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "5174:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 380,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "5167:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5167:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "5167:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5167:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "5167:70:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 397,
                        "name": "_bankFactoryOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "5286:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 398,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "5305:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 393,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "5254:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 394,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "5254:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 392,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "5247:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5247:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "5247:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5247:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "5247:68:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 402,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1402,
                          "src": "5346:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$1387_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1376,
                        "src": "5346:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 404,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "5365:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 401,
                      "name": "ReserveWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "5330:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5330:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "EmitStatement",
                  "src": "5325:47:3"
                }
              ]
            },
            "documentation": {
              "id": 344,
              "nodeType": "StructuredDocumentation",
              "src": "4576:212:3",
              "text": " @dev This function allows the Bank owner to withdraw the reserve (debt tokens)\n      Withdraws incur a 0.5% fee paid to the bankFactoryOwner\n @param amount is the amount to withdraw"
            },
            "functionSelector": "ec5e5e7d",
            "id": 408,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 349,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2590,
                    "src": "4868:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 350,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 348,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2601,
                  "src": "4859:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4859:28:3"
              }
            ],
            "name": "reserveWithdraw",
            "nameLocation": "4802:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4826:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 408,
                  "src": "4818:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4818:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4817:16:3"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4892:0:3"
            },
            "scope": 1213,
            "src": "4793:586:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "5684:553:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 418,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1408,
                            "src": "5715:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                              "typeString": "struct BankStorage.Reserve storage ref"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateralBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1359,
                          "src": "5715:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 420,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "5744:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5715:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5420454e4f55474820434f4c4c41544552414c20494e2052455345525645",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5764:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a272d29cbd7d18d5833f66fcfc646982955092e127d4be5a978c59aedcaabcd",
                          "typeString": "literal_string \"NOT ENOUGH COLLATERAL IN RESERVE\""
                        },
                        "value": "NOT ENOUGH COLLATERAL IN RESERVE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a272d29cbd7d18d5833f66fcfc646982955092e127d4be5a978c59aedcaabcd",
                          "typeString": "literal_string \"NOT ENOUGH COLLATERAL IN RESERVE\""
                        }
                      ],
                      "id": 417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5694:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5694:114:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "5694:114:3"
                },
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "5826:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "5818:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5818:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 430,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 427,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 411,
                      "src": "5838:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5847:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "5838:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5818:32:3"
                },
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 431,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "5894:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1359,
                      "src": "5894:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 434,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 411,
                      "src": "5923:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5894:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "5894:35:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 438,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1405,
                          "src": "5960:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$1387_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1376,
                        "src": "5960:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 440,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "5985:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 437,
                      "name": "ReserveWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "5944:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5944:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "EmitStatement",
                  "src": "5939:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 448,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6060:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6060:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 450,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "6084:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 451,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "6093:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6084:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 444,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "6009:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 445,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "6009:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 443,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "6002:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6002:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "6002:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6002:110:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "6002:110:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 460,
                        "name": "_bankFactoryOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "6180:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 461,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "6211:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 456,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "6129:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 457,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "6129:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 455,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "6122:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6122:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "6122:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6122:108:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "6122:108:3"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "5385:185:3",
              "text": " @dev This function allows the user to withdraw their collateral\nWithdraws incur a 0.5% fee paid to the bankFactoryOwner\n @param amount is the amount to withdraw"
            },
            "functionSelector": "435726c4",
            "id": 465,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 414,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2590,
                    "src": "5660:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 415,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 413,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2601,
                  "src": "5651:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "5651:28:3"
              }
            ],
            "name": "reserveWithdrawCollateral",
            "nameLocation": "5584:25:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5618:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "5610:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5610:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5609:16:3"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5684:0:3"
            },
            "scope": 1213,
            "src": "5575:662:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 503,
              "nodeType": "Block",
              "src": "6416:395:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 471,
                              "name": "REPORTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1357,
                              "src": "6455:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 472,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6470:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6470:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 470,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2642,
                            "src": "6447:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6447:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 476,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2590,
                              "src": "6509:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 477,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6529:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6529:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 475,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2642,
                            "src": "6501:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6501:39:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6447:93:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742070726963652075706461746572206f722061646d696e",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6554:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cee0e6d2b8318b7f5e1cc5b25d4f6478fbaad399edb0aea89a45f06da5330389",
                          "typeString": "literal_string \"not price updater or admin\""
                        },
                        "value": "not price updater or admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cee0e6d2b8318b7f5e1cc5b25d4f6478fbaad399edb0aea89a45f06da5330389",
                          "typeString": "literal_string \"not price updater or admin\""
                        }
                      ],
                      "id": 469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6426:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6426:166:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "6426:166:3"
                },
                {
                  "expression": {
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 484,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1405,
                            "src": "6605:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1387_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1378,
                          "src": "6605:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 487,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1405,
                            "src": "6623:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1387_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "lastUpdatedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1386,
                          "src": "6623:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 489,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6602:46:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 491,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1405,
                            "src": "6680:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1387_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tellorRequestId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1382,
                          "src": "6680:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 490,
                        "name": "getCurrentValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1144,
                        "src": "6651:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6651:65:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "6602:114:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "6602:114:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 497,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1405,
                          "src": "6762:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$1387_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1376,
                        "src": "6762:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 499,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1405,
                          "src": "6787:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$1387_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1378,
                        "src": "6787:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 496,
                      "name": "PriceUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "6750:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6750:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 502,
                  "nodeType": "EmitStatement",
                  "src": "6745:59:3"
                }
              ]
            },
            "documentation": {
              "id": 466,
              "nodeType": "StructuredDocumentation",
              "src": "6243:126:3",
              "text": " @dev Use this function to get and update the price for the collateral token\n using the Tellor Oracle."
            },
            "functionSelector": "85b4e543",
            "id": 504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCollateralPrice",
            "nameLocation": "6383:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6404:2:3"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6416:0:3"
            },
            "scope": 1213,
            "src": "6374:437:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "6978:365:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 510,
                              "name": "REPORTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1357,
                              "src": "7017:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 511,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7032:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7032:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 509,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2642,
                            "src": "7009:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7009:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 515,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2590,
                              "src": "7071:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 516,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7091:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7091:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 514,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2642,
                            "src": "7063:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7063:39:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7009:93:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742070726963652075706461746572206f722061646d696e",
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7116:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cee0e6d2b8318b7f5e1cc5b25d4f6478fbaad399edb0aea89a45f06da5330389",
                          "typeString": "literal_string \"not price updater or admin\""
                        },
                        "value": "not price updater or admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cee0e6d2b8318b7f5e1cc5b25d4f6478fbaad399edb0aea89a45f06da5330389",
                          "typeString": "literal_string \"not price updater or admin\""
                        }
                      ],
                      "id": 508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6988:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6988:166:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "6988:166:3"
                },
                {
                  "expression": {
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 523,
                            "name": "debt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1402,
                            "src": "7167:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1387_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1378,
                          "src": "7167:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 526,
                            "name": "debt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1402,
                            "src": "7179:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1387_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "lastUpdatedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1386,
                          "src": "7179:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 528,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7164:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 530,
                            "name": "debt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1402,
                            "src": "7230:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1387_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tellorRequestId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1382,
                          "src": "7230:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 529,
                        "name": "getCurrentValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1144,
                        "src": "7201:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7201:59:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "7164:96:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "7164:96:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 536,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1402,
                          "src": "7306:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$1387_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1376,
                        "src": "7306:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 538,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1402,
                          "src": "7325:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$1387_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1378,
                        "src": "7325:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 535,
                      "name": "PriceUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "7294:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7294:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "EmitStatement",
                  "src": "7289:47:3"
                }
              ]
            },
            "documentation": {
              "id": 505,
              "nodeType": "StructuredDocumentation",
              "src": "6817:120:3",
              "text": " @dev Use this function to get and update the price for the debt token\n using the Tellor Oracle."
            },
            "functionSelector": "45fd80e4",
            "id": 543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateDebtPrice",
            "nameLocation": "6951:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6966:2:3"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6978:0:3"
            },
            "scope": 1213,
            "src": "6942:401:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "7716:1315:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 551,
                              "name": "KEEPER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1352,
                              "src": "7755:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 552,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7768:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7768:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 550,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2642,
                            "src": "7747:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7747:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 556,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2590,
                              "src": "7807:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 557,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7827:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7827:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 555,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2642,
                            "src": "7799:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7799:39:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7747:91:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206b6565706572206f722061646d696e",
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7852:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_333662fb0e622d795112bdaf9a79bb6b33524f61c4e2bb5a4f67658d5f7ffc28",
                          "typeString": "literal_string \"not keeper or admin\""
                        },
                        "value": "not keeper or admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_333662fb0e622d795112bdaf9a79bb6b33524f61c4e2bb5a4f67658d5f7ffc28",
                          "typeString": "literal_string \"not keeper or admin\""
                        }
                      ],
                      "id": 549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7726:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7726:157:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "7726:157:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 566,
                              "name": "vaultOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 546,
                              "src": "7987:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 565,
                            "name": "getVaultCollateralizationRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1688,
                            "src": "7956:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7956:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 568,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "8017:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateralizationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1367,
                            "src": "8017:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8050:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "8017:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7956:97:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5641554c54204e4f5420554e444552434f4c4c41544552414c495a4544",
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8067:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d36ddf16622c100f22040facbb6e2be29a7e8ef1feaaef6d4e5c9fa8c585649",
                          "typeString": "literal_string \"VAULT NOT UNDERCOLLATERALIZED\""
                        },
                        "value": "VAULT NOT UNDERCOLLATERALIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d36ddf16622c100f22040facbb6e2be29a7e8ef1feaaef6d4e5c9fa8c585649",
                          "typeString": "literal_string \"VAULT NOT UNDERCOLLATERALIZED\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7935:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7935:173:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "7935:173:3"
                },
                {
                  "assignments": [
                    577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 577,
                      "mutability": "mutable",
                      "name": "debtOwned",
                      "nameLocation": "8126:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "8118:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 576,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8118:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 598,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 578,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "8138:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 580,
                        "indexExpression": {
                          "id": 579,
                          "name": "vaultOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "8145:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8138:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1391,
                      "src": "8138:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 587,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 582,
                                          "name": "vaults",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1399,
                                          "src": "8184:6:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                          }
                                        },
                                        "id": 584,
                                        "indexExpression": {
                                          "id": 583,
                                          "name": "vaultOwner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 546,
                                          "src": "8191:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8184:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                                          "typeString": "struct BankStorage.Vault storage ref"
                                        }
                                      },
                                      "id": 585,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "debtAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1391,
                                      "src": "8184:29:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "313030",
                                      "id": 586,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8232:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    },
                                    "src": "8184:51:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 588,
                                      "name": "reserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1408,
                                      "src": "8254:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                                        "typeString": "struct BankStorage.Reserve storage ref"
                                      }
                                    },
                                    "id": 589,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "liquidationPenalty",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1369,
                                    "src": "8254:26:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8184:96:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 591,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8183:98:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8300:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "8183:120:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8322:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "8183:142:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 596,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8182:144:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8138:188:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8118:208:3"
                },
                {
                  "assignments": [
                    600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 600,
                      "mutability": "mutable",
                      "name": "collateralToLiquidate",
                      "nameLocation": "8344:21:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "8336:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 599,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8336:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 609,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 601,
                            "name": "debtOwned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "8369:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 602,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "8381:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 603,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1378,
                            "src": "8381:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8369:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 605,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8368:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 606,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "8407:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 607,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1378,
                      "src": "8407:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8368:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8336:87:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 610,
                      "name": "collateralToLiquidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "8438:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 611,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "8462:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 613,
                        "indexExpression": {
                          "id": 612,
                          "name": "vaultOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "8469:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8462:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1389,
                      "src": "8462:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8438:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 624,
                  "nodeType": "IfStatement",
                  "src": "8434:149:3",
                  "trueBody": {
                    "id": 623,
                    "nodeType": "Block",
                    "src": "8499:84:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 616,
                            "name": "collateralToLiquidate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "8513:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 617,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1399,
                                "src": "8537:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                  "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                }
                              },
                              "id": 619,
                              "indexExpression": {
                                "id": 618,
                                "name": "vaultOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 546,
                                "src": "8544:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8537:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$1394_storage",
                                "typeString": "struct BankStorage.Vault storage ref"
                              }
                            },
                            "id": 620,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateralAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1389,
                            "src": "8537:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8513:59:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 622,
                        "nodeType": "ExpressionStatement",
                        "src": "8513:59:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "8601:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "8593:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8593:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 627,
                      "name": "collateralToLiquidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "8613:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8637:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "8613:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8593:46:3"
                },
                {
                  "expression": {
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 631,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "8682:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 633,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1359,
                      "src": "8682:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 634,
                        "name": "collateralToLiquidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "8711:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 635,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "8735:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8711:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8682:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "8682:62:3"
                },
                {
                  "expression": {
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 639,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "8754:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 641,
                        "indexExpression": {
                          "id": 640,
                          "name": "vaultOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "8761:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8754:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1389,
                      "src": "8754:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 643,
                      "name": "collateralToLiquidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "8793:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8754:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "8754:60:3"
                },
                {
                  "expression": {
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 646,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "8824:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 648,
                        "indexExpression": {
                          "id": 647,
                          "name": "vaultOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "8831:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8824:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 649,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1391,
                      "src": "8824:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8856:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8824:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "8824:33:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 658,
                        "name": "_bankFactoryOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "8925:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 659,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "8956:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 654,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "8874:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "8874:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 653,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "8867:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8867:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "8867:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8867:108:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "8867:108:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 663,
                        "name": "vaultOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "9002:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 664,
                        "name": "debtOwned",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 577,
                        "src": "9014:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 662,
                      "name": "Liquidation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "8990:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8990:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "EmitStatement",
                  "src": "8985:39:3"
                }
              ]
            },
            "documentation": {
              "id": 544,
              "nodeType": "StructuredDocumentation",
              "src": "7349:314:3",
              "text": " @dev Only keepers or admins can use this function to liquidate a vault's debt,\n the bank admins gets the collateral liquidated, liquidated collateral\n is charged a 10% fee which gets paid to the bankFactoryOwner\n @param vaultOwner is the user the bank admins wants to liquidate"
            },
            "functionSelector": "2f865568",
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidate",
            "nameLocation": "7677:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "vaultOwner",
                  "nameLocation": "7695:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "7687:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7687:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7686:20:3"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7716:0:3"
            },
            "scope": 1213,
            "src": "7668:1363:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "9226:343:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 675,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 671,
                          "src": "9244:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9253:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9244:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206973207a65726f202121",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9256:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        },
                        "value": "Amount is zero !!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        }
                      ],
                      "id": 674,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9236:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9236:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "9236:40:3"
                },
                {
                  "expression": {
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 681,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "9286:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 684,
                        "indexExpression": {
                          "expression": {
                            "id": 682,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9293:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9293:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9286:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1389,
                      "src": "9286:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 686,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "9325:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9286:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "9286:45:3"
                },
                {
                  "expression": {
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 689,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "9341:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1359,
                      "src": "9341:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 692,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "9370:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9341:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "9341:35:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 700,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9448:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9448:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 704,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9480:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankOld_$1213",
                              "typeString": "contract BankOld"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BankOld_$1213",
                              "typeString": "contract BankOld"
                            }
                          ],
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9472:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 702,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9472:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9472:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 706,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "9499:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 696,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "9393:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "9393:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 695,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "9386:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9386:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1821,
                      "src": "9386:48:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9386:129:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "9386:129:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 710,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9543:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9543:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 712,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "9555:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 709,
                      "name": "VaultDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "9530:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9530:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "EmitStatement",
                  "src": "9525:37:3"
                }
              ]
            },
            "documentation": {
              "id": 669,
              "nodeType": "StructuredDocumentation",
              "src": "9037:137:3",
              "text": " @dev Use this function to allow users to deposit collateral to the vault\n @param amount is the collateral amount"
            },
            "functionSelector": "5729b394",
            "id": 716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultDeposit",
            "nameLocation": "9188:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9209:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "9201:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9201:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9200:16:3"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9226:0:3"
            },
            "scope": 1213,
            "src": "9179:390:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "9748:1204:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 722,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "9762:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 725,
                        "indexExpression": {
                          "expression": {
                            "id": 723,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9769:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9769:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9762:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1391,
                      "src": "9762:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9795:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9762:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 739,
                  "nodeType": "IfStatement",
                  "src": "9758:118:3",
                  "trueBody": {
                    "id": 738,
                    "nodeType": "Block",
                    "src": "9798:78:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 729,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1399,
                                "src": "9812:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                  "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                }
                              },
                              "id": 732,
                              "indexExpression": {
                                "expression": {
                                  "id": 730,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9819:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9819:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9812:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$1394_storage",
                                "typeString": "struct BankStorage.Vault storage ref"
                              }
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "debtAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1391,
                            "src": "9812:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 734,
                              "name": "getVaultRepayAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1639,
                              "src": "9844:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9844:21:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9812:53:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "9812:53:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "maxBorrow",
                      "nameLocation": "9893:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "9885:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9885:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 760,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 749,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 742,
                                        "name": "vaults",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1399,
                                        "src": "9907:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                          "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                        }
                                      },
                                      "id": 745,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 743,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "9914:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 744,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "9914:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9907:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$1394_storage",
                                        "typeString": "struct BankStorage.Vault storage ref"
                                      }
                                    },
                                    "id": 746,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "collateralAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1389,
                                    "src": "9907:35:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 747,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1405,
                                      "src": "9957:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$1387_storage",
                                        "typeString": "struct BankStorage.Token storage ref"
                                      }
                                    },
                                    "id": 748,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1378,
                                    "src": "9957:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9907:66:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 750,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9906:68:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "expression": {
                                "id": 751,
                                "name": "debt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1402,
                                "src": "9989:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$1387_storage",
                                  "typeString": "struct BankStorage.Token storage ref"
                                }
                              },
                              "id": 752,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1378,
                              "src": "9989:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9906:93:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 754,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "10014:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 755,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateralizationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1367,
                            "src": "10014:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9906:138:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 757,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9905:140:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10048:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "9905:146:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9885:166:3"
                },
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 761,
                      "name": "maxBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "10061:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "*=",
                    "rightHandSide": {
                      "expression": {
                        "id": 762,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "10074:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1380,
                      "src": "10074:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10061:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "10061:34:3"
                },
                {
                  "expression": {
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 766,
                      "name": "maxBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "10105:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "expression": {
                        "id": 767,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "10118:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1380,
                      "src": "10118:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10105:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "10105:40:3"
                },
                {
                  "expression": {
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 771,
                      "name": "maxBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "10155:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 772,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "10168:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 775,
                        "indexExpression": {
                          "expression": {
                            "id": 773,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10175:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10175:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10168:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1391,
                      "src": "10168:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10155:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "10155:42:3"
                },
                {
                  "expression": {
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 779,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "10207:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 782,
                        "indexExpression": {
                          "expression": {
                            "id": 780,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10214:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10214:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10207:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1391,
                      "src": "10207:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 784,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "10252:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 788,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 785,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 719,
                                    "src": "10275:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 786,
                                      "name": "reserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1408,
                                      "src": "10284:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                                        "typeString": "struct BankStorage.Reserve storage ref"
                                      }
                                    },
                                    "id": 787,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "originationFee",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1365,
                                    "src": "10284:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10275:31:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 789,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10274:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10310:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "10274:41:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 792,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10273:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10252:64:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10207:109:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "10207:109:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 797,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "10347:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                              }
                            },
                            "id": 800,
                            "indexExpression": {
                              "expression": {
                                "id": 798,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10354:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10354:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10347:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$1394_storage",
                              "typeString": "struct BankStorage.Vault storage ref"
                            }
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "debtAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1391,
                          "src": "10347:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 802,
                          "name": "maxBorrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 741,
                          "src": "10379:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10347:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5420454e4f55474820434f4c4c41544552414c",
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10402:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78890d606af0638f634052a7201aaa5d60427f63b560762edfabf64f943b9dec",
                          "typeString": "literal_string \"NOT ENOUGH COLLATERAL\""
                        },
                        "value": "NOT ENOUGH COLLATERAL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78890d606af0638f634052a7201aaa5d60427f63b560762edfabf64f943b9dec",
                          "typeString": "literal_string \"NOT ENOUGH COLLATERAL\""
                        }
                      ],
                      "id": 796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10326:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10326:109:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "10326:109:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 808,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "10466:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 816,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10520:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BankOld_$1213",
                                    "typeString": "contract BankOld"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BankOld_$1213",
                                    "typeString": "contract BankOld"
                                  }
                                ],
                                "id": 815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10512:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 814,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10512:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10512:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 810,
                                    "name": "debt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1402,
                                    "src": "10483:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Token_$1387_storage",
                                      "typeString": "struct BankStorage.Token storage ref"
                                    }
                                  },
                                  "id": 811,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1376,
                                  "src": "10483:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 809,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "10476:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10476:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2066",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2005,
                            "src": "10476:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10476:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10466:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5420454e4f554748205245534552564553",
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10540:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15ac4af35daa41823349e5a9373fbbe2c5ebc28eda0e57970a7b3df10399ec95",
                          "typeString": "literal_string \"NOT ENOUGH RESERVES\""
                        },
                        "value": "NOT ENOUGH RESERVES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15ac4af35daa41823349e5a9373fbbe2c5ebc28eda0e57970a7b3df10399ec95",
                          "typeString": "literal_string \"NOT ENOUGH RESERVES\""
                        }
                      ],
                      "id": 807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10445:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10445:126:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "10445:126:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 823,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10585:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "10585:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 825,
                            "name": "vaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1399,
                            "src": "10603:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                              "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                            }
                          },
                          "id": 828,
                          "indexExpression": {
                            "expression": {
                              "id": 826,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10610:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10610:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10603:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$1394_storage",
                            "typeString": "struct BankStorage.Vault storage ref"
                          }
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createdAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1393,
                        "src": "10603:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10585:46:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 831,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "10634:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 832,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "period",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1373,
                      "src": "10634:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10585:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 844,
                  "nodeType": "IfStatement",
                  "src": "10581:212:3",
                  "trueBody": {
                    "id": 843,
                    "nodeType": "Block",
                    "src": "10650:143:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 834,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1399,
                                "src": "10736:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                  "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                }
                              },
                              "id": 837,
                              "indexExpression": {
                                "expression": {
                                  "id": 835,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10743:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10743:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10736:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$1394_storage",
                                "typeString": "struct BankStorage.Vault storage ref"
                              }
                            },
                            "id": 838,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "createdAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1393,
                            "src": "10736:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 839,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10767:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10767:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10736:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 842,
                        "nodeType": "ExpressionStatement",
                        "src": "10736:46:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 845,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "10802:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "10802:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 848,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "10825:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10802:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "10802:29:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 856,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10880:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10880:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 858,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "10892:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 852,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "10848:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "10848:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 851,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "10841:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10841:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "10841:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10841:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "10841:58:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 862,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10926:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10926:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 864,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 719,
                        "src": "10938:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 861,
                      "name": "VaultBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "10914:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10914:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 866,
                  "nodeType": "EmitStatement",
                  "src": "10909:36:3"
                }
              ]
            },
            "documentation": {
              "id": 717,
              "nodeType": "StructuredDocumentation",
              "src": "9575:122:3",
              "text": " @dev Use this function to allow users to borrow against their collateral\n @param amount to borrow"
            },
            "functionSelector": "4fd88951",
            "id": 868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultBorrow",
            "nameLocation": "9711:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9731:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "9723:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9723:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9722:16:3"
            },
            "returnParameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9748:0:3"
            },
            "scope": 1213,
            "src": "9702:1250:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "11175:713:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 875,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "11193:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11202:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11193:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206973207a65726f202121",
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11205:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        },
                        "value": "Amount is zero !!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        }
                      ],
                      "id": 874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11185:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11185:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "11185:40:3"
                },
                {
                  "expression": {
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 881,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "11235:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 884,
                        "indexExpression": {
                          "expression": {
                            "id": 882,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11242:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11242:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11235:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 885,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1391,
                      "src": "11235:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 886,
                        "name": "getVaultRepayAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "11267:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11267:21:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11235:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "11235:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 891,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "11319:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 892,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "11329:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                              }
                            },
                            "id": 895,
                            "indexExpression": {
                              "expression": {
                                "id": 893,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11336:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11336:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11329:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$1394_storage",
                              "typeString": "struct BankStorage.Vault storage ref"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "debtAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1391,
                          "src": "11329:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11319:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43414e4e4f54205245504159204d4f5245205448414e204f574544",
                        "id": 898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11372:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2cfc59baf4b2b9bb4955cb23c173c10eb7c01a8b0357bee386170368eff21f42",
                          "typeString": "literal_string \"CANNOT REPAY MORE THAN OWED\""
                        },
                        "value": "CANNOT REPAY MORE THAN OWED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2cfc59baf4b2b9bb4955cb23c173c10eb7c01a8b0357bee386170368eff21f42",
                          "typeString": "literal_string \"CANNOT REPAY MORE THAN OWED\""
                        }
                      ],
                      "id": 890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11298:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11298:113:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "11298:113:3"
                },
                {
                  "expression": {
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 901,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "11421:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 904,
                        "indexExpression": {
                          "expression": {
                            "id": 902,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11428:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11428:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11421:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1391,
                      "src": "11421:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 906,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "11454:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11421:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "11421:39:3"
                },
                {
                  "expression": {
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 909,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "11470:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1361,
                      "src": "11470:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 912,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "11493:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11470:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "11470:29:3"
                },
                {
                  "assignments": [
                    916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 916,
                      "mutability": "mutable",
                      "name": "periodsElapsed",
                      "nameLocation": "11517:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "11509:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11509:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 933,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 917,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11535:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11535:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 919,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "11553:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 920,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "period",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1373,
                            "src": "11553:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11535:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 922,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11534:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 923,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1399,
                                "src": "11584:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                  "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                }
                              },
                              "id": 926,
                              "indexExpression": {
                                "expression": {
                                  "id": 924,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "11591:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "11591:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11584:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$1394_storage",
                                "typeString": "struct BankStorage.Vault storage ref"
                              }
                            },
                            "id": 927,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createdAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1393,
                            "src": "11584:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 928,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "11615:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 929,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "period",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1373,
                            "src": "11615:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11584:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 931,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11583:47:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11534:96:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11509:121:3"
                },
                {
                  "expression": {
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 934,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "11640:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 937,
                        "indexExpression": {
                          "expression": {
                            "id": 935,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11647:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11647:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11640:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 938,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "createdAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1393,
                      "src": "11640:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 939,
                        "name": "periodsElapsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "11672:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "id": 940,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1408,
                          "src": "11689:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                            "typeString": "struct BankStorage.Reserve storage ref"
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "period",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1373,
                        "src": "11689:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11672:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11640:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "11640:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 950,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11769:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11769:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 954,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11801:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankOld_$1213",
                              "typeString": "contract BankOld"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BankOld_$1213",
                              "typeString": "contract BankOld"
                            }
                          ],
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11793:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 952,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11793:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11793:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 956,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "11820:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 946,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1402,
                              "src": "11720:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 947,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "11720:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 945,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "11713:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11713:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1821,
                      "src": "11713:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11713:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "11713:123:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 960,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11862:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11862:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 962,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "11874:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 959,
                      "name": "VaultRepay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "11851:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11851:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "EmitStatement",
                  "src": "11846:35:3"
                }
              ]
            },
            "documentation": {
              "id": 869,
              "nodeType": "StructuredDocumentation",
              "src": "10958:167:3",
              "text": " @dev This function allows users to pay the interest and origination fee to the\n  vault before being able to withdraw\n @param amount owed"
            },
            "functionSelector": "7649b938",
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultRepay",
            "nameLocation": "11139:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11158:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "11150:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11150:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11149:16:3"
            },
            "returnParameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11175:0:3"
            },
            "scope": 1213,
            "src": "11130:758:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1058,
              "nodeType": "Block",
              "src": "12058:827:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 973,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "12089:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 974,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "12099:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                              }
                            },
                            "id": 977,
                            "indexExpression": {
                              "expression": {
                                "id": 975,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12106:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12106:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12099:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$1394_storage",
                              "typeString": "struct BankStorage.Vault storage ref"
                            }
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateralAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1389,
                          "src": "12099:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12089:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43414e4e4f54205749544844524157204d4f524520434f4c4c41544552414c",
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12148:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e2445773ad362b40b93d011b4fb26bc93ed4142109f15da07b4722e214348eb",
                          "typeString": "literal_string \"CANNOT WITHDRAW MORE COLLATERAL\""
                        },
                        "value": "CANNOT WITHDRAW MORE COLLATERAL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e2445773ad362b40b93d011b4fb26bc93ed4142109f15da07b4722e214348eb",
                          "typeString": "literal_string \"CANNOT WITHDRAW MORE COLLATERAL\""
                        }
                      ],
                      "id": 972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12068:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12068:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "12068:123:3"
                },
                {
                  "assignments": [
                    984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 984,
                      "mutability": "mutable",
                      "name": "maxBorrowAfterWithdraw",
                      "nameLocation": "12210:22:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1058,
                      "src": "12202:30:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 983,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12202:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1006,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 995,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 991,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 985,
                                              "name": "vaults",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1399,
                                              "src": "12238:6:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                              }
                                            },
                                            "id": 988,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 986,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "12245:3:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 987,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "12245:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12238:18:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Vault_$1394_storage",
                                              "typeString": "struct BankStorage.Vault storage ref"
                                            }
                                          },
                                          "id": 989,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "collateralAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1389,
                                          "src": "12238:48:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 990,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 969,
                                          "src": "12289:6:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12238:57:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 992,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "12237:59:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 993,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1405,
                                      "src": "12299:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$1387_storage",
                                        "typeString": "struct BankStorage.Token storage ref"
                                      }
                                    },
                                    "id": 994,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1378,
                                    "src": "12299:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12237:78:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 996,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12236:80:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "expression": {
                                "id": 997,
                                "name": "debt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1402,
                                "src": "12331:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$1387_storage",
                                  "typeString": "struct BankStorage.Token storage ref"
                                }
                              },
                              "id": 998,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1378,
                              "src": "12331:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12236:105:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 1000,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "12356:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 1001,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateralizationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1367,
                            "src": "12356:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12236:150:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1003,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12235:152:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12390:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "12235:158:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12202:191:3"
                },
                {
                  "expression": {
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1007,
                      "name": "maxBorrowAfterWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "12403:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "*=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1008,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1402,
                        "src": "12429:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1380,
                      "src": "12429:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12403:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "12403:47:3"
                },
                {
                  "expression": {
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1012,
                      "name": "maxBorrowAfterWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "12460:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1013,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "12486:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1387_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1380,
                      "src": "12486:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12460:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "12460:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1018,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "12544:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                              }
                            },
                            "id": 1021,
                            "indexExpression": {
                              "expression": {
                                "id": 1019,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12551:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12551:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12544:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$1394_storage",
                              "typeString": "struct BankStorage.Vault storage ref"
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "debtAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1391,
                          "src": "12544:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1023,
                          "name": "maxBorrowAfterWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "12577:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12544:55:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43414e4e4f5420554e444552434f4c4c41544552414c495a45205641554c54",
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12613:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dc7fc6d003308cc1673b004d726fa99539763a587396ec31db97410e33baeec",
                          "typeString": "literal_string \"CANNOT UNDERCOLLATERALIZE VAULT\""
                        },
                        "value": "CANNOT UNDERCOLLATERALIZE VAULT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dc7fc6d003308cc1673b004d726fa99539763a587396ec31db97410e33baeec",
                          "typeString": "literal_string \"CANNOT UNDERCOLLATERALIZE VAULT\""
                        }
                      ],
                      "id": 1017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12523:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12523:133:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "12523:133:3"
                },
                {
                  "expression": {
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1028,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1399,
                          "src": "12666:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1394_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1031,
                        "indexExpression": {
                          "expression": {
                            "id": 1029,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12673:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12673:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12666:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1394_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1389,
                      "src": "12666:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1033,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "12705:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12666:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "12666:45:3"
                },
                {
                  "expression": {
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1036,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1408,
                        "src": "12721:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1359,
                      "src": "12721:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1039,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "12750:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12721:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1041,
                  "nodeType": "ExpressionStatement",
                  "src": "12721:35:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1047,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12811:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12811:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1049,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "12823:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1043,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "12773:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1387_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1376,
                            "src": "12773:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1042,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "12766:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2066_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12766:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2066",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "12766:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2066_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2066_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12766:64:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "12766:64:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1053,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12859:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12859:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1055,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "12871:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1052,
                      "name": "VaultWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "12845:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12845:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "EmitStatement",
                  "src": "12840:38:3"
                }
              ]
            },
            "documentation": {
              "id": 967,
              "nodeType": "StructuredDocumentation",
              "src": "11894:111:3",
              "text": " @dev Allows users to withdraw their collateral from the vault\n @param amount withdrawn"
            },
            "functionSelector": "fb839dda",
            "id": 1059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultWithdraw",
            "nameLocation": "12019:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12041:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1059,
                  "src": "12033:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12033:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12032:16:3"
            },
            "returnParameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12058:0:3"
            },
            "scope": 1213,
            "src": "12010:875:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "12952:41:3",
              "statements": [
                {
                  "expression": {
                    "id": 1064,
                    "name": "_bankFactoryOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20,
                    "src": "12969:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1063,
                  "id": 1065,
                  "nodeType": "Return",
                  "src": "12962:24:3"
                }
              ]
            },
            "functionSelector": "3149cb14",
            "id": 1067,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBankFactoryOwner",
            "nameLocation": "12900:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12919:2:3"
            },
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1062,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "12943:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12943:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12942:9:3"
            },
            "scope": 1213,
            "src": "12891:102:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "13055:124:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1073,
                          "name": "_bankFactoryOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "13073:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1074,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13094:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13094:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13073:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4953204e4f542042414e4b20464143544f5259204f574e4552",
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13106:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6138f18a3aeca7b222fc8e69e5564df56649a041afaa9995c118dcc249d4ccd9",
                          "typeString": "literal_string \"IS NOT BANK FACTORY OWNER\""
                        },
                        "value": "IS NOT BANK FACTORY OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6138f18a3aeca7b222fc8e69e5564df56649a041afaa9995c118dcc249d4ccd9",
                          "typeString": "literal_string \"IS NOT BANK FACTORY OWNER\""
                        }
                      ],
                      "id": 1072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13065:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13065:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "13065:69:3"
                },
                {
                  "expression": {
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1080,
                      "name": "_bankFactoryOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "13144:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1081,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "13164:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13144:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "13144:28:3"
                }
              ]
            },
            "functionSelector": "4b272d9a",
            "id": 1085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBankFactoryOwner",
            "nameLocation": "13008:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "13036:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "13028:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13028:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13027:18:3"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13055:0:3"
            },
            "scope": 1213,
            "src": "12999:180:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "13386:413:3",
              "statements": [
                {
                  "assignments": [
                    1098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1098,
                      "mutability": "mutable",
                      "name": "oracle",
                      "nameLocation": "13404:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "13396:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITellor_$2559",
                        "typeString": "contract ITellor"
                      },
                      "typeName": {
                        "id": 1097,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1096,
                          "name": "ITellor",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2559,
                          "src": "13396:7:3"
                        },
                        "referencedDeclaration": 2559,
                        "src": "13396:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITellor_$2559",
                          "typeString": "contract ITellor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1103,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1100,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1408,
                          "src": "13421:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Reserve_$1374_storage",
                            "typeString": "struct BankStorage.Reserve storage ref"
                          }
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "oracleContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1371,
                        "src": "13421:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1099,
                      "name": "ITellor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2559,
                      "src": "13413:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ITellor_$2559_$",
                        "typeString": "type(contract ITellor)"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13413:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITellor_$2559",
                      "typeString": "contract ITellor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13396:48:3"
                },
                {
                  "assignments": [
                    1105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1105,
                      "mutability": "mutable",
                      "name": "_count",
                      "nameLocation": "13462:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "13454:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13454:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1110,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1108,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "13506:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1106,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "13471:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITellor_$2559",
                          "typeString": "contract ITellor"
                        }
                      },
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNewValueCountbyRequestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2422,
                      "src": "13471:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13471:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13454:63:3"
                },
                {
                  "assignments": [
                    1112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1112,
                      "mutability": "mutable",
                      "name": "_time",
                      "nameLocation": "13535:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "13527:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1111,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13527:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1120,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1115,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "13595:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1116,
                          "name": "_count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "13619:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13628:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13619:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1113,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "13543:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITellor_$2559",
                          "typeString": "contract ITellor"
                        }
                      },
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimestampbyRequestIDandIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2514,
                      "src": "13543:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13543:96:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13527:112:3"
                },
                {
                  "assignments": [
                    1122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "_value",
                      "nameLocation": "13657:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "13649:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13649:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1128,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1125,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1087,
                        "src": "13686:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1126,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "13698:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1123,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "13666:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITellor_$2559",
                          "typeString": "contract ITellor"
                        }
                      },
                      "id": 1124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retrieveData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2552,
                      "src": "13666:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13666:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13649:55:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1129,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "13718:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13727:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13718:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1137,
                  "nodeType": "IfStatement",
                  "src": "13714:44:3",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "74727565",
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13738:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 1133,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1122,
                          "src": "13744:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1134,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "13752:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1135,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13737:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "functionReturnParameters": 1095,
                    "id": 1136,
                    "nodeType": "Return",
                    "src": "13730:28:3"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13776:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13783:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1140,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "13786:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1141,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "13775:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_uint256_$",
                      "typeString": "tuple(bool,int_const 0,uint256)"
                    }
                  },
                  "functionReturnParameters": 1095,
                  "id": 1142,
                  "nodeType": "Return",
                  "src": "13768:24:3"
                }
              ]
            },
            "functionSelector": "3fcad964",
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentValue",
            "nameLocation": "13194:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "13218:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "13210:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13210:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13209:20:3"
            },
            "returnParameters": {
              "id": 1095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "ifRetrieve",
                  "nameLocation": "13293:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "13288:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13288:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "13325:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "13317:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13317:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1094,
                  "mutability": "mutable",
                  "name": "_timestampRetrieved",
                  "nameLocation": "13352:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "13344:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13344:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13274:107:3"
            },
            "scope": 1213,
            "src": "13185:614:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "13963:111:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1151,
                          "name": "keeper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1147,
                          "src": "13981:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13999:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13991:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13991:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13991:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13981:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f7065726174696f6e206e6f7420616c6c6f776564",
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14003:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60a0f15b3532903e39edb01f9d141c956db9da91449f57624c99b7605966d373",
                          "typeString": "literal_string \"operation not allowed\""
                        },
                        "value": "operation not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60a0f15b3532903e39edb01f9d141c956db9da91449f57624c99b7605966d373",
                          "typeString": "literal_string \"operation not allowed\""
                        }
                      ],
                      "id": 1150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13973:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13973:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "13973:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1161,
                        "name": "KEEPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1352,
                        "src": "14047:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1162,
                        "name": "keeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "14060:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1160,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2733,
                      "src": "14037:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14037:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "14037:30:3"
                }
              ]
            },
            "documentation": {
              "id": 1145,
              "nodeType": "StructuredDocumentation",
              "src": "13805:109:3",
              "text": " @dev Allows admin to add address to keeper role\n @param keeper address of new keeper"
            },
            "functionSelector": "4032b72b",
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addKeeper",
            "nameLocation": "13928:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "keeper",
                  "nameLocation": "13946:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "13938:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13938:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13937:16:3"
            },
            "returnParameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13963:0:3"
            },
            "scope": 1213,
            "src": "13919:155:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1177,
              "nodeType": "Block",
              "src": "14252:51:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1173,
                        "name": "KEEPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1352,
                        "src": "14273:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1174,
                        "name": "oldKeeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "14286:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1172,
                      "name": "revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2753,
                      "src": "14262:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14262:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1176,
                  "nodeType": "ExpressionStatement",
                  "src": "14262:34:3"
                }
              ]
            },
            "documentation": {
              "id": 1167,
              "nodeType": "StructuredDocumentation",
              "src": "14080:117:3",
              "text": " @dev Allows admin to remove address from keeper role\n @param oldKeeper address of old keeper"
            },
            "functionSelector": "494f4188",
            "id": 1178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeKeeper",
            "nameLocation": "14211:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "mutability": "mutable",
                  "name": "oldKeeper",
                  "nameLocation": "14232:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "14224:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14224:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14223:19:3"
            },
            "returnParameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14252:0:3"
            },
            "scope": 1213,
            "src": "14202:101:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1199,
              "nodeType": "Block",
              "src": "14485:115:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1185,
                          "name": "updater",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1181,
                          "src": "14503:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14522:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14514:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14514:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14514:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14503:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f7065726174696f6e206e6f7420616c6c6f776564",
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14526:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60a0f15b3532903e39edb01f9d141c956db9da91449f57624c99b7605966d373",
                          "typeString": "literal_string \"operation not allowed\""
                        },
                        "value": "operation not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60a0f15b3532903e39edb01f9d141c956db9da91449f57624c99b7605966d373",
                          "typeString": "literal_string \"operation not allowed\""
                        }
                      ],
                      "id": 1184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14495:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14495:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "ExpressionStatement",
                  "src": "14495:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1195,
                        "name": "REPORTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1357,
                        "src": "14570:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1196,
                        "name": "updater",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "14585:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1194,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2733,
                      "src": "14560:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14560:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1198,
                  "nodeType": "ExpressionStatement",
                  "src": "14560:33:3"
                }
              ]
            },
            "documentation": {
              "id": 1179,
              "nodeType": "StructuredDocumentation",
              "src": "14309:124:3",
              "text": " @dev Allows admin to add address to price updater role\n @param updater address of new price updater"
            },
            "functionSelector": "dd8755f2",
            "id": 1200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addReporter",
            "nameLocation": "14447:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1181,
                  "mutability": "mutable",
                  "name": "updater",
                  "nameLocation": "14467:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "14459:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14459:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14458:17:3"
            },
            "returnParameters": {
              "id": 1183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14485:0:3"
            },
            "scope": 1213,
            "src": "14438:162:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1211,
              "nodeType": "Block",
              "src": "14796:54:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1207,
                        "name": "REPORTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1357,
                        "src": "14817:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1208,
                        "name": "oldUpdater",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "14832:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1206,
                      "name": "revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2753,
                      "src": "14806:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14806:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1210,
                  "nodeType": "ExpressionStatement",
                  "src": "14806:37:3"
                }
              ]
            },
            "documentation": {
              "id": 1201,
              "nodeType": "StructuredDocumentation",
              "src": "14606:132:3",
              "text": " @dev Allows admin to remove address from price updater role\n @param oldUpdater address of old price updater"
            },
            "functionSelector": "8cdcc955",
            "id": 1212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeReporter",
            "nameLocation": "14752:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "oldUpdater",
                  "nameLocation": "14775:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "14767:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14767:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14766:20:3"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14796:0:3"
            },
            "scope": 1213,
            "src": "14743:107:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1214,
        "src": "464:14388:3",
        "usedErrors": []
      }
    ],
    "src": "32:14820:3"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162002cbb38038062002cbb83398101604081905262000034916200005a565b601580546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b612c1f806200009c6000396000f3fe608060405234801561001057600080fd5b50600436106103265760003560e01c8063685a5808116101b8578063b71d7a6e11610104578063dd8755f2116100a2578063f327e3241161007c578063f327e324146106dc578063f91614eb146106e4578063fb839dda146106ec578063fc2e39a6146106ff57600080fd5b8063dd8755f2146106a3578063ec5e5e7d146106b6578063f2fde38b146106c957600080fd5b8063ca15c873116100de578063ca15c87314610664578063cb765c1d14610677578063d267974c1461067f578063d547741f1461069057600080fd5b8063b71d7a6e14610641578063c14d045414610649578063c969ac061461065c57600080fd5b80638cdcc9551161017157806391d148541161014b57806391d14854146105c8578063a217fddf146105db578063a622ee7c146105e3578063a860988c1461062c57600080fd5b80638cdcc955146105915780638da5cb5b146105a45780639010d07c146105b557600080fd5b8063685a5808146105325780636d483fe61461054a57806370c12f1e1461055b5780637649b9381461056e57806385b4e5431461058157806386ef57381461058957600080fd5b806336568abe1161027757806345fd80e4116102305780634fd889511161020a5780634fd88951146104fc5780635257b5661461050f57806353388f44146105175780635729b3941461051f57600080fd5b806345fd80e4146104ce578063494f4188146104d65780634b272d9a146104e957600080fd5b806336568abe1461043d57806338507ff5146104505780633f60d799146104635780633fcad964146104785780634032b72b146104a8578063435726c4146104bb57600080fd5b80631e522b29116102e45780632f865568116102be5780632f865568146103e85780633149cb14146103fb578063317c9e4214610420578063364bc15a1461042857600080fd5b80631e522b29146103aa578063248a9ca3146103b25780632f2ff15d146103d557600080fd5b806291a4461461032b57806301ffc9a71461034057806308dcd7c614610368578063151439501461037a57806317d7de7c146103825780631b9084b414610397575b600080fd5b61033e6103393660046126fd565b610707565b005b61035361034e366004612716565b6107a5565b60405190151581526020015b60405180910390f35b6005545b60405190815260200161035f565b600a5461036c565b61038a6107d0565b60405161035f919061276c565b61036c6103a53660046127bf565b610862565b60145461036c565b61036c6103c03660046126fd565b60009081526018602052604090206001015490565b61033e6103e33660046127dc565b61090e565b61033e6103f63660046127bf565b610938565b604d546001600160a01b03165b6040516001600160a01b03909116815260200161035f565b600b5461036c565b61036c600080516020612bca83398151915281565b61033e61044b3660046127dc565b610ba8565b61033e61045e36600461280c565b610c26565b61036c600080516020612baa83398151915281565b61048b6104863660046126fd565b610cbc565b60408051931515845260208401929092529082015260600161035f565b61033e6104b63660046127bf565b610e58565b61033e6104c93660046126fd565b610ec1565b61033e610fcc565b61033e6104e43660046127bf565b61109e565b61033e6104f73660046127bf565b6110b6565b61033e61050a3660046126fd565b611132565b60115461036c565b600e5461036c565b61033e61052d3660046126fd565b6113e4565b3360009081526002602052604090206001015461036c565b6009546001600160a01b0316610408565b61033e61056936600461285d565b611496565b61033e61057c3660046126fd565b6115c4565b61033e611749565b60135461036c565b61033e61059f3660046127bf565b611811565b6000546001600160a01b0316610408565b6104086105c3366004612973565b611829565b6103536105d63660046127dc565b611848565b61036c600081565b6106116105f13660046127bf565b600260208190526000918252604090912080546001820154919092015483565b6040805193845260208401929092529082015260600161035f565b3360009081526002602052604090205461036c565b61036c611873565b61033e61065736600461280c565b61191c565b60045461036c565b61036c6106723660046126fd565b6119b2565b60105461036c565b6003546001600160a01b0316610408565b61033e61069e3660046127dc565b6119c9565b61033e6106b13660046127bf565b6119ee565b61033e6106c43660046126fd565b611a54565b61033e6106d73660046127bf565b611bd7565b60085461036c565b600f5461036c565b61033e6106fa3660046126fd565b611c42565b60125461036c565b600061071281611dfe565b6000821161073b5760405162461bcd60e51b815260040161073290612995565b60405180910390fd5b81600f600101600082825461075091906129d6565b909155505060035461076d906001600160a01b0316333085611e08565b6040518281527f71eb3e5df75ef293b81b4c7b38db51f7a6cec007d12529cb74d4eafb7fa53222906020015b60405180910390a15050565b60006001600160e01b03198216635a05180f60e01b14806107ca57506107ca82611e79565b92915050565b6060600180546107df906129ee565b80601f016020809104026020016040519081016040528092919081815260200182805461080b906129ee565b80156108585780601f1061082d57610100808354040283529160200191610858565b820191906000526020600020905b81548152906001019060200180831161083b57829003601f168201915b5050505050905090565b6001600160a01b03811660009081526002602052604081206001015461088a57506000919050565b6005546004546001600160a01b0384166000908152600260205260409020600101546108b69190612a29565b6108c09190612a48565b600b54600a546001600160a01b0385166000908152600260205260409020546108e99190612a29565b6108f39190612a48565b6108ff90612710612a29565b6107ca9190612a48565b919050565b60008281526018602052604090206001015461092981611dfe565b6109338383611f0b565b505050565b610950600080516020612bca83398151915233611848565b806109615750610961600033611848565b6109a35760405162461bcd60e51b81526020600482015260136024820152723737ba1035b2b2b832b91037b91030b236b4b760691b6044820152606401610732565b6013546109b1906064612a29565b6109ba82610862565b10610a075760405162461bcd60e51b815260206004820152601d60248201527f5641554c54204e4f5420554e444552434f4c4c41544552414c495a45440000006044820152606401610732565b6014546001600160a01b0382166000908152600260205260408120600101549091606491829190610a389083612a29565b610a429190612a29565b610a4c9190612a48565b610a569190612a48565b6001600160a01b038316600090815260026020526040902060010154610a7c91906129d6565b600a54600454919250600091610a929084612a29565b610a9c9190612a48565b6001600160a01b038416600090815260026020526040902054909150811115610ada57506001600160a01b0382166000908152600260205260409020545b6000610ae7600a83612a48565b9050610af38183612a6a565b600f8054600090610b059084906129d6565b90915550506001600160a01b03841660009081526002602052604081208054849290610b32908490612a6a565b90915550506001600160a01b03808516600090815260026020526040812060010155604d54600954610b6992908116911683611f2d565b7f6dd29d11f8d1bcdbd79da21bf92895417dcc2f8886b3db11c8a4ce00b73de9d08484604051610b9a929190612a81565b60405180910390a150505050565b6001600160a01b0381163314610c185760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610732565b610c228282611f4c565b5050565b6000610c3181611dfe565b6009546001600160a01b0316158015610c5257506001600160a01b03851615155b610c895760405162461bcd60e51b81526020600482015260086024820152672173657461626c6560c01b6044820152606401610732565b50600980546001600160a01b0319166001600160a01b039590951694909417909355600a92909255600b91909155600c55565b6015546040516311bbb87160e21b815260048101839052600091829182916001600160a01b031690829082906346eee1c490602401602060405180830381865afa158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d329190612a9a565b905060006001600160a01b0383166377fbb66388610d51600186612a6a565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db69190612a9a565b6040516393fa491560e01b815260048101899052602481018290529091506000906001600160a01b038516906393fa491590604401602060405180830381865afa158015610e08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2c9190612a9a565b90508015610e44576001965094509250610e51915050565b5060009550859450925050505b9193909250565b6001600160a01b038116610ea65760405162461bcd60e51b81526020600482015260156024820152741bdc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b6044820152606401610732565b610ebe600080516020612bca8339815191528261090e565b50565b6000610ecc81611dfe565b600f54821115610f1e5760405162461bcd60e51b815260206004820181905260248201527f4e4f5420454e4f55474820434f4c4c41544552414c20494e20524553455256456044820152606401610732565b6000610f2b60c884612a48565b905082600f6000016000828254610f429190612a6a565b90915550506009546040517f0529afc4538720fe0b3eadc40486369ab962002d72fead1387b300c66073e7bf91610f86916001600160a01b03909116908690612a81565b60405180910390a1610faf33610f9c8386612a6a565b6009546001600160a01b03169190611f2d565b604d54600954610933916001600160a01b03918216911683611f2d565b610fe4600080516020612baa83398151915233611848565b80610ff55750610ff5600033611848565b6110415760405162461bcd60e51b815260206004820152601a60248201527f6e6f742070726963652075706461746572206f722061646d696e0000000000006044820152606401610732565b60065461104d90610cbc565b60085560048190556003546040517f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c9350611094926001600160a01b039092169190612a81565b60405180910390a1565b610ebe600080516020612bca833981519152826119c9565b604d546001600160a01b031633146111105760405162461bcd60e51b815260206004820152601960248201527f4953204e4f542042414e4b20464143544f5259204f574e4552000000000000006044820152606401610732565b604d80546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600260205260409020600101541561116657611152611873565b336000908152600260205260409020600101555b601354600454600a54336000908152600260205260408120549093929161118c91612a29565b6111969190612a48565b6111a09190612a48565b6111ab906064612a29565b6005549091506111bb9082612a29565b600b549091506111cb9082612a48565b336000908152600260205260409020600101549091506111eb9082612a6a565b601254909150612710906111ff9084612a29565b6112099190612a48565b61121390836129d6565b33600090815260026020526040812060010180549091906112359084906129d6565b90915550503360009081526002602052604090206001015481116112935760405162461bcd60e51b81526020600482015260156024820152741393d508115393d551d20810d3d313105511549053605a1b6044820152606401610732565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ff9190612a9a565b8211156113445760405162461bcd60e51b81526020600482015260136024820152724e4f5420454e4f55474820524553455256455360681b6044820152606401610732565b60165433600090815260026020819052604090912001546113659042612a6a565b111561138257336000908152600260208190526040909120429101555b81600f60010160008282546113979190612a6a565b90915550506003546113b3906001600160a01b03163384611f2d565b7f0232862a021d33ea4a70f5d509b754f0f6986aaa0ffdd5c7db4910422afc768a3383604051610799929190612a81565b600081116114045760405162461bcd60e51b815260040161073290612995565b33600090815260026020526040812080548392906114239084906129d6565b9091555050600f805482919060009061143d9084906129d6565b909155505060095461145a906001600160a01b0316333084611e08565b7f89d28cf06bdb2ee1b92cd046d58450042ad113e9f4cdabfc4d43e7c5557758d7338260405161148b929190612a81565b60405180910390a150565b601a54610100900460ff16806114ab5750303b155b806114b95750601a5460ff16155b61151c5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610732565b601a54610100900460ff1615801561153e57601a805461ffff19166101011790555b61154960008b611f6e565b601188905560128790556013869055601580546001600160a01b038085166001600160a01b03199283161790925560148790556016869055604d80549286169290911691909117905588516115a59060019060208c0190612664565b5080156115b857601a805461ff00191690555b50505050505050505050565b600081116115e45760405162461bcd60e51b815260040161073290612995565b6115ec611873565b3360009081526002602052604090206001018190558111156116505760405162461bcd60e51b815260206004820152601b60248201527f43414e4e4f54205245504159204d4f5245205448414e204f57454400000000006044820152606401610732565b3360009081526002602052604081206001018054839290611672908490612a6a565b90915550506010805482919060009061168c9084906129d6565b90915550506016543360009081526002602081905260408220015490916116b291612a48565b6016546116bf9042612a48565b6116c99190612a6a565b6016549091506116d99082612a29565b33600090815260026020819052604082200180549091906116fb9084906129d6565b9091555050600354611718906001600160a01b0316333085611e08565b7f34d657cd4dec79d6716ce5ac15b81de5751705030cbef01b43b15eae44cbc1123383604051610799929190612a81565b611761600080516020612baa83398151915233611848565b806117725750611772600033611848565b6117be5760405162461bcd60e51b815260206004820152601a60248201527f6e6f742070726963652075706461746572206f722061646d696e0000000000006044820152606401610732565b600c546117ca90610cbc565b600e55600a8190556009546040517f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c9350611094926001600160a01b039092169190612a81565b610ebe600080516020612baa833981519152826119c9565b60008281526019602052604081206118419083611f78565b9392505050565b60009182526018602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3360009081526002602052604081206001015460165490919061189a906301e13380612a48565b60165433600090815260026020819052604082200154929350916118be9190612a48565b6016546118cb9042612a48565b6118d59190612a6a565b90508082612710600f60020154866118ed9190612a29565b6118f79190612a48565b6119019190612a48565b61190b9190612a29565b61191590846129d6565b9250505090565b600061192781611dfe565b6003546001600160a01b031615801561194857506001600160a01b03851615155b61197f5760405162461bcd60e51b81526020600482015260086024820152672173657461626c6560c01b6044820152606401610732565b50600380546001600160a01b0319166001600160a01b039590951694909417909355600492909255600591909155600655565b60008181526019602052604081206107ca90611f84565b6000828152601860205260409020600101546119e481611dfe565b6109338383611f4c565b6001600160a01b038116611a3c5760405162461bcd60e51b81526020600482015260156024820152741bdc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b6044820152606401610732565b610ebe600080516020612baa8339815191528261090e565b6000611a5f81611dfe565b6003546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015611aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acb9190612a9a565b1015611b235760405162461bcd60e51b815260206004820152602160248201527f4e4f5420454e4f554748204445425420544f4b454e5320494e205245534552566044820152604560f81b6064820152608401610732565b6000611b3060c884612a48565b905082600f6001016000828254611b479190612a6a565b90915550611b6e905033611b5b8386612a6a565b6003546001600160a01b03169190611f2d565b604d54600354611b8b916001600160a01b03918216911683611f2d565b6003546040517f0529afc4538720fe0b3eadc40486369ab962002d72fead1387b300c66073e7bf91611bca916001600160a01b03909116908690612a81565b60405180910390a1505050565b6000546001600160a01b03163314611c205760405162461bcd60e51b815260206004820152600c60248201526b24a9902727aa1027aba722a960a11b6044820152606401610732565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260026020526040902054811115611ca15760405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f54205749544844524157204d4f524520434f4c4c41544552414c006044820152606401610732565b601354600454600a54336000908152600260205260408120549093929190611cca908690612a6a565b611cd49190612a29565b611cde9190612a48565b611ce89190612a48565b611cf3906064612a29565b600554909150611d039082612a29565b600b54909150611d139082612a48565b33600090815260026020526040902060010154909150811015611d785760405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f5420554e444552434f4c4c41544552414c495a45205641554c54006044820152606401610732565b3360009081526002602052604081208054849290611d97908490612a6a565b9091555050600f8054839190600090611db1908490612a6a565b9091555050600954611dcd906001600160a01b03163384611f2d565b7f0ac60fbf53b67f5a6a0c8031dd9d1610a06f01669b1a8b9af98f3a6a477e8d7c3383604051610799929190612a81565b610ebe8133611f8e565b6040516001600160a01b0380851660248301528316604482015260648101829052611e739085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611ff2565b50505050565b60006001600160e01b03198216637965db0b60e01b14806107ca57506017546040516301ffc9a760e01b81526001600160e01b0319841660048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa158015611ee7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca9190612ab3565b611f1582826120c4565b6000828152601960205260409020610933908261214a565b6109338363a9059cbb60e01b8484604051602401611e3c929190612a81565b611f56828261215f565b600082815260196020526040902061093390826121c6565b610c228282611f0b565b600061184183836121db565b60006107ca825490565b611f988282611848565b610c2257611fb0816001600160a01b03166014612205565b611fbb836020612205565b604051602001611fcc929190612ad5565b60408051601f198184030181529082905262461bcd60e51b82526107329160040161276c565b6000612047826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123a19092919063ffffffff16565b80519091501561093357808060200190518101906120659190612ab3565b6109335760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610732565b6120ce8282611848565b610c225760008281526018602090815260408083206001600160a01b03851684529091529020805460ff191660011790556121063390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611841836001600160a01b0384166123b8565b6121698282611848565b15610c225760008281526018602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611841836001600160a01b038416612407565b60008260000182815481106121f2576121f2612b4a565b9060005260206000200154905092915050565b60606000612214836002612a29565b61221f9060026129d6565b67ffffffffffffffff81111561223757612237612847565b6040519080825280601f01601f191660200182016040528015612261576020820181803683370190505b509050600360fc1b8160008151811061227c5761227c612b4a565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106122ab576122ab612b4a565b60200101906001600160f81b031916908160001a90535060006122cf846002612a29565b6122da9060016129d6565b90505b6001811115612352576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061230e5761230e612b4a565b1a60f81b82828151811061232457612324612b4a565b60200101906001600160f81b031916908160001a90535060049490941c9361234b81612b60565b90506122dd565b5083156118415760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610732565b60606123b084846000856124fa565b949350505050565b60008181526001830160205260408120546123ff575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107ca565b5060006107ca565b600081815260018301602052604081205480156124f057600061242b600183612a6a565b855490915060009061243f90600190612a6a565b90508181146124a457600086600001828154811061245f5761245f612b4a565b906000526020600020015490508087600001848154811061248257612482612b4a565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806124b5576124b5612b77565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107ca565b60009150506107ca565b60608247101561255b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610732565b6001600160a01b0385163b6125b25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610732565b600080866001600160a01b031685876040516125ce9190612b8d565b60006040518083038185875af1925050503d806000811461260b576040519150601f19603f3d011682016040523d82523d6000602084013e612610565b606091505b509150915061262082828661262b565b979650505050505050565b6060831561263a575081611841565b82511561264a5782518084602001fd5b8160405162461bcd60e51b8152600401610732919061276c565b828054612670906129ee565b90600052602060002090601f01602090048101928261269257600085556126d8565b82601f106126ab57805160ff19168380011785556126d8565b828001600101855582156126d8579182015b828111156126d85782518255916020019190600101906126bd565b506126e49291506126e8565b5090565b5b808211156126e457600081556001016126e9565b60006020828403121561270f57600080fd5b5035919050565b60006020828403121561272857600080fd5b81356001600160e01b03198116811461184157600080fd5b60005b8381101561275b578181015183820152602001612743565b83811115611e735750506000910152565b602081526000825180602084015261278b816040850160208701612740565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610ebe57600080fd5b80356109098161279f565b6000602082840312156127d157600080fd5b81356118418161279f565b600080604083850312156127ef57600080fd5b8235915060208301356128018161279f565b809150509250929050565b6000806000806080858703121561282257600080fd5b843561282d8161279f565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060008060006101208a8c03121561287c57600080fd5b89356128878161279f565b985060208a013567ffffffffffffffff808211156128a457600080fd5b818c0191508c601f8301126128b857600080fd5b8135818111156128ca576128ca612847565b604051601f8201601f19908116603f011681019083821181831017156128f2576128f2612847565b816040528281528f602084870101111561290b57600080fd5b82602086016020830137600060208483010152809c50505050505060408a0135965060608a0135955060808a0135945060a08a0135935060c08a0135925061295560e08b016127b4565b91506129646101008b016127b4565b90509295985092959850929598565b6000806040838503121561298657600080fd5b50508035926020909101359150565b602080825260119082015270416d6f756e74206973207a65726f20212160781b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156129e9576129e96129c0565b500190565b600181811c90821680612a0257607f821691505b60208210811415612a2357634e487b7160e01b600052602260045260246000fd5b50919050565b6000816000190483118215151615612a4357612a436129c0565b500290565b600082612a6557634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612a7c57612a7c6129c0565b500390565b6001600160a01b03929092168252602082015260400190565b600060208284031215612aac57600080fd5b5051919050565b600060208284031215612ac557600080fd5b8151801515811461184157600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612b0d816017850160208801612740565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612b3e816028840160208801612740565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b600081612b6f57612b6f6129c0565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251612b9f818460208701612740565b919091019291505056fe3204c940063673962b481a0395619b3dbbd137589c419e993978c1c71bcf68ecfc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4faba2646970667358221220b27c15cd15af30865595ab4b9931931f6ff93c2a2658b411645d7deb819313f564736f6c634300080b0033",
  "bytecodeSha1": "2d82ed64268f37f55fac817f57afe32c96ded439",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "BankOld",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._checkRole": {
          "175": [
            3809,
            3831,
            false
          ]
        },
        "AccessControl._grantRole": {
          "176": [
            7330,
            7352,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "177": [
            7688,
            7710,
            false
          ]
        },
        "AccessControl.renounceRole": {
          "174": [
            5885,
            5908,
            true
          ]
        }
      },
      "1": {},
      "10": {
        "SafeERC20._callOptionalReturn": {
          "183": [
            3733,
            3754,
            false
          ],
          "184": [
            3817,
            3847,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "2": {
        "Address.functionCallWithValue": {
          "178": [
            5130,
            5160,
            true
          ]
        },
        "Address.verifyCallResult": {
          "179": [
            7720,
            7727,
            false
          ],
          "180": [
            7861,
            7882,
            false
          ]
        }
      },
      "3": {
        "BankOld.addKeeper": {
          "154": [
            13981,
            14001,
            true
          ]
        },
        "BankOld.addReporter": {
          "170": [
            14503,
            14524,
            true
          ]
        },
        "BankOld.getCurrentValue": {
          "153": [
            13718,
            13728,
            false
          ]
        },
        "BankOld.liquidate": {
          "147": [
            7747,
            7779,
            true
          ],
          "148": [
            7799,
            7838,
            true
          ],
          "149": [
            7956,
            8053,
            true
          ],
          "150": [
            8438,
            8497,
            false
          ]
        },
        "BankOld.reserveDeposit": {
          "146": [
            4322,
            4332,
            true
          ]
        },
        "BankOld.reserveWithdraw": {
          "171": [
            4923,
            4983,
            true
          ]
        },
        "BankOld.reserveWithdrawCollateral": {
          "155": [
            5715,
            5750,
            true
          ]
        },
        "BankOld.setBankFactoryOwner": {
          "158": [
            13073,
            13104,
            true
          ]
        },
        "BankOld.setCollateral": {
          "151": [
            3058,
            3095,
            false
          ],
          "152": [
            3115,
            3144,
            true
          ]
        },
        "BankOld.setDebt": {
          "168": [
            3762,
            3793,
            false
          ],
          "169": [
            3797,
            3820,
            true
          ]
        },
        "BankOld.updateCollateralPrice": {
          "166": [
            6447,
            6481,
            true
          ],
          "167": [
            6501,
            6540,
            true
          ]
        },
        "BankOld.updateDebtPrice": {
          "156": [
            7009,
            7043,
            true
          ],
          "157": [
            7063,
            7102,
            true
          ]
        },
        "BankOld.vaultBorrow": {
          "159": [
            9762,
            9796,
            false
          ],
          "160": [
            10347,
            10388,
            true
          ],
          "161": [
            10466,
            10526,
            true
          ],
          "162": [
            10585,
            10648,
            false
          ]
        },
        "BankOld.vaultDeposit": {
          "163": [
            9244,
            9254,
            true
          ]
        },
        "BankOld.vaultRepay": {
          "164": [
            11193,
            11203,
            true
          ],
          "165": [
            11319,
            11358,
            true
          ]
        },
        "BankOld.vaultWithdraw": {
          "172": [
            12089,
            12134,
            true
          ],
          "173": [
            12544,
            12599,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "8": {
        "BankOld.init": {
          "181": [
            1048,
            1060,
            true
          ]
        },
        "Initializable.isConstructor": {
          "182": [
            1084,
            1095,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "AccessControl._checkRole": {
          "124": [
            3403,
            3433
          ],
          "133": [
            3847,
            4196
          ]
        },
        "AccessControl._grantRole": {
          "135": [
            7368,
            7404
          ],
          "136": [
            7418,
            7463
          ]
        },
        "AccessControl._revokeRole": {
          "137": [
            7726,
            7763
          ],
          "138": [
            7777,
            7822
          ]
        },
        "AccessControl._setupRole": {
          "132": [
            6721,
            6746
          ]
        },
        "AccessControl.getRoleAdmin": {
          "3": [
            4487,
            4516
          ]
        },
        "AccessControl.grantRole": {
          "27": [
            4886,
            4911
          ]
        },
        "AccessControl.hasRole": {
          "98": [
            3000,
            3036
          ]
        },
        "AccessControl.renounceRole": {
          "36": [
            5877,
            5960
          ],
          "38": [
            5971,
            5997
          ]
        },
        "AccessControl.revokeRole": {
          "107": [
            5266,
            5292
          ]
        },
        "AccessControl.supportsInterface": {
          "126": [
            2700,
            2804
          ]
        }
      },
      "1": {
        "AccessControlEnumerable._grantRole": {
          "127": [
            2047,
            2078
          ],
          "128": [
            2088,
            2119
          ]
        },
        "AccessControlEnumerable._revokeRole": {
          "130": [
            2303,
            2335
          ],
          "131": [
            2345,
            2379
          ]
        },
        "AccessControlEnumerable.getRoleMember": {
          "97": [
            1522,
            1557
          ]
        },
        "AccessControlEnumerable.getRoleMemberCount": {
          "106": [
            1831,
            1865
          ]
        },
        "AccessControlEnumerable.supportsInterface": {
          "23": [
            717,
            821
          ]
        }
      },
      "10": {
        "SafeERC20._callOptionalReturn": {
          "134": [
            3809,
            3894
          ]
        },
        "SafeERC20.safeTransfer": {
          "129": [
            811,
            897
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "125": [
            1048,
            1144
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "2": {
        "Address.functionCall": {
          "139": [
            4003,
            4062
          ]
        },
        "Address.functionCallWithValue": {
          "140": [
            5122,
            5203
          ],
          "142": [
            5213,
            5273
          ],
          "143": [
            5367,
            5425
          ]
        },
        "Address.isContract": {
          "141": [
            1443,
            1473
          ]
        },
        "Address.verifyCallResult": {
          "144": [
            7743,
            7760
          ],
          "145": [
            8187,
            8207
          ]
        }
      },
      "3": {
        "BankOld.addKeeper": {
          "46": [
            13973,
            14027
          ],
          "47": [
            14037,
            14067
          ]
        },
        "BankOld.addReporter": {
          "108": [
            14495,
            14550
          ],
          "109": [
            14560,
            14593
          ]
        },
        "BankOld.getBankFactoryOwner": {
          "4": [
            12962,
            12986
          ]
        },
        "BankOld.getCurrentValue": {
          "44": [
            13730,
            13758
          ],
          "45": [
            13768,
            13792
          ]
        },
        "BankOld.init": {
          "76": [
            2270,
            2309
          ],
          "77": [
            2319,
            2354
          ],
          "78": [
            2364,
            2403
          ],
          "79": [
            2413,
            2468
          ],
          "80": [
            2478,
            2517
          ],
          "81": [
            2527,
            2574
          ],
          "82": [
            2584,
            2607
          ],
          "83": [
            2617,
            2653
          ],
          "84": [
            2663,
            2678
          ]
        },
        "BankOld.liquidate": {
          "28": [
            7726,
            7883
          ],
          "29": [
            7935,
            8108
          ],
          "30": [
            8513,
            8572
          ],
          "31": [
            8682,
            8744
          ],
          "32": [
            8754,
            8814
          ],
          "33": [
            8824,
            8857
          ],
          "34": [
            8867,
            8975
          ],
          "35": [
            8985,
            9024
          ]
        },
        "BankOld.owner": {
          "11": [
            1449,
            1462
          ]
        },
        "BankOld.reserveDeposit": {
          "19": [
            4314,
            4354
          ],
          "20": [
            4364,
            4393
          ],
          "21": [
            4403,
            4526
          ],
          "22": [
            4536,
            4563
          ]
        },
        "BankOld.reserveWithdraw": {
          "110": [
            4902,
            5042
          ],
          "111": [
            5128,
            5157
          ],
          "112": [
            5167,
            5237
          ],
          "113": [
            5247,
            5315
          ],
          "114": [
            5325,
            5372
          ]
        },
        "BankOld.reserveWithdrawCollateral": {
          "48": [
            5694,
            5808
          ],
          "49": [
            5894,
            5929
          ],
          "50": [
            5939,
            5992
          ],
          "51": [
            6002,
            6112
          ],
          "52": [
            6122,
            6230
          ]
        },
        "BankOld.revokeKeeper": {
          "56": [
            14262,
            14296
          ]
        },
        "BankOld.revokeReporter": {
          "96": [
            14806,
            14843
          ]
        },
        "BankOld.setBankFactoryOwner": {
          "57": [
            13065,
            13134
          ],
          "58": [
            13144,
            13172
          ]
        },
        "BankOld.setCollateral": {
          "39": [
            3037,
            3178
          ],
          "40": [
            3188,
            3229
          ],
          "41": [
            3239,
            3278
          ],
          "42": [
            3288,
            3349
          ],
          "43": [
            3359,
            3418
          ]
        },
        "BankOld.setDebt": {
          "101": [
            3741,
            3854
          ],
          "102": [
            3864,
            3893
          ],
          "103": [
            3903,
            3930
          ],
          "104": [
            3940,
            3989
          ],
          "105": [
            3999,
            4046
          ]
        },
        "BankOld.transferOwnership": {
          "115": [
            1737,
            1754
          ]
        },
        "BankOld.updateCollateralPrice": {
          "93": [
            6426,
            6592
          ],
          "94": [
            6602,
            6716
          ],
          "95": [
            6745,
            6804
          ]
        },
        "BankOld.updateDebtPrice": {
          "53": [
            6988,
            7154
          ],
          "54": [
            7164,
            7260
          ],
          "55": [
            7289,
            7336
          ]
        },
        "BankOld.vaultBorrow": {
          "59": [
            9812,
            9865
          ],
          "60": [
            10061,
            10095
          ],
          "61": [
            10105,
            10145
          ],
          "62": [
            10155,
            10197
          ],
          "63": [
            10207,
            10316
          ],
          "64": [
            10326,
            10435
          ],
          "65": [
            10445,
            10571
          ],
          "66": [
            10736,
            10782
          ],
          "67": [
            10802,
            10831
          ],
          "68": [
            10841,
            10899
          ],
          "69": [
            10909,
            10945
          ]
        },
        "BankOld.vaultDeposit": {
          "70": [
            9236,
            9276
          ],
          "71": [
            9286,
            9331
          ],
          "72": [
            9341,
            9376
          ],
          "73": [
            9386,
            9515
          ],
          "74": [
            9525,
            9562
          ]
        },
        "BankOld.vaultRepay": {
          "85": [
            11185,
            11225
          ],
          "86": [
            11235,
            11288
          ],
          "87": [
            11298,
            11411
          ],
          "88": [
            11421,
            11460
          ],
          "89": [
            11470,
            11499
          ],
          "90": [
            11640,
            11703
          ],
          "91": [
            11713,
            11836
          ],
          "92": [
            11846,
            11881
          ]
        },
        "BankOld.vaultWithdraw": {
          "116": [
            12068,
            12191
          ],
          "117": [
            12403,
            12450
          ],
          "118": [
            12460,
            12513
          ],
          "119": [
            12523,
            12656
          ],
          "120": [
            12666,
            12711
          ],
          "121": [
            12721,
            12756
          ],
          "122": [
            12766,
            12830
          ],
          "123": [
            12840,
            12878
          ]
        }
      },
      "4": {
        "BankStorage.getCollateralTokenAddress": {
          "9": [
            3424,
            3454
          ]
        },
        "BankStorage.getCollateralTokenLastUpdatedAt": {
          "7": [
            4207,
            4238
          ]
        },
        "BankStorage.getCollateralTokenPrice": {
          "1": [
            3655,
            3678
          ]
        },
        "BankStorage.getCollateralTokenPriceGranularity": {
          "5": [
            3942,
            3976
          ]
        },
        "BankStorage.getCollateralizationRatio": {
          "10": [
            2072,
            2109
          ]
        },
        "BankStorage.getDebtTokenAddress": {
          "15": [
            2518,
            2542
          ]
        },
        "BankStorage.getDebtTokenLastUpdatedAt": {
          "16": [
            3210,
            3235
          ]
        },
        "BankStorage.getDebtTokenPrice": {
          "13": [
            2734,
            2751
          ]
        },
        "BankStorage.getDebtTokenPriceGranularity": {
          "0": [
            2969,
            2997
          ]
        },
        "BankStorage.getInterestRate": {
          "6": [
            1622,
            1649
          ]
        },
        "BankStorage.getLiquidationPenalty": {
          "2": [
            2302,
            2335
          ]
        },
        "BankStorage.getName": {
          "24": [
            1428,
            1439
          ]
        },
        "BankStorage.getOriginationFee": {
          "18": [
            1830,
            1859
          ]
        },
        "BankStorage.getReserveBalance": {
          "14": [
            4436,
            4462
          ]
        },
        "BankStorage.getReserveCollateralBalance": {
          "17": [
            4680,
            4712
          ]
        },
        "BankStorage.getVaultCollateralAmount": {
          "12": [
            4917,
            4959
          ]
        },
        "BankStorage.getVaultCollateralizationRatio": {
          "25": [
            6127,
            6135
          ],
          "26": [
            6166,
            6416
          ]
        },
        "BankStorage.getVaultDebtAmount": {
          "8": [
            5146,
            5182
          ]
        },
        "BankStorage.getVaultRepayAmount": {
          "99": [
            5460,
            5501
          ],
          "100": [
            5702,
            5817
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "37": [
            712,
            729
          ]
        }
      },
      "8": {
        "Initializable.isConstructor": {
          "75": [
            1912,
            1926
          ]
        }
      }
    }
  },
  "dependencies": [
    "AccessControl",
    "AccessControlEnumerable",
    "Address",
    "BankStorage",
    "Context",
    "IAccessControl",
    "IAccessControlEnumerable",
    "IERC165",
    "IERC20",
    "ITellor",
    "Initializable",
    "SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106103265760003560e01c8063685a5808116101b8578063b71d7a6e11610104578063dd8755f2116100a2578063f327e3241161007c578063f327e324146106dc578063f91614eb146106e4578063fb839dda146106ec578063fc2e39a6146106ff57600080fd5b8063dd8755f2146106a3578063ec5e5e7d146106b6578063f2fde38b146106c957600080fd5b8063ca15c873116100de578063ca15c87314610664578063cb765c1d14610677578063d267974c1461067f578063d547741f1461069057600080fd5b8063b71d7a6e14610641578063c14d045414610649578063c969ac061461065c57600080fd5b80638cdcc9551161017157806391d148541161014b57806391d14854146105c8578063a217fddf146105db578063a622ee7c146105e3578063a860988c1461062c57600080fd5b80638cdcc955146105915780638da5cb5b146105a45780639010d07c146105b557600080fd5b8063685a5808146105325780636d483fe61461054a57806370c12f1e1461055b5780637649b9381461056e57806385b4e5431461058157806386ef57381461058957600080fd5b806336568abe1161027757806345fd80e4116102305780634fd889511161020a5780634fd88951146104fc5780635257b5661461050f57806353388f44146105175780635729b3941461051f57600080fd5b806345fd80e4146104ce578063494f4188146104d65780634b272d9a146104e957600080fd5b806336568abe1461043d57806338507ff5146104505780633f60d799146104635780633fcad964146104785780634032b72b146104a8578063435726c4146104bb57600080fd5b80631e522b29116102e45780632f865568116102be5780632f865568146103e85780633149cb14146103fb578063317c9e4214610420578063364bc15a1461042857600080fd5b80631e522b29146103aa578063248a9ca3146103b25780632f2ff15d146103d557600080fd5b806291a4461461032b57806301ffc9a71461034057806308dcd7c614610368578063151439501461037a57806317d7de7c146103825780631b9084b414610397575b600080fd5b61033e6103393660046126fd565b610707565b005b61035361034e366004612716565b6107a5565b60405190151581526020015b60405180910390f35b6005545b60405190815260200161035f565b600a5461036c565b61038a6107d0565b60405161035f919061276c565b61036c6103a53660046127bf565b610862565b60145461036c565b61036c6103c03660046126fd565b60009081526018602052604090206001015490565b61033e6103e33660046127dc565b61090e565b61033e6103f63660046127bf565b610938565b604d546001600160a01b03165b6040516001600160a01b03909116815260200161035f565b600b5461036c565b61036c600080516020612bca83398151915281565b61033e61044b3660046127dc565b610ba8565b61033e61045e36600461280c565b610c26565b61036c600080516020612baa83398151915281565b61048b6104863660046126fd565b610cbc565b60408051931515845260208401929092529082015260600161035f565b61033e6104b63660046127bf565b610e58565b61033e6104c93660046126fd565b610ec1565b61033e610fcc565b61033e6104e43660046127bf565b61109e565b61033e6104f73660046127bf565b6110b6565b61033e61050a3660046126fd565b611132565b60115461036c565b600e5461036c565b61033e61052d3660046126fd565b6113e4565b3360009081526002602052604090206001015461036c565b6009546001600160a01b0316610408565b61033e61056936600461285d565b611496565b61033e61057c3660046126fd565b6115c4565b61033e611749565b60135461036c565b61033e61059f3660046127bf565b611811565b6000546001600160a01b0316610408565b6104086105c3366004612973565b611829565b6103536105d63660046127dc565b611848565b61036c600081565b6106116105f13660046127bf565b600260208190526000918252604090912080546001820154919092015483565b6040805193845260208401929092529082015260600161035f565b3360009081526002602052604090205461036c565b61036c611873565b61033e61065736600461280c565b61191c565b60045461036c565b61036c6106723660046126fd565b6119b2565b60105461036c565b6003546001600160a01b0316610408565b61033e61069e3660046127dc565b6119c9565b61033e6106b13660046127bf565b6119ee565b61033e6106c43660046126fd565b611a54565b61033e6106d73660046127bf565b611bd7565b60085461036c565b600f5461036c565b61033e6106fa3660046126fd565b611c42565b60125461036c565b600061071281611dfe565b6000821161073b5760405162461bcd60e51b815260040161073290612995565b60405180910390fd5b81600f600101600082825461075091906129d6565b909155505060035461076d906001600160a01b0316333085611e08565b6040518281527f71eb3e5df75ef293b81b4c7b38db51f7a6cec007d12529cb74d4eafb7fa53222906020015b60405180910390a15050565b60006001600160e01b03198216635a05180f60e01b14806107ca57506107ca82611e79565b92915050565b6060600180546107df906129ee565b80601f016020809104026020016040519081016040528092919081815260200182805461080b906129ee565b80156108585780601f1061082d57610100808354040283529160200191610858565b820191906000526020600020905b81548152906001019060200180831161083b57829003601f168201915b5050505050905090565b6001600160a01b03811660009081526002602052604081206001015461088a57506000919050565b6005546004546001600160a01b0384166000908152600260205260409020600101546108b69190612a29565b6108c09190612a48565b600b54600a546001600160a01b0385166000908152600260205260409020546108e99190612a29565b6108f39190612a48565b6108ff90612710612a29565b6107ca9190612a48565b919050565b60008281526018602052604090206001015461092981611dfe565b6109338383611f0b565b505050565b610950600080516020612bca83398151915233611848565b806109615750610961600033611848565b6109a35760405162461bcd60e51b81526020600482015260136024820152723737ba1035b2b2b832b91037b91030b236b4b760691b6044820152606401610732565b6013546109b1906064612a29565b6109ba82610862565b10610a075760405162461bcd60e51b815260206004820152601d60248201527f5641554c54204e4f5420554e444552434f4c4c41544552414c495a45440000006044820152606401610732565b6014546001600160a01b0382166000908152600260205260408120600101549091606491829190610a389083612a29565b610a429190612a29565b610a4c9190612a48565b610a569190612a48565b6001600160a01b038316600090815260026020526040902060010154610a7c91906129d6565b600a54600454919250600091610a929084612a29565b610a9c9190612a48565b6001600160a01b038416600090815260026020526040902054909150811115610ada57506001600160a01b0382166000908152600260205260409020545b6000610ae7600a83612a48565b9050610af38183612a6a565b600f8054600090610b059084906129d6565b90915550506001600160a01b03841660009081526002602052604081208054849290610b32908490612a6a565b90915550506001600160a01b03808516600090815260026020526040812060010155604d54600954610b6992908116911683611f2d565b7f6dd29d11f8d1bcdbd79da21bf92895417dcc2f8886b3db11c8a4ce00b73de9d08484604051610b9a929190612a81565b60405180910390a150505050565b6001600160a01b0381163314610c185760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610732565b610c228282611f4c565b5050565b6000610c3181611dfe565b6009546001600160a01b0316158015610c5257506001600160a01b03851615155b610c895760405162461bcd60e51b81526020600482015260086024820152672173657461626c6560c01b6044820152606401610732565b50600980546001600160a01b0319166001600160a01b039590951694909417909355600a92909255600b91909155600c55565b6015546040516311bbb87160e21b815260048101839052600091829182916001600160a01b031690829082906346eee1c490602401602060405180830381865afa158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d329190612a9a565b905060006001600160a01b0383166377fbb66388610d51600186612a6a565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db69190612a9a565b6040516393fa491560e01b815260048101899052602481018290529091506000906001600160a01b038516906393fa491590604401602060405180830381865afa158015610e08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2c9190612a9a565b90508015610e44576001965094509250610e51915050565b5060009550859450925050505b9193909250565b6001600160a01b038116610ea65760405162461bcd60e51b81526020600482015260156024820152741bdc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b6044820152606401610732565b610ebe600080516020612bca8339815191528261090e565b50565b6000610ecc81611dfe565b600f54821115610f1e5760405162461bcd60e51b815260206004820181905260248201527f4e4f5420454e4f55474820434f4c4c41544552414c20494e20524553455256456044820152606401610732565b6000610f2b60c884612a48565b905082600f6000016000828254610f429190612a6a565b90915550506009546040517f0529afc4538720fe0b3eadc40486369ab962002d72fead1387b300c66073e7bf91610f86916001600160a01b03909116908690612a81565b60405180910390a1610faf33610f9c8386612a6a565b6009546001600160a01b03169190611f2d565b604d54600954610933916001600160a01b03918216911683611f2d565b610fe4600080516020612baa83398151915233611848565b80610ff55750610ff5600033611848565b6110415760405162461bcd60e51b815260206004820152601a60248201527f6e6f742070726963652075706461746572206f722061646d696e0000000000006044820152606401610732565b60065461104d90610cbc565b60085560048190556003546040517f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c9350611094926001600160a01b039092169190612a81565b60405180910390a1565b610ebe600080516020612bca833981519152826119c9565b604d546001600160a01b031633146111105760405162461bcd60e51b815260206004820152601960248201527f4953204e4f542042414e4b20464143544f5259204f574e4552000000000000006044820152606401610732565b604d80546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600260205260409020600101541561116657611152611873565b336000908152600260205260409020600101555b601354600454600a54336000908152600260205260408120549093929161118c91612a29565b6111969190612a48565b6111a09190612a48565b6111ab906064612a29565b6005549091506111bb9082612a29565b600b549091506111cb9082612a48565b336000908152600260205260409020600101549091506111eb9082612a6a565b601254909150612710906111ff9084612a29565b6112099190612a48565b61121390836129d6565b33600090815260026020526040812060010180549091906112359084906129d6565b90915550503360009081526002602052604090206001015481116112935760405162461bcd60e51b81526020600482015260156024820152741393d508115393d551d20810d3d313105511549053605a1b6044820152606401610732565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ff9190612a9a565b8211156113445760405162461bcd60e51b81526020600482015260136024820152724e4f5420454e4f55474820524553455256455360681b6044820152606401610732565b60165433600090815260026020819052604090912001546113659042612a6a565b111561138257336000908152600260208190526040909120429101555b81600f60010160008282546113979190612a6a565b90915550506003546113b3906001600160a01b03163384611f2d565b7f0232862a021d33ea4a70f5d509b754f0f6986aaa0ffdd5c7db4910422afc768a3383604051610799929190612a81565b600081116114045760405162461bcd60e51b815260040161073290612995565b33600090815260026020526040812080548392906114239084906129d6565b9091555050600f805482919060009061143d9084906129d6565b909155505060095461145a906001600160a01b0316333084611e08565b7f89d28cf06bdb2ee1b92cd046d58450042ad113e9f4cdabfc4d43e7c5557758d7338260405161148b929190612a81565b60405180910390a150565b601a54610100900460ff16806114ab5750303b155b806114b95750601a5460ff16155b61151c5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610732565b601a54610100900460ff1615801561153e57601a805461ffff19166101011790555b61154960008b611f6e565b601188905560128790556013869055601580546001600160a01b038085166001600160a01b03199283161790925560148790556016869055604d80549286169290911691909117905588516115a59060019060208c0190612664565b5080156115b857601a805461ff00191690555b50505050505050505050565b600081116115e45760405162461bcd60e51b815260040161073290612995565b6115ec611873565b3360009081526002602052604090206001018190558111156116505760405162461bcd60e51b815260206004820152601b60248201527f43414e4e4f54205245504159204d4f5245205448414e204f57454400000000006044820152606401610732565b3360009081526002602052604081206001018054839290611672908490612a6a565b90915550506010805482919060009061168c9084906129d6565b90915550506016543360009081526002602081905260408220015490916116b291612a48565b6016546116bf9042612a48565b6116c99190612a6a565b6016549091506116d99082612a29565b33600090815260026020819052604082200180549091906116fb9084906129d6565b9091555050600354611718906001600160a01b0316333085611e08565b7f34d657cd4dec79d6716ce5ac15b81de5751705030cbef01b43b15eae44cbc1123383604051610799929190612a81565b611761600080516020612baa83398151915233611848565b806117725750611772600033611848565b6117be5760405162461bcd60e51b815260206004820152601a60248201527f6e6f742070726963652075706461746572206f722061646d696e0000000000006044820152606401610732565b600c546117ca90610cbc565b600e55600a8190556009546040517f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c9350611094926001600160a01b039092169190612a81565b610ebe600080516020612baa833981519152826119c9565b60008281526019602052604081206118419083611f78565b9392505050565b60009182526018602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3360009081526002602052604081206001015460165490919061189a906301e13380612a48565b60165433600090815260026020819052604082200154929350916118be9190612a48565b6016546118cb9042612a48565b6118d59190612a6a565b90508082612710600f60020154866118ed9190612a29565b6118f79190612a48565b6119019190612a48565b61190b9190612a29565b61191590846129d6565b9250505090565b600061192781611dfe565b6003546001600160a01b031615801561194857506001600160a01b03851615155b61197f5760405162461bcd60e51b81526020600482015260086024820152672173657461626c6560c01b6044820152606401610732565b50600380546001600160a01b0319166001600160a01b039590951694909417909355600492909255600591909155600655565b60008181526019602052604081206107ca90611f84565b6000828152601860205260409020600101546119e481611dfe565b6109338383611f4c565b6001600160a01b038116611a3c5760405162461bcd60e51b81526020600482015260156024820152741bdc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b6044820152606401610732565b610ebe600080516020612baa8339815191528261090e565b6000611a5f81611dfe565b6003546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015611aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acb9190612a9a565b1015611b235760405162461bcd60e51b815260206004820152602160248201527f4e4f5420454e4f554748204445425420544f4b454e5320494e205245534552566044820152604560f81b6064820152608401610732565b6000611b3060c884612a48565b905082600f6001016000828254611b479190612a6a565b90915550611b6e905033611b5b8386612a6a565b6003546001600160a01b03169190611f2d565b604d54600354611b8b916001600160a01b03918216911683611f2d565b6003546040517f0529afc4538720fe0b3eadc40486369ab962002d72fead1387b300c66073e7bf91611bca916001600160a01b03909116908690612a81565b60405180910390a1505050565b6000546001600160a01b03163314611c205760405162461bcd60e51b815260206004820152600c60248201526b24a9902727aa1027aba722a960a11b6044820152606401610732565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260026020526040902054811115611ca15760405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f54205749544844524157204d4f524520434f4c4c41544552414c006044820152606401610732565b601354600454600a54336000908152600260205260408120549093929190611cca908690612a6a565b611cd49190612a29565b611cde9190612a48565b611ce89190612a48565b611cf3906064612a29565b600554909150611d039082612a29565b600b54909150611d139082612a48565b33600090815260026020526040902060010154909150811015611d785760405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f5420554e444552434f4c4c41544552414c495a45205641554c54006044820152606401610732565b3360009081526002602052604081208054849290611d97908490612a6a565b9091555050600f8054839190600090611db1908490612a6a565b9091555050600954611dcd906001600160a01b03163384611f2d565b7f0ac60fbf53b67f5a6a0c8031dd9d1610a06f01669b1a8b9af98f3a6a477e8d7c3383604051610799929190612a81565b610ebe8133611f8e565b6040516001600160a01b0380851660248301528316604482015260648101829052611e739085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611ff2565b50505050565b60006001600160e01b03198216637965db0b60e01b14806107ca57506017546040516301ffc9a760e01b81526001600160e01b0319841660048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa158015611ee7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca9190612ab3565b611f1582826120c4565b6000828152601960205260409020610933908261214a565b6109338363a9059cbb60e01b8484604051602401611e3c929190612a81565b611f56828261215f565b600082815260196020526040902061093390826121c6565b610c228282611f0b565b600061184183836121db565b60006107ca825490565b611f988282611848565b610c2257611fb0816001600160a01b03166014612205565b611fbb836020612205565b604051602001611fcc929190612ad5565b60408051601f198184030181529082905262461bcd60e51b82526107329160040161276c565b6000612047826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123a19092919063ffffffff16565b80519091501561093357808060200190518101906120659190612ab3565b6109335760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610732565b6120ce8282611848565b610c225760008281526018602090815260408083206001600160a01b03851684529091529020805460ff191660011790556121063390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611841836001600160a01b0384166123b8565b6121698282611848565b15610c225760008281526018602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611841836001600160a01b038416612407565b60008260000182815481106121f2576121f2612b4a565b9060005260206000200154905092915050565b60606000612214836002612a29565b61221f9060026129d6565b67ffffffffffffffff81111561223757612237612847565b6040519080825280601f01601f191660200182016040528015612261576020820181803683370190505b509050600360fc1b8160008151811061227c5761227c612b4a565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106122ab576122ab612b4a565b60200101906001600160f81b031916908160001a90535060006122cf846002612a29565b6122da9060016129d6565b90505b6001811115612352576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061230e5761230e612b4a565b1a60f81b82828151811061232457612324612b4a565b60200101906001600160f81b031916908160001a90535060049490941c9361234b81612b60565b90506122dd565b5083156118415760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610732565b60606123b084846000856124fa565b949350505050565b60008181526001830160205260408120546123ff575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107ca565b5060006107ca565b600081815260018301602052604081205480156124f057600061242b600183612a6a565b855490915060009061243f90600190612a6a565b90508181146124a457600086600001828154811061245f5761245f612b4a565b906000526020600020015490508087600001848154811061248257612482612b4a565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806124b5576124b5612b77565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107ca565b60009150506107ca565b60608247101561255b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610732565b6001600160a01b0385163b6125b25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610732565b600080866001600160a01b031685876040516125ce9190612b8d565b60006040518083038185875af1925050503d806000811461260b576040519150601f19603f3d011682016040523d82523d6000602084013e612610565b606091505b509150915061262082828661262b565b979650505050505050565b6060831561263a575081611841565b82511561264a5782518084602001fd5b8160405162461bcd60e51b8152600401610732919061276c565b828054612670906129ee565b90600052602060002090601f01602090048101928261269257600085556126d8565b82601f106126ab57805160ff19168380011785556126d8565b828001600101855582156126d8579182015b828111156126d85782518255916020019190600101906126bd565b506126e49291506126e8565b5090565b5b808211156126e457600081556001016126e9565b60006020828403121561270f57600080fd5b5035919050565b60006020828403121561272857600080fd5b81356001600160e01b03198116811461184157600080fd5b60005b8381101561275b578181015183820152602001612743565b83811115611e735750506000910152565b602081526000825180602084015261278b816040850160208701612740565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610ebe57600080fd5b80356109098161279f565b6000602082840312156127d157600080fd5b81356118418161279f565b600080604083850312156127ef57600080fd5b8235915060208301356128018161279f565b809150509250929050565b6000806000806080858703121561282257600080fd5b843561282d8161279f565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060008060006101208a8c03121561287c57600080fd5b89356128878161279f565b985060208a013567ffffffffffffffff808211156128a457600080fd5b818c0191508c601f8301126128b857600080fd5b8135818111156128ca576128ca612847565b604051601f8201601f19908116603f011681019083821181831017156128f2576128f2612847565b816040528281528f602084870101111561290b57600080fd5b82602086016020830137600060208483010152809c50505050505060408a0135965060608a0135955060808a0135945060a08a0135935060c08a0135925061295560e08b016127b4565b91506129646101008b016127b4565b90509295985092959850929598565b6000806040838503121561298657600080fd5b50508035926020909101359150565b602080825260119082015270416d6f756e74206973207a65726f20212160781b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156129e9576129e96129c0565b500190565b600181811c90821680612a0257607f821691505b60208210811415612a2357634e487b7160e01b600052602260045260246000fd5b50919050565b6000816000190483118215151615612a4357612a436129c0565b500290565b600082612a6557634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612a7c57612a7c6129c0565b500390565b6001600160a01b03929092168252602082015260400190565b600060208284031215612aac57600080fd5b5051919050565b600060208284031215612ac557600080fd5b8151801515811461184157600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612b0d816017850160208801612740565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612b3e816028840160208801612740565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b600081612b6f57612b6f6129c0565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251612b9f818460208701612740565b919091019291505056fe3204c940063673962b481a0395619b3dbbd137589c419e993978c1c71bcf68ecfc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4faba2646970667358221220b27c15cd15af30865595ab4b9931931f6ff93c2a2658b411645d7deb819313f564736f6c634300080b0033",
  "deployedSourceMap": "464:14388:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4206:364;;;;;;:::i;:::-;;:::i;:::-;;616:212:1;;;;;;:::i;:::-;;:::i;:::-;;;655:14:17;;648:22;630:41;;618:2;603:18;616:212:1;;;;;;;;2889:115:4;2976:21;;2889:115;;;828:25:17;;;816:2;801:18;2889:115:4;682:177:17;3580:105:4;3662:16;;3580:105;;1363:83;;;:::i;:::-;;;;;;;:::i;5945:488::-;;;;;;:::i;:::-;;:::i;2229:113::-;2309:26;;2229:113;;4394:129:0;;;;;;:::i;:::-;4468:7;4494:12;;;:6;:12;;;;;:22;;;;4394:129;4773:145;;;;;;:::i;:::-;;:::i;7668:1363:3:-;;;;;;:::i;:::-;;:::i;12891:102::-;12969:17;;-1:-1:-1;;;;;12969:17:3;12891:102;;;-1:-1:-1;;;;;2893:32:17;;;2875:51;;2863:2;2848:18;12891:102:3;2729:203:17;3828:155:4;3949:27;;3828:155;;379:62;;-1:-1:-1;;;;;;;;;;;379:62:4;;5790:214:0;;;;;;:::i;:::-;;:::i;2794:631:3:-;;;;;;:::i;:::-;;:::i;488:66:4:-;;-1:-1:-1;;;;;;;;;;;488:66:4;;13185:614:3;;;;;;:::i;:::-;;:::i;:::-;;;;3615:14:17;;3608:22;3590:41;;3662:2;3647:18;;3640:34;;;;3690:18;;;3683:34;3578:2;3563:18;13185:614:3;3394:329:17;13919:155:3;;;;;;:::i;:::-;;:::i;5575:662::-;;;;;;:::i;:::-;;:::i;6942:401::-;;;:::i;14202:101::-;;;;;;:::i;:::-;;:::i;12999:180::-;;;;;;:::i;:::-;;:::i;9702:1250::-;;;;;;:::i;:::-;;:::i;1555:101:4:-;1629:20;;1555:101;;4124:121;4214:24;;4124:121;;9179:390:3;;;;;;:::i;:::-;;:::i;5076:113:4:-;5160:10;5127:7;5153:18;;;:6;:18;;;;;:29;;;5076:113;;3347:114;3431:10;:23;-1:-1:-1;;;;;3431:23:4;3347:114;;1894:791:3;;;;;;:::i;:::-;;:::i;11130:758::-;;;;;;:::i;:::-;;:::i;6374:437::-;;;:::i;1995:121:4:-;2079:30;;1995:121;;14743:107:3;;;;;;:::i;:::-;;:::i;1392:77::-;1430:7;1456:6;-1:-1:-1;;;;;1456:6:3;1392:77;;1413:151:1;;;;;;:::i;:::-;;:::i;2898:145:0:-;;;;;;:::i;:::-;;:::i;2020:49::-;;2065:4;2020:49;;1171:39:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5879:25:17;;;5935:2;5920:18;;5913:34;;;;5963:18;;;5956:34;5867:2;5852:18;1171:39:4;5677:319:17;4841:125:4;4931:10;4898:7;4924:18;;;:6;:18;;;;;:35;4841:125;;5379:445;;;:::i;3528:525:3:-;;;;;;:::i;:::-;;:::i;2665:93:4:-;2741:10;;2665:93;;1732:140:1;;;;;;:::i;:::-;;:::i;4367:102:4:-;4443:19;;4367:102;;2447;2525:4;:17;-1:-1:-1;;;;;2525:17:4;2447:102;;5152:147:0;;;;;;:::i;:::-;;:::i;14438:162:3:-;;;;;;:::i;:::-;;:::i;4793:586::-;;;;;;:::i;:::-;;:::i;1665:96::-;;;;;;:::i;:::-;;:::i;3133:109:4:-;3217:18;;3133:109;;4601:118;4687:7;:25;4601:118;;12010:875:3;;;;;;:::i;:::-;;:::i;1761:105:4:-;1837:22;;1761:105;;4206:364:3;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;4331:1:3::1;4322:6;:10;4314:40;;;;-1:-1:-1::0;;;4314:40:3::1;;;;;;;:::i;:::-;;;;;;;;;4387:6;4364:7;:19;;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4410:4:3::1;:17:::0;4403:123:::1;::::0;-1:-1:-1;;;;;4410:17:3::1;4459:10;4491:4;4510:6:::0;4403:42:::1;:123::i;:::-;4541:22;::::0;828:25:17;;;4541:22:3::1;::::0;816:2:17;801:18;4541:22:3::1;;;;;;;;4206:364:::0;;:::o;616:212:1:-;701:4;-1:-1:-1;;;;;;724:57:1;;-1:-1:-1;;;724:57:1;;:97;;;785:36;809:11;785:23;:36::i;:::-;717:104;616:212;-1:-1:-1;;616:212:1:o;1363:83:4:-;1403:13;1435:4;1428:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1363:83;:::o;5945:488::-;-1:-1:-1;;;;;6077:18:4;;6050:7;6077:18;;;:6;:18;;;;;:29;;;6073:354;;-1:-1:-1;6134:1:4;;5945:488;-1:-1:-1;5945:488:4:o;6073:354::-;6394:21;;6360:10;;-1:-1:-1;;;;;6328:18:4;;;;;;6394:21;6328:18;;;;;6360:10;6328:29;;:42;;6360:10;6328:42;:::i;:::-;6327:88;;;;:::i;:::-;6270:27;;6230:16;;-1:-1:-1;;;;;6192:18:4;;;;;;6270:27;6192:18;;;;;:35;:54;;6230:16;6192:54;:::i;:::-;6191:106;;;;:::i;:::-;6190:116;;6301:5;6190:116;:::i;:::-;6189:227;;;;:::i;6073:354::-;5945:488;;;:::o;4773:145:0:-;4468:7;4494:12;;;:6;:12;;;;;:22;;;2498:16;2509:4;2498:10;:16::i;:::-;4886:25:::1;4897:4;4903:7;4886:10;:25::i;:::-;4773:145:::0;;;:::o;7668:1363:3:-;7747:32;-1:-1:-1;;;;;;;;;;;7768:10:3;7747:7;:32::i;:::-;:91;;;-1:-1:-1;7799:39:3;2065:4:0;7827:10:3;7799:7;:39::i;:::-;7726:157;;;;-1:-1:-1;;;7726:157:3;;7594:2:17;7726:157:3;;;7576:21:17;7633:2;7613:18;;;7606:30;-1:-1:-1;;;7652:18:17;;;7645:49;7711:18;;7726:157:3;7392:343:17;7726:157:3;8017:30;;:36;;8050:3;8017:36;:::i;:::-;7956:42;7987:10;7956:30;:42::i;:::-;:97;7935:173;;;;-1:-1:-1;;;7935:173:3;;7942:2:17;7935:173:3;;;7924:21:17;7981:2;7961:18;;;7954:30;8020:31;8000:18;;;7993:59;8069:18;;7935:173:3;7740:353:17;7935:173:3;8254:26;;-1:-1:-1;;;;;8184:18:3;;8118:17;8184:18;;;:6;:18;;;;;:29;;;8118:17;;8322:3;;;;8254:26;8184:51;;8322:3;8184:51;:::i;:::-;:96;;;;:::i;:::-;8183:120;;;;:::i;:::-;:142;;;;:::i;:::-;-1:-1:-1;;;;;8138:18:3;;;;;;:6;:18;;;;;:29;;;:188;;;;:::i;:::-;8407:16;;8381:10;;8118:208;;-1:-1:-1;8336:29:3;;8369:22;;8118:208;8369:22;:::i;:::-;8368:55;;;;:::i;:::-;-1:-1:-1;;;;;8462:18:3;;;;;;:6;:18;;;;;:35;8336:87;;-1:-1:-1;8438:59:3;;8434:149;;;-1:-1:-1;;;;;;8537:18:3;;;;;;:6;:18;;;;;:35;8434:149;8593:17;8613:26;8637:2;8613:21;:26;:::i;:::-;8593:46;-1:-1:-1;8711:33:3;8593:46;8711:21;:33;:::i;:::-;8682:7;:62;;:25;;:62;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8754:18:3;;;;;;:6;:18;;;;;:60;;8793:21;;8754:18;:60;;8793:21;;8754:60;:::i;:::-;;;;-1:-1:-1;;;;;;;8824:18:3;;;8856:1;8824:18;;;:6;:18;;;;;:29;;:33;8925:17;;8874:10;:23;8867:108;;8874:23;;;;8925:17;8956:9;8867:44;:108::i;:::-;8990:34;9002:10;9014:9;8990:34;;;;;;;:::i;:::-;;;;;;;;7716:1315;;;7668:1363;:::o;5790:214:0:-;-1:-1:-1;;;;;5885:23:0;;719:10:5;5885:23:0;5877:83;;;;-1:-1:-1;;;5877:83:0;;8709:2:17;5877:83:0;;;8691:21:17;8748:2;8728:18;;;8721:30;8787:34;8767:18;;;8760:62;-1:-1:-1;;;8838:18:17;;;8831:45;8893:19;;5877:83:0;8507:411:17;5877:83:0;5971:26;5983:4;5989:7;5971:11;:26::i;:::-;5790:214;;:::o;2794:631:3:-;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;3058:10:3::1;:23:::0;-1:-1:-1;;;;;3058:23:3::1;:37:::0;:86;::::1;;;-1:-1:-1::0;;;;;;3115:29:3;::::1;::::0;::::1;3058:86;3037:141;;;::::0;-1:-1:-1;;;3037:141:3;;9125:2:17;3037:141:3::1;::::0;::::1;9107:21:17::0;9164:1;9144:18;;;9137:29;-1:-1:-1;;;9182:18:17;;;9175:38;9230:18;;3037:141:3::1;8923:331:17::0;3037:141:3::1;-1:-1:-1::0;3188:10:3::1;:41:::0;;-1:-1:-1;;;;;;3188:41:3::1;-1:-1:-1::0;;;;;3188:41:3;;;::::1;::::0;;;::::1;::::0;;;3239:16;:39;;;;3288:27;:61;;;;3359:26;:59;2794:631::o;13185:614::-;13421:22;;13471:46;;-1:-1:-1;;;13471:46:3;;;;;828:25:17;;;13288:15:3;;;;;;-1:-1:-1;;;;;13421:22:3;;13288:15;;13421:22;;13471:34;;801:18:17;;13471:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13454:63;-1:-1:-1;13527:13:3;-1:-1:-1;;;;;13543:38:3;;;13595:10;13619;13628:1;13454:63;13619:10;:::i;:::-;13543:96;;-1:-1:-1;;;;;;13543:96:3;;;;;;;;;;9622:25:17;;;;9663:18;;;9656:34;9595:18;;13543:96:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13666:38;;-1:-1:-1;;;13666:38:3;;;;;9622:25:17;;;9663:18;;;9656:34;;;13527:112:3;;-1:-1:-1;13649:14:3;;-1:-1:-1;;;;;13666:19:3;;;;;9595:18:17;;13666:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13649:55;-1:-1:-1;13718:10:3;;13714:44;;13738:4;;-1:-1:-1;13744:6:3;-1:-1:-1;13752:5:3;-1:-1:-1;13730:28:3;;-1:-1:-1;;13730:28:3;13714:44;-1:-1:-1;13776:5:3;;-1:-1:-1;13776:5:3;;-1:-1:-1;13786:5:3;-1:-1:-1;;;13185:614:3;;;;;;:::o;13919:155::-;-1:-1:-1;;;;;13981:20:3;;13973:54;;;;-1:-1:-1;;;13973:54:3;;9903:2:17;13973:54:3;;;9885:21:17;9942:2;9922:18;;;9915:30;-1:-1:-1;;;9961:18:17;;;9954:51;10022:18;;13973:54:3;9701:345:17;13973:54:3;14037:30;-1:-1:-1;;;;;;;;;;;14060:6:3;14037:9;:30::i;:::-;13919:155;:::o;5575:662::-;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;5715:7:3::1;:25:::0;:35;-1:-1:-1;5715:35:3::1;5694:114;;;::::0;-1:-1:-1;;;5694:114:3;;10253:2:17;5694:114:3::1;::::0;::::1;10235:21:17::0;;;10272:18;;;10265:30;10331:34;10311:18;;;10304:62;10383:18;;5694:114:3::1;10051:356:17::0;5694:114:3::1;5818:17;5838:12;5847:3;5838:6:::0;:12:::1;:::i;:::-;5818:32;;5923:6;5894:7;:25;;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5960:10:3::1;:23:::0;5944:48:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;5960:23:3;;::::1;::::0;5985:6;;5944:48:::1;:::i;:::-;;;;;;;;6002:110;6060:10;6084:18;6093:9:::0;6084:6;:18:::1;:::i;:::-;6009:10;:23:::0;-1:-1:-1;;;;;6009:23:3::1;::::0;6002:110;:44:::1;:110::i;:::-;6180:17;::::0;6129:10:::1;:23:::0;6122:108:::1;::::0;-1:-1:-1;;;;;6129:23:3;;::::1;::::0;6180:17:::1;6211:9:::0;6122:44:::1;:108::i;6942:401::-:0;7009:34;-1:-1:-1;;;;;;;;;;;7032:10:3;7009:7;:34::i;:::-;:93;;;-1:-1:-1;7063:39:3;2065:4:0;7091:10:3;7063:7;:39::i;:::-;6988:166;;;;-1:-1:-1;;;6988:166:3;;10614:2:17;6988:166:3;;;10596:21:17;10653:2;10633:18;;;10626:30;10692:28;10672:18;;;10665:56;10738:18;;6988:166:3;10412:350:17;6988:166:3;7230:20;;7201:59;;:15;:59::i;:::-;7179:18;7164:96;7167:10;7164:96;;;7167:4;7306:17;7294:42;;;;-1:-1:-1;7294:42:3;;-1:-1:-1;;;;;7306:17:3;;;;7164:96;7294:42;:::i;:::-;;;;;;;;6942:401::o;14202:101::-;14262:34;-1:-1:-1;;;;;;;;;;;14286:9:3;14262:10;:34::i;12999:180::-;13073:17;;-1:-1:-1;;;;;13073:17:3;13094:10;13073:31;13065:69;;;;-1:-1:-1;;;13065:69:3;;10969:2:17;13065:69:3;;;10951:21:17;11008:2;10988:18;;;10981:30;11047:27;11027:18;;;11020:55;11092:18;;13065:69:3;10767:349:17;13065:69:3;13144:17;:28;;-1:-1:-1;;;;;;13144:28:3;-1:-1:-1;;;;;13144:28:3;;;;;;;;;;12999:180::o;9702:1250::-;9769:10;9762:18;;;;:6;:18;;;;;:29;;;:34;9758:118;;9844:21;:19;:21::i;:::-;9819:10;9812:18;;;;:6;:18;;;;;:29;;:53;9758:118;10014:30;;;9989:10;9957:16;;9914:10;9885:17;9907:18;;;:6;:18;;;;;:35;9885:17;;10014:30;9989:10;9907:66;;;:::i;:::-;9906:93;;;;:::i;:::-;:138;;;;:::i;:::-;9905:146;;10048:3;9905:146;:::i;:::-;10074:21;;9885:166;;-1:-1:-1;10061:34:3;;9885:166;10061:34;:::i;:::-;10118:27;;10061:34;;-1:-1:-1;10105:40:3;;10061:34;10105:40;:::i;:::-;10175:10;10168:18;;;;:6;:18;;;;;:29;;;10105:40;;-1:-1:-1;10155:42:3;;10105:40;10155:42;:::i;:::-;10284:22;;10155:42;;-1:-1:-1;10310:5:3;;10275:31;;:6;:31;:::i;:::-;10274:41;;;;:::i;:::-;10252:64;;:6;:64;:::i;:::-;10214:10;10207:18;;;;:6;:18;;;;;:29;;:109;;:29;;:18;:109;;;;;:::i;:::-;;;;-1:-1:-1;;10354:10:3;10347:18;;;;:6;:18;;;;;:29;;;:41;-1:-1:-1;10326:109:3;;;;-1:-1:-1;;;10326:109:3;;11323:2:17;10326:109:3;;;11305:21:17;11362:2;11342:18;;;11335:30;-1:-1:-1;;;11381:18:17;;;11374:51;11442:18;;10326:109:3;11121:345:17;10326:109:3;10483:4;:17;10476:50;;-1:-1:-1;;;10476:50:3;;10520:4;10476:50;;;2875:51:17;-1:-1:-1;;;;;10483:17:3;;;;10476:35;;2848:18:17;;10476:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10466:6;:60;;10445:126;;;;-1:-1:-1;;;10445:126:3;;11673:2:17;10445:126:3;;;11655:21:17;11712:2;11692:18;;;11685:30;-1:-1:-1;;;11731:18:17;;;11724:49;11790:18;;10445:126:3;11471:343:17;10445:126:3;10634:14;;10610:10;10603:18;;;;:6;:18;;;;;;;;:28;;10585:46;;:15;:46;:::i;:::-;:63;10581:212;;;10743:10;10736:18;;;;:6;:18;;;;;;;;10767:15;10736:28;;:46;10581:212;10825:6;10802:7;:19;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;10848:4:3;:17;10841:58;;-1:-1:-1;;;;;10848:17:3;10880:10;10892:6;10841:38;:58::i;:::-;10914:31;10926:10;10938:6;10914:31;;;;;;;:::i;9179:390::-;9253:1;9244:6;:10;9236:40;;;;-1:-1:-1;;;9236:40:3;;;;;;;:::i;:::-;9293:10;9286:18;;;;:6;:18;;;;;:45;;9325:6;;9286:18;:45;;9325:6;;9286:45;:::i;:::-;;;;-1:-1:-1;;9341:7:3;:35;;9370:6;;9341:7;:25;;:35;;9370:6;;9341:35;:::i;:::-;;;;-1:-1:-1;;9393:10:3;:23;9386:129;;-1:-1:-1;;;;;9393:23:3;9448:10;9480:4;9499:6;9386:48;:129::i;:::-;9530:32;9543:10;9555:6;9530:32;;;;;;;:::i;:::-;;;;;;;;9179:390;:::o;1894:791::-;1048:12:8;;;;;;;;:31;;-1:-1:-1;1844:4:8;1888:17;1919:7;1064:15;1048:47;;;-1:-1:-1;1084:11:8;;;;1083:12;1048:47;1040:106;;;;-1:-1:-1;;;1040:106:8;;12021:2:17;1040:106:8;;;12003:21:17;12060:2;12040:18;;;12033:30;12099:34;12079:18;;;12072:62;-1:-1:-1;;;12150:18:17;;;12143:44;12204:19;;1040:106:8;11819:410:17;1040:106:8;1176:12;;;;;;;1175:13;1194:80;;;;1222:12;:19;;-1:-1:-1;;1249:18:8;;;;;1194:80;2270:39:3::1;2065:4:0;2301:7:3::0;2270:10:::1;:39::i;:::-;2319:20:::0;:35;;;2364:22;:39;;;2413:30;:55;;;2478:22;:39;;-1:-1:-1;;;;;2478:39:3;;::::1;-1:-1:-1::0;;;;;;2478:39:3;;::::1;;::::0;;;2527:26;:47;;;2584:14;:23;;;2617:17:::1;:36:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2663:15;;::::1;::::0;2478:39;;2663:15:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1292:14:8::0;1288:55;;;1316:12;:20;;-1:-1:-1;;1316:20:8;;;1288:55;1034:313;1894:791:3;;;;;;;;;:::o;11130:758::-;11202:1;11193:6;:10;11185:40;;;;-1:-1:-1;;;11185:40:3;;;;;;;:::i;:::-;11267:21;:19;:21::i;:::-;11242:10;11235:18;;;;:6;:18;;;;;:29;;:53;;;11319:39;;;11298:113;;;;-1:-1:-1;;;11298:113:3;;12436:2:17;11298:113:3;;;12418:21:17;12475:2;12455:18;;;12448:30;12514:29;12494:18;;;12487:57;12561:18;;11298:113:3;12234:351:17;11298:113:3;11428:10;11421:18;;;;:6;:18;;;;;:29;;:39;;11454:6;;11421:18;:39;;11454:6;;11421:39;:::i;:::-;;;;-1:-1:-1;;11470:19:3;:29;;11493:6;;11470:19;;;:29;;11493:6;;11470:29;:::i;:::-;;;;-1:-1:-1;;11615:14:3;;11591:10;11509:22;11584:18;;;:6;:18;;;;;;;:28;;11509:22;;11584:45;;;:::i;:::-;11553:14;;11535:32;;:15;:32;:::i;:::-;11534:96;;;;:::i;:::-;11689:14;;11509:121;;-1:-1:-1;11672:31:3;;11509:121;11672:31;:::i;:::-;11647:10;11640:18;;;;:6;:18;;;;;;;:28;:63;;:28;;:18;:63;;;;;:::i;:::-;;;;-1:-1:-1;;11720:4:3;:17;11713:123;;-1:-1:-1;;;;;11720:17:3;11769:10;11801:4;11820:6;11713:42;:123::i;:::-;11851:30;11862:10;11874:6;11851:30;;;;;;;:::i;6374:437::-;6447:34;-1:-1:-1;;;;;;;;;;;6470:10:3;6447:7;:34::i;:::-;:93;;;-1:-1:-1;6501:39:3;2065:4:0;6529:10:3;6501:7;:39::i;:::-;6426:166;;;;-1:-1:-1;;;6426:166:3;;10614:2:17;6426:166:3;;;10596:21:17;10653:2;10633:18;;;10626:30;10692:28;10672:18;;;10665:56;10738:18;;6426:166:3;10412:350:17;6426:166:3;6680:26;;6651:65;;:15;:65::i;:::-;6623:24;6602:114;6605:16;6602:114;;;6605:10;6762:23;6750:54;;;;-1:-1:-1;6750:54:3;;-1:-1:-1;;;;;6762:23:3;;;;6602:114;6750:54;:::i;14743:107::-;14806:37;-1:-1:-1;;;;;;;;;;;14832:10:3;14806;:37::i;1413:151:1:-;1503:7;1529:18;;;:12;:18;;;;;:28;;1551:5;1529:21;:28::i;:::-;1522:35;1413:151;-1:-1:-1;;;1413:151:1:o;2898:145:0:-;2984:4;3007:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3007:29:0;;;;;;;;;;;;;;;2898:145::o;5379:445:4:-;5479:10;5431:17;5472:18;;;:6;:18;;;;;:29;;;5547:14;;5472:29;;5431:17;5536:25;;:8;:25;:::i;:::-;5677:14;;5653:10;5571:22;5646:18;;;:6;:18;;;;;;;:28;;5511:50;;-1:-1:-1;5571:22:4;5646:45;;5677:14;5646:45;:::i;:::-;5615:14;;5597:32;;:15;:32;:::i;:::-;5596:96;;;;:::i;:::-;5571:121;;5803:14;5773;5765:5;5741:7;:20;;;5729:9;:32;;;;:::i;:::-;5728:42;;;;:::i;:::-;:59;;;;:::i;:::-;5727:90;;;;:::i;:::-;5702:115;;;;:::i;:::-;;;5450:374;;5379:445;:::o;3528:525:3:-;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;3762:4:3::1;:17:::0;-1:-1:-1;;;;;3762:17:3::1;:31:::0;:58;::::1;;;-1:-1:-1::0;;;;;;3797:23:3;::::1;::::0;::::1;3762:58;3741:113;;;::::0;-1:-1:-1;;;3741:113:3;;9125:2:17;3741:113:3::1;::::0;::::1;9107:21:17::0;9164:1;9144:18;;;9137:29;-1:-1:-1;;;9182:18:17;;;9175:38;9230:18;;3741:113:3::1;8923:331:17::0;3741:113:3::1;-1:-1:-1::0;3864:4:3::1;:29:::0;;-1:-1:-1;;;;;;3864:29:3::1;-1:-1:-1::0;;;;;3864:29:3;;;::::1;::::0;;;::::1;::::0;;;3903:10;:27;;;;3940:21;:49;;;;3999:20;:47;3528:525::o;1732:140:1:-;1812:7;1838:18;;;:12;:18;;;;;:27;;:25;:27::i;5152:147:0:-;4468:7;4494:12;;;:6;:12;;;;;:22;;;2498:16;2509:4;2498:10;:16::i;:::-;5266:26:::1;5278:4;5284:7;5266:11;:26::i;14438:162:3:-:0;-1:-1:-1;;;;;14503:21:3;;14495:55;;;;-1:-1:-1;;;14495:55:3;;9903:2:17;14495:55:3;;;9885:21:17;9942:2;9922:18;;;9915:30;-1:-1:-1;;;9961:18:17;;;9954:51;10022:18;;14495:55:3;9701:345:17;14495:55:3;14560:33;-1:-1:-1;;;;;;;;;;;14585:7:3;14560:9;:33::i;4793:586::-;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;4930:4:3::1;:17:::0;4923:50:::1;::::0;-1:-1:-1;;;4923:50:3;;4967:4:::1;4923:50;::::0;::::1;2875:51:17::0;4977:6:3;;-1:-1:-1;;;;;4930:17:3::1;::::0;4923:35:::1;::::0;2848:18:17;;4923:50:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;4902:140;;;::::0;-1:-1:-1;;;4902:140:3;;12792:2:17;4902:140:3::1;::::0;::::1;12774:21:17::0;12831:2;12811:18;;;12804:30;12870:34;12850:18;;;12843:62;-1:-1:-1;;;12921:18:17;;;12914:31;12962:19;;4902:140:3::1;12590:397:17::0;4902:140:3::1;5052:17;5072:12;5081:3;5072:6:::0;:12:::1;:::i;:::-;5052:32;;5151:6;5128:7;:19;;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5167:70:3::1;::::0;-1:-1:-1;5206:10:3::1;5218:18;5227:9:::0;5218:6;:18:::1;:::i;:::-;5174:4;:17:::0;-1:-1:-1;;;;;5174:17:3::1;::::0;5167:70;:38:::1;:70::i;:::-;5286:17;::::0;5254:4:::1;:17:::0;5247:68:::1;::::0;-1:-1:-1;;;;;5254:17:3;;::::1;::::0;5286::::1;5305:9:::0;5247:38:::1;:68::i;:::-;5346:4;:17:::0;5330:42:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;5346:17:3;;::::1;::::0;5365:6;;5330:42:::1;:::i;:::-;;;;;;;;4892:487;4793:586:::0;;:::o;1665:96::-;1255:6;;-1:-1:-1;;;;;1255:6:3;1265:10;1255:20;1247:45;;;;-1:-1:-1;;;1247:45:3;;13194:2:17;1247:45:3;;;13176:21:17;13233:2;13213:18;;;13206:30;-1:-1:-1;;;13252:18:17;;;13245:42;13304:18;;1247:45:3;12992:336:17;1247:45:3;1737:6:::1;:17:::0;;-1:-1:-1;;;;;;1737:17:3::1;-1:-1:-1::0;;;;;1737:17:3;;;::::1;::::0;;;::::1;::::0;;1665:96::o;12010:875::-;12106:10;12099:18;;;;:6;:18;;;;;:35;12089:45;;;12068:123;;;;-1:-1:-1;;;12068:123:3;;13535:2:17;12068:123:3;;;13517:21:17;13574:2;13554:18;;;13547:30;13613:33;13593:18;;;13586:61;13664:18;;12068:123:3;13333:355:17;12068:123:3;12356:30;;;12331:10;12299:16;;12245:10;12202:30;12238:18;;;:6;:18;;;;;:48;12202:30;;12356;12331:10;12299:16;12238:57;;12289:6;;12238:57;:::i;:::-;12237:78;;;;:::i;:::-;12236:105;;;;:::i;:::-;:150;;;;:::i;:::-;12235:158;;12390:3;12235:158;:::i;:::-;12429:21;;12202:191;;-1:-1:-1;12403:47:3;;12202:191;12403:47;:::i;:::-;12486:27;;12403:47;;-1:-1:-1;12460:53:3;;12403:47;12460:53;:::i;:::-;12551:10;12544:18;;;;:6;:18;;;;;:29;;;12460:53;;-1:-1:-1;12544:55:3;-1:-1:-1;12544:55:3;12523:133;;;;-1:-1:-1;;;12523:133:3;;13895:2:17;12523:133:3;;;13877:21:17;13934:2;13914:18;;;13907:30;13973:33;13953:18;;;13946:61;14024:18;;12523:133:3;13693:355:17;12523:133:3;12673:10;12666:18;;;;:6;:18;;;;;:45;;12705:6;;12666:18;:45;;12705:6;;12666:45;:::i;:::-;;;;-1:-1:-1;;12721:7:3;:35;;12750:6;;12721:7;:25;;:35;;12750:6;;12721:35;:::i;:::-;;;;-1:-1:-1;;12773:10:3;:23;12766:64;;-1:-1:-1;;;;;12773:23:3;12811:10;12823:6;12766:44;:64::i;:::-;12845:33;12859:10;12871:6;12845:33;;;;;;;:::i;3337:103:0:-;3403:30;3414:4;719:10:5;3403::0;:30::i;910:241:10:-;1075:68;;-1:-1:-1;;;;;14311:15:17;;;1075:68:10;;;14293:34:17;14363:15;;14343:18;;;14336:43;14395:18;;;14388:34;;;1048:96:10;;1068:5;;-1:-1:-1;;;1098:27:10;14228:18:17;;1075:68:10;;;;-1:-1:-1;;1075:68:10;;;;;;;;;;;;;;-1:-1:-1;;;;;1075:68:10;-1:-1:-1;;;;;;1075:68:10;;;;;;;;;;1048:19;:96::i;:::-;910:241;;;;:::o;2599:212:0:-;2684:4;-1:-1:-1;;;;;;2707:47:0;;-1:-1:-1;;;2707:47:0;;:97;;-1:-1:-1;2758:15:0;;:46;;-1:-1:-1;;;2758:46:0;;-1:-1:-1;;;;;;14595:33:17;;2758:46:0;;;14577:52:17;-1:-1:-1;;;;;2758:15:0;;;;:33;;14550:18:17;;2758:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1960:166:1:-;2047:31;2064:4;2070:7;2047:16;:31::i;:::-;2088:18;;;;:12;:18;;;;;:31;;2111:7;2088:22;:31::i;699:205:10:-;811:86;831:5;861:23;;;886:2;890:5;838:58;;;;;;;;;:::i;2215:171:1:-;2303:32;2321:4;2327:7;2303:17;:32::i;:::-;2345:18;;;;:12;:18;;;;;:34;;2371:7;2345:25;:34::i;6643:110:0:-;6721:25;6732:4;6738:7;6721:10;:25::i;8870:156:7:-;8944:7;8994:22;8998:3;9010:5;8994:3;:22::i;8413:115::-;8476:7;8502:19;8510:3;4028:18;;3946:107;3721:492:0;3809:22;3817:4;3823:7;3809;:22::i;:::-;3804:403;;3992:41;4020:7;-1:-1:-1;;;;;3992:41:0;4030:2;3992:19;:41::i;:::-;4104:38;4132:4;4139:2;4104:19;:38::i;:::-;3899:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3899:265:0;;;;;;;;;;-1:-1:-1;;;3847:349:0;;;;;;;:::i;3205:706:10:-;3624:23;3650:69;3678:4;3650:69;;;;;;;;;;;;;;;;;3658:5;-1:-1:-1;;;;;3650:27:10;;;:69;;;;;:::i;:::-;3733:17;;3624:95;;-1:-1:-1;3733:21:10;3729:176;;3828:10;3817:30;;;;;;;;;;;;:::i;:::-;3809:85;;;;-1:-1:-1;;;3809:85:10;;15915:2:17;3809:85:10;;;15897:21:17;15954:2;15934:18;;;15927:30;15993:34;15973:18;;;15966:62;-1:-1:-1;;;16044:18:17;;;16037:40;16094:19;;3809:85:10;15713:406:17;7247:233:0;7330:22;7338:4;7344:7;7330;:22::i;:::-;7325:149;;7368:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7368:29:0;;;;;;;;;:36;;-1:-1:-1;;7368:36:0;7400:4;7368:36;;;7450:12;719:10:5;;640:96;7450:12:0;-1:-1:-1;;;;;7423:40:0;7441:7;-1:-1:-1;;;;;7423:40:0;7435:4;7423:40;;;;;;;;;;7247:233;;:::o;7612:150:7:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:7;;7705:4;:50::i;7605:234:0:-;7688:22;7696:4;7702:7;7688;:22::i;:::-;7684:149;;;7758:5;7726:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7726:29:0;;;;;;;;;;:37;;-1:-1:-1;;7726:37:0;;;7782:40;719:10:5;;7726:12:0;;7782:40;;7758:5;7782:40;7605:234;;:::o;7930:156:7:-;8003:4;8026:53;8034:3;-1:-1:-1;;;;;8054:23:7;;8026:7;:53::i;4395:118::-;4462:7;4488:3;:11;;4500:5;4488:18;;;;;;;;:::i;:::-;;;;;;;;;4481:25;;4395:118;;;;:::o;1588:441:11:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:11;;1688:47;;-1:-1:-1;;;1745:6:11;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:11;;;;;;;;;-1:-1:-1;;;1770:6:11;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:11;;;;;;;;-1:-1:-1;1800:9:11;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:11;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:11;;;;;;;;-1:-1:-1;1915:1:11;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:11;;1936:55;;;;-1:-1:-1;;;1936:55:11;;16599:2:17;1936:55:11;;;16581:21:17;;;16618:18;;;16611:30;16677:34;16657:18;;;16650:62;16729:18;;1936:55:11;16397:356:17;3846:223:2;3979:12;4010:52;4032:6;4040:4;4046:1;4049:12;4010:21;:52::i;:::-;4003:59;3846:223;-1:-1:-1;;;;3846:223:2:o;1697:404:7:-;1760:4;3834:19;;;:12;;;:19;;;;;;1776:319;;-1:-1:-1;1818:23:7;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:7;2072:12;;2269:1388;2335:4;2472:19;;;:12;;;:19;;;;;;2506:15;;2502:1149;;2875:21;2899:14;2912:1;2899:10;:14;:::i;:::-;2947:18;;2875:38;;-1:-1:-1;2927:17:7;;2947:22;;2968:1;;2947:22;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;;;:::i;:::-;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3288:23;;;:12;;;:23;;;;;:36;;;2984:398;3460:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;;;4933:499:2;5098:12;5155:5;5130:21;:30;;5122:81;;;;-1:-1:-1;;;5122:81:2;;17092:2:17;5122:81:2;;;17074:21:17;17131:2;17111:18;;;17104:30;17170:34;17150:18;;;17143:62;-1:-1:-1;;;17221:18:17;;;17214:36;17267:19;;5122:81:2;16890:402:17;5122:81:2;-1:-1:-1;;;;;1450:19:2;;;5213:60;;;;-1:-1:-1;;;5213:60:2;;17499:2:17;5213:60:2;;;17481:21:17;17538:2;17518:18;;;17511:30;17577:31;17557:18;;;17550:59;17626:18;;5213:60:2;17297:353:17;5213:60:2;5285:12;5299:23;5326:6;-1:-1:-1;;;;;5326:11:2;5345:5;5352:4;5326:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:73;;;;5374:51;5391:7;5400:10;5412:12;5374:16;:51::i;:::-;5367:58;4933:499;-1:-1:-1;;;;;;;4933:499:2:o;7546:692::-;7692:12;7720:7;7716:516;;;-1:-1:-1;7750:10:2;7743:17;;7716:516;7861:17;;:21;7857:365;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;7857:365;8194:12;8187:20;;-1:-1:-1;;;8187:20:2;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:17;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:17;;14:180;-1:-1:-1;14:180:17:o;199:286::-;257:6;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;352:23;;-1:-1:-1;;;;;;404:32:17;;394:43;;384:71;;451:1;448;441:12;864:258;936:1;946:113;960:6;957:1;954:13;946:113;;;1036:11;;;1030:18;1017:11;;;1010:39;982:2;975:10;946:113;;;1077:6;1074:1;1071:13;1068:48;;;-1:-1:-1;;1112:1:17;1094:16;;1087:27;864:258::o;1127:383::-;1276:2;1265:9;1258:21;1239:4;1308:6;1302:13;1351:6;1346:2;1335:9;1331:18;1324:34;1367:66;1426:6;1421:2;1410:9;1406:18;1401:2;1393:6;1389:15;1367:66;:::i;:::-;1494:2;1473:15;-1:-1:-1;;1469:29:17;1454:45;;;;1501:2;1450:54;;1127:383;-1:-1:-1;;1127:383:17:o;1515:131::-;-1:-1:-1;;;;;1590:31:17;;1580:42;;1570:70;;1636:1;1633;1626:12;1651:134;1719:20;;1748:31;1719:20;1748:31;:::i;1790:247::-;1849:6;1902:2;1890:9;1881:7;1877:23;1873:32;1870:52;;;1918:1;1915;1908:12;1870:52;1957:9;1944:23;1976:31;2001:5;1976:31;:::i;2409:315::-;2477:6;2485;2538:2;2526:9;2517:7;2513:23;2509:32;2506:52;;;2554:1;2551;2544:12;2506:52;2590:9;2577:23;2567:33;;2650:2;2639:9;2635:18;2622:32;2663:31;2688:5;2663:31;:::i;:::-;2713:5;2703:15;;;2409:315;;;;;:::o;2937:452::-;3023:6;3031;3039;3047;3100:3;3088:9;3079:7;3075:23;3071:33;3068:53;;;3117:1;3114;3107:12;3068:53;3156:9;3143:23;3175:31;3200:5;3175:31;:::i;:::-;3225:5;3277:2;3262:18;;3249:32;;-1:-1:-1;3328:2:17;3313:18;;3300:32;;3379:2;3364:18;3351:32;;-1:-1:-1;2937:452:17;-1:-1:-1;;;2937:452:17:o;3728:127::-;3789:10;3784:3;3780:20;3777:1;3770:31;3820:4;3817:1;3810:15;3844:4;3841:1;3834:15;3860:1559;4009:6;4017;4025;4033;4041;4049;4057;4065;4073;4126:3;4114:9;4105:7;4101:23;4097:33;4094:53;;;4143:1;4140;4133:12;4094:53;4182:9;4169:23;4201:31;4226:5;4201:31;:::i;:::-;4251:5;-1:-1:-1;4307:2:17;4292:18;;4279:32;4330:18;4360:14;;;4357:34;;;4387:1;4384;4377:12;4357:34;4425:6;4414:9;4410:22;4400:32;;4470:7;4463:4;4459:2;4455:13;4451:27;4441:55;;4492:1;4489;4482:12;4441:55;4528:2;4515:16;4550:2;4546;4543:10;4540:36;;;4556:18;;:::i;:::-;4631:2;4625:9;4599:2;4685:13;;-1:-1:-1;;4681:22:17;;;4705:2;4677:31;4673:40;4661:53;;;4729:18;;;4749:22;;;4726:46;4723:72;;;4775:18;;:::i;:::-;4815:10;4811:2;4804:22;4850:2;4842:6;4835:18;4890:7;4885:2;4880;4876;4872:11;4868:20;4865:33;4862:53;;;4911:1;4908;4901:12;4862:53;4967:2;4962;4958;4954:11;4949:2;4941:6;4937:15;4924:46;5012:1;5007:2;5002;4994:6;4990:15;4986:24;4979:35;5033:6;5023:16;;;;;;;5086:2;5075:9;5071:18;5058:32;5048:42;;5137:2;5126:9;5122:18;5109:32;5099:42;;5188:3;5177:9;5173:19;5160:33;5150:43;;5240:3;5229:9;5225:19;5212:33;5202:43;;5292:3;5281:9;5277:19;5264:33;5254:43;;5316:39;5350:3;5339:9;5335:19;5316:39;:::i;:::-;5306:49;;5374:39;5408:3;5397:9;5393:19;5374:39;:::i;:::-;5364:49;;3860:1559;;;;;;;;;;;:::o;5424:248::-;5492:6;5500;5553:2;5541:9;5532:7;5528:23;5524:32;5521:52;;;5569:1;5566;5559:12;5521:52;-1:-1:-1;;5592:23:17;;;5662:2;5647:18;;;5634:32;;-1:-1:-1;5424:248:17:o;6001:341::-;6203:2;6185:21;;;6242:2;6222:18;;;6215:30;-1:-1:-1;;;6276:2:17;6261:18;;6254:47;6333:2;6318:18;;6001:341::o;6347:127::-;6408:10;6403:3;6399:20;6396:1;6389:31;6439:4;6436:1;6429:15;6463:4;6460:1;6453:15;6479:128;6519:3;6550:1;6546:6;6543:1;6540:13;6537:39;;;6556:18;;:::i;:::-;-1:-1:-1;6592:9:17;;6479:128::o;6612:380::-;6691:1;6687:12;;;;6734;;;6755:61;;6809:4;6801:6;6797:17;6787:27;;6755:61;6862:2;6854:6;6851:14;6831:18;6828:38;6825:161;;;6908:10;6903:3;6899:20;6896:1;6889:31;6943:4;6940:1;6933:15;6971:4;6968:1;6961:15;6825:161;;6612:380;;;:::o;6997:168::-;7037:7;7103:1;7099;7095:6;7091:14;7088:1;7085:21;7080:1;7073:9;7066:17;7062:45;7059:71;;;7110:18;;:::i;:::-;-1:-1:-1;7150:9:17;;6997:168::o;7170:217::-;7210:1;7236;7226:132;;7280:10;7275:3;7271:20;7268:1;7261:31;7315:4;7312:1;7305:15;7343:4;7340:1;7333:15;7226:132;-1:-1:-1;7372:9:17;;7170:217::o;8098:125::-;8138:4;8166:1;8163;8160:8;8157:34;;;8171:18;;:::i;:::-;-1:-1:-1;8208:9:17;;8098:125::o;8228:274::-;-1:-1:-1;;;;;8420:32:17;;;;8402:51;;8484:2;8469:18;;8462:34;8390:2;8375:18;;8228:274::o;9259:184::-;9329:6;9382:2;9370:9;9361:7;9357:23;9353:32;9350:52;;;9398:1;9395;9388:12;9350:52;-1:-1:-1;9421:16:17;;9259:184;-1:-1:-1;9259:184:17:o;14640:277::-;14707:6;14760:2;14748:9;14739:7;14735:23;14731:32;14728:52;;;14776:1;14773;14766:12;14728:52;14808:9;14802:16;14861:5;14854:13;14847:21;14840:5;14837:32;14827:60;;14883:1;14880;14873:12;14922:786;15333:25;15328:3;15321:38;15303:3;15388:6;15382:13;15404:62;15459:6;15454:2;15449:3;15445:12;15438:4;15430:6;15426:17;15404:62;:::i;:::-;-1:-1:-1;;;15525:2:17;15485:16;;;15517:11;;;15510:40;15575:13;;15597:63;15575:13;15646:2;15638:11;;15631:4;15619:17;;15597:63;:::i;:::-;15680:17;15699:2;15676:26;;14922:786;-1:-1:-1;;;;14922:786:17:o;16124:127::-;16185:10;16180:3;16176:20;16173:1;16166:31;16216:4;16213:1;16206:15;16240:4;16237:1;16230:15;16256:136;16295:3;16323:5;16313:39;;16332:18;;:::i;:::-;-1:-1:-1;;;16368:18:17;;16256:136::o;16758:127::-;16819:10;16814:3;16810:20;16807:1;16800:31;16850:4;16847:1;16840:15;16874:4;16871:1;16864:15;17655:274;17784:3;17822:6;17816:13;17838:53;17884:6;17879:3;17872:4;17864:6;17860:17;17838:53;:::i;:::-;17907:16;;;;;17655:274;-1:-1:-1;;17655:274:17:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addKeeper(address)": {
        "details": "Allows admin to add address to keeper role",
        "params": {
          "keeper": "address of new keeper"
        }
      },
      "addReporter(address)": {
        "details": "Allows admin to add address to price updater role",
        "params": {
          "updater": "address of new price updater"
        }
      },
      "getCollateralTokenAddress()": {
        "details": "Getter function for debt token address",
        "returns": {
          "_0": "debt token price"
        }
      },
      "getCollateralTokenLastUpdatedAt()": {
        "details": "Getter function for the collateral token last update time",
        "returns": {
          "_0": "collateral token last update time"
        }
      },
      "getCollateralTokenPrice()": {
        "details": "Getter function for the collateral token price",
        "returns": {
          "_0": "collateral token price"
        }
      },
      "getCollateralTokenPriceGranularity()": {
        "details": "Getter function for the collateral token price granularity",
        "returns": {
          "_0": "collateral token price granularity"
        }
      },
      "getCollateralizationRatio()": {
        "details": "Getter function for the current collateralization ratio",
        "returns": {
          "_0": "collateralization ratio"
        }
      },
      "getDebtTokenAddress()": {
        "details": "Getter function for debt token address",
        "returns": {
          "_0": "debt token price"
        }
      },
      "getDebtTokenLastUpdatedAt()": {
        "details": "Getter function for the debt token last update time",
        "returns": {
          "_0": "debt token last update time"
        }
      },
      "getDebtTokenPrice()": {
        "details": "Getter function for the debt token(reserve) price",
        "returns": {
          "_0": "debt token price"
        }
      },
      "getDebtTokenPriceGranularity()": {
        "details": "Getter function for the debt token price granularity",
        "returns": {
          "_0": "debt token price granularity"
        }
      },
      "getInterestRate()": {
        "details": "Getter function for the current interest rate",
        "returns": {
          "_0": "interest rate"
        }
      },
      "getLiquidationPenalty()": {
        "details": "Getter function for the liquidation penalty",
        "returns": {
          "_0": "liquidation penalty"
        }
      },
      "getName()": {
        "details": "Getter function for the bank name",
        "returns": {
          "_0": "bank name"
        }
      },
      "getOriginationFee()": {
        "details": "Getter function for the origination fee",
        "returns": {
          "_0": "origination fee"
        }
      },
      "getReserveBalance()": {
        "details": "Getter function for the debt token(reserve) balance",
        "returns": {
          "_0": "debt reserve balance"
        }
      },
      "getReserveCollateralBalance()": {
        "details": "Getter function for the debt reserve collateral balance",
        "returns": {
          "_0": "collateral reserve balance"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getVaultCollateralAmount()": {
        "details": "Getter function for the user's vault collateral amount",
        "returns": {
          "_0": "collateral amount"
        }
      },
      "getVaultCollateralizationRatio(address)": {
        "details": "Getter function for the collateralization ratio",
        "returns": {
          "_0": "collateralization ratio"
        }
      },
      "getVaultDebtAmount()": {
        "details": "Getter function for the user's vault debt amount",
        "returns": {
          "_0": "debt amount"
        }
      },
      "getVaultRepayAmount()": {
        "details": "Getter function for the user's vault debt amount   uses a simple interest formula (i.e. not compound  interest)",
        "returns": {
          "principal": "debt amount"
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "init(address,string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "details": "This function sets the fundamental parameters for the bank      and assigns the first admin"
      },
      "liquidate(address)": {
        "details": "Only keepers or admins can use this function to liquidate a vault's debt, the bank admins gets the collateral liquidated, liquidated collateral is charged a 10% fee which gets paid to the bankFactoryOwner",
        "params": {
          "vaultOwner": "is the user the bank admins wants to liquidate"
        }
      },
      "owner()": {
        "details": "Returns the owner of the bank"
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "reserveDeposit(uint256)": {
        "details": "This function allows the Bank owner to deposit the reserve (debt tokens)",
        "params": {
          "amount": "is the amount to deposit"
        }
      },
      "reserveWithdraw(uint256)": {
        "details": "This function allows the Bank owner to withdraw the reserve (debt tokens)      Withdraws incur a 0.5% fee paid to the bankFactoryOwner",
        "params": {
          "amount": "is the amount to withdraw"
        }
      },
      "reserveWithdrawCollateral(uint256)": {
        "details": "This function allows the user to withdraw their collateral Withdraws incur a 0.5% fee paid to the bankFactoryOwner",
        "params": {
          "amount": "is the amount to withdraw"
        }
      },
      "revokeKeeper(address)": {
        "details": "Allows admin to remove address from keeper role",
        "params": {
          "oldKeeper": "address of old keeper"
        }
      },
      "revokeReporter(address)": {
        "details": "Allows admin to remove address from price updater role",
        "params": {
          "oldUpdater": "address of old price updater"
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setCollateral(address,uint256,uint256,uint256)": {
        "details": "This function sets the collateral token properties, only callable one time"
      },
      "setDebt(address,uint256,uint256,uint256)": {
        "details": "This function sets the debt token properties, only callable one time"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner. NOTE: Override this to add changing the"
      },
      "updateCollateralPrice()": {
        "details": "Use this function to get and update the price for the collateral token using the Tellor Oracle."
      },
      "updateDebtPrice()": {
        "details": "Use this function to get and update the price for the debt token using the Tellor Oracle."
      },
      "vaultBorrow(uint256)": {
        "details": "Use this function to allow users to borrow against their collateral",
        "params": {
          "amount": "to borrow"
        }
      },
      "vaultDeposit(uint256)": {
        "details": "Use this function to allow users to deposit collateral to the vault",
        "params": {
          "amount": "is the collateral amount"
        }
      },
      "vaultRepay(uint256)": {
        "details": "This function allows users to pay the interest and origination fee to the  vault before being able to withdraw",
        "params": {
          "amount": "owed"
        }
      },
      "vaultWithdraw(uint256)": {
        "details": "Allows users to withdraw their collateral from the vault",
        "params": {
          "amount": "withdrawn"
        }
      }
    },
    "title": "Bank This contract allows the owner to deposit reserves(debt token), earn interest and origination fees from users that borrow against their collateral. The oracle for Bank is Tellor.",
    "version": 1
  },
  "offset": [
    464,
    14852
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x326 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x685A5808 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB71D7A6E GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xDD8755F2 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF327E324 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF327E324 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0xF91614EB EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xFB839DDA EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xFC2E39A6 EQ PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD8755F2 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xEC5E5E7D EQ PUSH2 0x6B6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA15C873 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xCB765C1D EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0xD267974C EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB71D7A6E EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0xC14D0454 EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0xC969AC06 EQ PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8CDCC955 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xA622EE7C EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xA860988C EQ PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8CDCC955 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x685A5808 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0x6D483FE6 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x70C12F1E EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x7649B938 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x85B4E543 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x86EF5738 EQ PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x45FD80E4 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x4FD88951 GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x4FD88951 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x5257B566 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x53388F44 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x5729B394 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45FD80E4 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x494F4188 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0x4B272D9A EQ PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x38507FF5 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x3F60D799 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x3FCAD964 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x4032B72B EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x435726C4 EQ PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E522B29 GT PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x2F865568 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x3149CB14 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x317C9E42 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x364BC15A EQ PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E522B29 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x91A446 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x8DCD7C6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x15143950 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x1B9084B4 EQ PUSH2 0x397 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33E PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x353 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x2716 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x38A PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x276C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH2 0x33E PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH1 0x4D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x44B CALLDATASIZE PUSH1 0x4 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x45E CALLDATASIZE PUSH1 0x4 PUSH2 0x280C JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x36C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x48B PUSH2 0x486 CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x35F JUMP JUMPDEST PUSH2 0x33E PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x4C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0x33E PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x33E PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x109E JUMP JUMPDEST PUSH2 0x33E PUSH2 0x4F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x33E PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x13E4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x408 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x285D JUMP JUMPDEST PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x33E PUSH2 0x59F CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x408 JUMP JUMPDEST PUSH2 0x408 PUSH2 0x5C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2973 JUMP JUMPDEST PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x5D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x36C PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x611 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x35F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1873 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x657 CALLDATASIZE PUSH1 0x4 PUSH2 0x280C JUMP JUMPDEST PUSH2 0x191C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x408 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x69E CALLDATASIZE PUSH1 0x4 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6FA CALLDATASIZE PUSH1 0x4 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP1 PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xF PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH2 0x76D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x71EB3E5DF75EF293B81B4C7B38DB51F7A6CEC007D12529CB74D4EAFB7FA53222 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7CA JUMPI POP PUSH2 0x7CA DUP3 PUSH2 0x1E79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7DF SWAP1 PUSH2 0x29EE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x80B SWAP1 PUSH2 0x29EE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x858 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x858 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x88A JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x8FF SWAP1 PUSH2 0x2710 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x929 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH2 0x933 DUP4 DUP4 PUSH2 0x1F0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x950 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1848 JUMP JUMPDEST DUP1 PUSH2 0x961 JUMPI POP PUSH2 0x961 PUSH1 0x0 CALLER PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x3737BA1035B2B2B832B91037B91030B236B4B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x9B1 SWAP1 PUSH1 0x64 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x9BA DUP3 PUSH2 0x862 JUMP JUMPDEST LT PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5641554C54204E4F5420554E444552434F4C4C41544552414C495A4544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 PUSH1 0x64 SWAP2 DUP3 SWAP2 SWAP1 PUSH2 0xA38 SWAP1 DUP4 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xA92 SWAP1 DUP5 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0xADA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0xAE7 PUSH1 0xA DUP4 PUSH2 0x2A48 JUMP JUMPDEST SWAP1 POP PUSH2 0xAF3 DUP2 DUP4 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB05 SWAP1 DUP5 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB32 SWAP1 DUP5 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SSTORE PUSH1 0x4D SLOAD PUSH1 0x9 SLOAD PUSH2 0xB69 SWAP3 SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1F2D JUMP JUMPDEST PUSH32 0x6DD29D11F8D1BCDBD79DA21BF92895417DCC2F8886B3DB11C8A4CE00B73DE9D0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB9A SWAP3 SWAP2 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xC18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0xC22 DUP3 DUP3 PUSH2 0x1F4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC31 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2173657461626C65 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xB SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD PUSH4 0x11BBB871 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH4 0x46EEE1C4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH4 0x77FBB663 DUP9 PUSH2 0xD51 PUSH1 0x1 DUP7 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x93FA4915 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x93FA4915 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE44 JUMPI PUSH1 0x1 SWAP7 POP SWAP5 POP SWAP3 POP PUSH2 0xE51 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP DUP6 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1BDC195C985D1A5BDB881B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0xEBE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x90E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECC DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0xF SLOAD DUP3 GT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F5420454E4F55474820434F4C4C41544552414C20494E2052455345525645 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2B PUSH1 0xC8 DUP5 PUSH2 0x2A48 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xF PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF42 SWAP2 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH32 0x529AFC4538720FE0B3EADC40486369AB962002D72FEAD1387B300C66073E7BF SWAP2 PUSH2 0xF86 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xFAF CALLER PUSH2 0xF9C DUP4 DUP7 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x4D SLOAD PUSH1 0x9 SLOAD PUSH2 0x933 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0xFE4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1848 JUMP JUMPDEST DUP1 PUSH2 0xFF5 JUMPI POP PUSH2 0xFF5 PUSH1 0x0 CALLER PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F742070726963652075706461746572206F722061646D696E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x104D SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C SWAP4 POP PUSH2 0x1094 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xEBE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x4D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4953204E4F542042414E4B20464143544F5259204F574E455200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x4D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x1166 JUMPI PUSH2 0x1152 PUSH2 0x1873 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x4 SLOAD PUSH1 0xA SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 SWAP3 SWAP2 PUSH2 0x118C SWAP2 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x1196 SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x11AB SWAP1 PUSH1 0x64 PUSH2 0x2A29 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x11BB SWAP1 DUP3 PUSH2 0x2A29 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x11CB SWAP1 DUP3 PUSH2 0x2A48 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x11EB SWAP1 DUP3 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 SWAP2 POP PUSH2 0x2710 SWAP1 PUSH2 0x11FF SWAP1 DUP5 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x1209 SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x1213 SWAP1 DUP4 PUSH2 0x29D6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1235 SWAP1 DUP5 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT PUSH2 0x1293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1393D508115393D551D20810D3D313105511549053 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E4F5420454E4F554748205245534552564553 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x16 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1365 SWAP1 TIMESTAMP PUSH2 0x2A6A JUMP JUMPDEST GT ISZERO PUSH2 0x1382 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE JUMPDEST DUP2 PUSH1 0xF PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1397 SWAP2 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH2 0x13B3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x1F2D JUMP JUMPDEST PUSH32 0x232862A021D33EA4A70F5D509B754F0F6986AAA0FFDD5C7DB4910422AFC768A CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x799 SWAP3 SWAP2 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP1 PUSH2 0x2995 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1423 SWAP1 DUP5 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xF DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x143D SWAP1 DUP5 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH2 0x145A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x1E08 JUMP JUMPDEST PUSH32 0x89D28CF06BDB2EE1B92CD046D58450042AD113E9F4CDABFC4D43E7C5557758D7 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x148B SWAP3 SWAP2 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x14AB JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST DUP1 PUSH2 0x14B9 JUMPI POP PUSH1 0x1A SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x151C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420696E7374616E63652068617320616C7265616479206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195B881A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x153E JUMPI PUSH1 0x1A DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1549 PUSH1 0x0 DUP12 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x11 DUP9 SWAP1 SSTORE PUSH1 0x12 DUP8 SWAP1 SSTORE PUSH1 0x13 DUP7 SWAP1 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x14 DUP8 SWAP1 SSTORE PUSH1 0x16 DUP7 SWAP1 SSTORE PUSH1 0x4D DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP9 MLOAD PUSH2 0x15A5 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP13 ADD SWAP1 PUSH2 0x2664 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x1A DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x15E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP1 PUSH2 0x2995 JUMP JUMPDEST PUSH2 0x15EC PUSH2 0x1873 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE DUP2 GT ISZERO PUSH2 0x1650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414E4E4F54205245504159204D4F5245205448414E204F5745440000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1672 SWAP1 DUP5 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x168C SWAP1 DUP5 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x16 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SWAP2 PUSH2 0x16B2 SWAP2 PUSH2 0x2A48 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x16BF SWAP1 TIMESTAMP PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x16C9 SWAP2 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 SWAP2 POP PUSH2 0x16D9 SWAP1 DUP3 PUSH2 0x2A29 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x16FB SWAP1 DUP5 SWAP1 PUSH2 0x29D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH2 0x1718 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH32 0x34D657CD4DEC79D6716CE5AC15B81DE5751705030CBEF01B43B15EAE44CBC112 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x799 SWAP3 SWAP2 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x1761 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1848 JUMP JUMPDEST DUP1 PUSH2 0x1772 JUMPI POP PUSH2 0x1772 PUSH1 0x0 CALLER PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x17BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F742070726963652075706461746572206F722061646D696E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x17CA SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH32 0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C SWAP4 POP PUSH2 0x1094 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0xEBE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1841 SWAP1 DUP4 PUSH2 0x1F78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x16 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x189A SWAP1 PUSH4 0x1E13380 PUSH2 0x2A48 JUMP JUMPDEST PUSH1 0x16 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x18BE SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x18CB SWAP1 TIMESTAMP PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x18D5 SWAP2 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x2710 PUSH1 0xF PUSH1 0x2 ADD SLOAD DUP7 PUSH2 0x18ED SWAP2 SWAP1 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x18F7 SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x1901 SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x190B SWAP2 SWAP1 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x1915 SWAP1 DUP5 PUSH2 0x29D6 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1927 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x1948 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST PUSH2 0x197F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2173657461626C65 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x4 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x7CA SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x19E4 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH2 0x933 DUP4 DUP4 PUSH2 0x1F4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1BDC195C985D1A5BDB881B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0xEBE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5F DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACB SWAP2 SWAP1 PUSH2 0x2A9A JUMP JUMPDEST LT ISZERO PUSH2 0x1B23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F5420454E4F554748204445425420544F4B454E5320494E20524553455256 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B30 PUSH1 0xC8 DUP5 PUSH2 0x2A48 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xF PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B47 SWAP2 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1B6E SWAP1 POP CALLER PUSH2 0x1B5B DUP4 DUP7 PUSH2 0x2A6A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x4D SLOAD PUSH1 0x3 SLOAD PUSH2 0x1B8B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x529AFC4538720FE0B3EADC40486369AB962002D72FEAD1387B300C66073E7BF SWAP2 PUSH2 0x1BCA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24A9902727AA1027ABA722A9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1CA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414E4E4F54205749544844524157204D4F524520434F4C4C41544552414C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x4 SLOAD PUSH1 0xA SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CCA SWAP1 DUP7 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST PUSH2 0x1CD4 SWAP2 SWAP1 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x1CDE SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x1CE8 SWAP2 SWAP1 PUSH2 0x2A48 JUMP JUMPDEST PUSH2 0x1CF3 SWAP1 PUSH1 0x64 PUSH2 0x2A29 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x1D03 SWAP1 DUP3 PUSH2 0x2A29 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x1D13 SWAP1 DUP3 PUSH2 0x2A48 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x1D78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414E4E4F5420554E444552434F4C4C41544552414C495A45205641554C5400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1D97 SWAP1 DUP5 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xF DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1DB1 SWAP1 DUP5 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH2 0x1DCD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x1F2D JUMP JUMPDEST PUSH32 0xAC60FBF53B67F5A6A0C8031DD9D1610A06F01669B1A8B9AF98F3A6A477E8D7C CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x799 SWAP3 SWAP2 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0xEBE DUP2 CALLER PUSH2 0x1F8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1E73 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7CA JUMPI POP PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH2 0x1F15 DUP3 DUP3 PUSH2 0x20C4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x933 SWAP1 DUP3 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x933 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E3C SWAP3 SWAP2 SWAP1 PUSH2 0x2A81 JUMP JUMPDEST PUSH2 0x1F56 DUP3 DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x933 SWAP1 DUP3 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0xC22 DUP3 DUP3 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1841 DUP4 DUP4 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CA DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F98 DUP3 DUP3 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0xC22 JUMPI PUSH2 0x1FB0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x2205 JUMP JUMPDEST PUSH2 0x1FBB DUP4 PUSH1 0x20 PUSH2 0x2205 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FCC SWAP3 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x732 SWAP2 PUSH1 0x4 ADD PUSH2 0x276C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2047 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23A1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x933 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2065 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0x20CE DUP3 DUP3 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0xC22 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2106 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1841 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x23B8 JUMP JUMPDEST PUSH2 0x2169 DUP3 DUP3 PUSH2 0x1848 JUMP JUMPDEST ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1841 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x21F2 JUMPI PUSH2 0x21F2 PUSH2 0x2B4A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2214 DUP4 PUSH1 0x2 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x221F SWAP1 PUSH1 0x2 PUSH2 0x29D6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2237 JUMPI PUSH2 0x2237 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2261 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x227C JUMPI PUSH2 0x227C PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x22AB JUMPI PUSH2 0x22AB PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x22CF DUP5 PUSH1 0x2 PUSH2 0x2A29 JUMP JUMPDEST PUSH2 0x22DA SWAP1 PUSH1 0x1 PUSH2 0x29D6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2352 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x230E JUMPI PUSH2 0x230E PUSH2 0x2B4A JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2324 JUMPI PUSH2 0x2324 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x234B DUP2 PUSH2 0x2B60 JUMP JUMPDEST SWAP1 POP PUSH2 0x22DD JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x23B0 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x24FA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x23FF JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x7CA JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x24F0 JUMPI PUSH1 0x0 PUSH2 0x242B PUSH1 0x1 DUP4 PUSH2 0x2A6A JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x243F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x24A4 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x245F JUMPI PUSH2 0x245F PUSH2 0x2B4A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2482 JUMPI PUSH2 0x2482 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x24B5 JUMPI PUSH2 0x24B5 PUSH2 0x2B77 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x255B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x25B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x25CE SWAP2 SWAP1 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x260B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2610 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2620 DUP3 DUP3 DUP7 PUSH2 0x262B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x263A JUMPI POP DUP2 PUSH2 0x1841 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x264A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x276C JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2670 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2692 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x26D8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x26AB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x26D8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x26D8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x26D8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x26BD JUMP JUMPDEST POP PUSH2 0x26E4 SWAP3 SWAP2 POP PUSH2 0x26E8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x26E4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x26E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x270F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x275B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2743 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E73 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x278B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2740 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x909 DUP2 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1841 DUP2 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2801 DUP2 PUSH2 0x279F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x282D DUP2 PUSH2 0x279F JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x287C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH2 0x2887 DUP2 PUSH2 0x279F JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x28A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP13 ADD SWAP2 POP DUP13 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x28CA JUMPI PUSH2 0x28CA PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x28F2 JUMPI PUSH2 0x28F2 PUSH2 0x2847 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP16 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x290B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP13 POP POP POP POP POP POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH2 0x2955 PUSH1 0xE0 DUP12 ADD PUSH2 0x27B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2964 PUSH2 0x100 DUP12 ADD PUSH2 0x27B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x416D6F756E74206973207A65726F202121 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x29E9 JUMPI PUSH2 0x29E9 PUSH2 0x29C0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A02 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2A23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A43 JUMPI PUSH2 0x2A43 PUSH2 0x29C0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A65 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2A7C JUMPI PUSH2 0x2A7C PUSH2 0x29C0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2B0D DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2740 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2B3E DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2740 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2B6F JUMPI PUSH2 0x2B6F PUSH2 0x29C0 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2B9F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2740 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID ORIGIN DIV 0xC9 BLOCKHASH MOD CALLDATASIZE PUSH20 0x962B481A0395619B3DBBD137589C419E993978C1 0xC7 SHL 0xCF PUSH9 0xECFC8737AB85EB4512 MSIZE PUSH18 0x625A9EBDB75CC78E01D5C1FA80C4C6E5203F SELFBALANCE 0xBC 0x4F 0xAB LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 PUSH29 0x15CD15AF30865595AB4B9931931F6FF93C2A2658B411645D7DEB819313 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x326"
    },
    "25": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x685A5808"
    },
    "38": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8"
    },
    "42": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB71D7A6E"
    },
    "49": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "53": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD8755F2"
    },
    "60": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF327E324"
    },
    "71": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF327E324"
    },
    "82": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DC"
    },
    "86": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF91614EB"
    },
    "93": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "97": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFB839DDA"
    },
    "104": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6EC"
    },
    "108": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFC2E39A6"
    },
    "115": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "116": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6FF"
    },
    "119": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "120": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD8755F2"
    },
    "131": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A3"
    },
    "135": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xEC5E5E7D"
    },
    "142": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B6"
    },
    "146": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "153": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6C9"
    },
    "157": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCA15C873"
    },
    "169": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCA15C873"
    },
    "180": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x664"
    },
    "184": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCB765C1D"
    },
    "191": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x677"
    },
    "195": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD267974C"
    },
    "202": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x67F"
    },
    "206": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD547741F"
    },
    "213": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x690"
    },
    "217": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "222": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "224": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB71D7A6E"
    },
    "229": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x641"
    },
    "233": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "234": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "235": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC14D0454"
    },
    "240": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "241": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x649"
    },
    "244": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "246": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC969AC06"
    },
    "251": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65C"
    },
    "255": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "259": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "260": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "262": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8CDCC955"
    },
    "267": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "268": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171"
    },
    "271": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "272": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "273": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x91D14854"
    },
    "278": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "279": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "283": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "284": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x91D14854"
    },
    "289": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "290": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C8"
    },
    "293": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "294": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "295": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA217FDDF"
    },
    "300": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "301": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5DB"
    },
    "304": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "305": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "306": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA622EE7C"
    },
    "311": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "312": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E3"
    },
    "315": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "316": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "317": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA860988C"
    },
    "322": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "323": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62C"
    },
    "326": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "327": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "330": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "331": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "332": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "333": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8CDCC955"
    },
    "338": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "339": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x591"
    },
    "342": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "343": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "344": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "349": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "350": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A4"
    },
    "353": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "354": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "355": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9010D07C"
    },
    "360": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "361": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B5"
    },
    "364": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "365": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "367": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "368": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "369": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "370": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "371": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x685A5808"
    },
    "376": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "377": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x532"
    },
    "380": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "381": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "382": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6D483FE6"
    },
    "387": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "388": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54A"
    },
    "391": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "392": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "393": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70C12F1E"
    },
    "398": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "399": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x55B"
    },
    "402": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "403": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "404": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7649B938"
    },
    "409": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "410": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x56E"
    },
    "413": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "414": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "415": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x85B4E543"
    },
    "420": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "421": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x581"
    },
    "424": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "425": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "426": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x86EF5738"
    },
    "431": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "432": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x589"
    },
    "435": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "436": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "438": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "439": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "440": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "441": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "442": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x36568ABE"
    },
    "447": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "448": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x277"
    },
    "451": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "452": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "453": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x45FD80E4"
    },
    "458": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "459": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x230"
    },
    "462": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "463": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "464": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4FD88951"
    },
    "469": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "470": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20A"
    },
    "473": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "474": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "475": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4FD88951"
    },
    "480": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "481": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4FC"
    },
    "484": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "485": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "486": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5257B566"
    },
    "491": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "492": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50F"
    },
    "495": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "496": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "497": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x53388F44"
    },
    "502": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "503": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x517"
    },
    "506": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "507": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "508": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5729B394"
    },
    "513": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "514": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51F"
    },
    "517": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "518": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "520": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "521": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "522": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "523": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "524": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x45FD80E4"
    },
    "529": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "530": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CE"
    },
    "533": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "534": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "535": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x494F4188"
    },
    "540": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "541": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D6"
    },
    "544": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "545": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "546": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4B272D9A"
    },
    "551": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "552": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E9"
    },
    "555": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "556": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "558": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "559": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "560": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "561": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "562": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x36568ABE"
    },
    "567": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "568": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43D"
    },
    "571": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "572": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "573": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x38507FF5"
    },
    "578": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "579": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x450"
    },
    "582": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "583": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "584": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3F60D799"
    },
    "589": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "590": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x463"
    },
    "593": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "594": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "595": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3FCAD964"
    },
    "600": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "601": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "604": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "605": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "606": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4032B72B"
    },
    "611": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "612": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A8"
    },
    "615": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "616": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "617": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x435726C4"
    },
    "622": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "623": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BB"
    },
    "626": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "627": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "629": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "630": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "631": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "632": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "633": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1E522B29"
    },
    "638": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "639": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E4"
    },
    "642": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "643": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "644": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2F865568"
    },
    "649": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "GT",
      "path": "3"
    },
    "650": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE"
    },
    "653": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "654": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "655": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2F865568"
    },
    "660": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "661": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "664": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "665": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "666": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3149CB14"
    },
    "671": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "672": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FB"
    },
    "675": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "676": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "677": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x317C9E42"
    },
    "682": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "683": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x420"
    },
    "686": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "687": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "688": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x364BC15A"
    },
    "693": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "694": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x428"
    },
    "697": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "698": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "700": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "701": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "702": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "703": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "704": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1E522B29"
    },
    "709": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "710": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AA"
    },
    "713": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "714": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "715": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x248A9CA3"
    },
    "720": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "721": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B2"
    },
    "724": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "725": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "726": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2F2FF15D"
    },
    "731": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "732": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D5"
    },
    "735": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "736": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "738": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "739": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "740": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "741": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "742": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x91A446"
    },
    "746": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "747": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32B"
    },
    "750": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "751": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "752": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1FFC9A7"
    },
    "757": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "758": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x340"
    },
    "761": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "762": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "763": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DCD7C6"
    },
    "768": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "769": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x368"
    },
    "772": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "773": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "774": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x15143950"
    },
    "779": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "780": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37A"
    },
    "783": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "784": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "785": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x17D7DE7C"
    },
    "790": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "791": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x382"
    },
    "794": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "795": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "796": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1B9084B4"
    },
    "801": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "EQ",
      "path": "3"
    },
    "802": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x397"
    },
    "805": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "806": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "807": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "809": {
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "810": {
      "first_revert": true,
      "fn": null,
      "offset": [
        464,
        14852
      ],
      "op": "REVERT",
      "path": "3"
    },
    "811": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "812": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "815": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x339"
    },
    "818": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "819": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "821": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26FD"
    },
    "824": {
      "fn": "BankOld.reserveDeposit",
      "jump": "i",
      "offset": [
        4206,
        4570
      ],
      "op": "JUMP",
      "path": "3"
    },
    "825": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "826": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x707"
    },
    "829": {
      "fn": "BankOld.reserveDeposit",
      "jump": "i",
      "offset": [
        4206,
        4570
      ],
      "op": "JUMP",
      "path": "3"
    },
    "830": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "831": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "STOP",
      "path": "3"
    },
    "832": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "833": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x353"
    },
    "836": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34E"
    },
    "839": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "840": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "842": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2716"
    },
    "845": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "i",
      "offset": [
        616,
        828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "846": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "847": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A5"
    },
    "850": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "i",
      "offset": [
        616,
        828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "851": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "852": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "854": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "855": {
      "op": "SWAP1"
    },
    "856": {
      "op": "ISZERO"
    },
    "857": {
      "op": "ISZERO"
    },
    "858": {
      "op": "DUP2"
    },
    "859": {
      "op": "MSTORE"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "862": {
      "op": "ADD"
    },
    "863": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "864": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "866": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "867": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "DUP1",
      "path": "1"
    },
    "868": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "869": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "SUB",
      "path": "1"
    },
    "870": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "871": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "RETURN",
      "path": "1"
    },
    "872": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "873": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2976,
        2997
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x5"
    },
    "875": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2976,
        2997
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "876": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "877": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "879": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "880": {
      "op": "SWAP1"
    },
    "881": {
      "op": "DUP2"
    },
    "882": {
      "op": "MSTORE"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "op": "ADD"
    },
    "886": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35F"
    },
    "889": {
      "op": "JUMP"
    },
    "890": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3580,
        3685
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "891": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3662,
        3678
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0xA"
    },
    "893": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3662,
        3678
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "894": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3580,
        3685
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "897": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3580,
        3685
      ],
      "op": "JUMP",
      "path": "4"
    },
    "898": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "899": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38A"
    },
    "902": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D0"
    },
    "905": {
      "fn": "BankStorage.getName",
      "jump": "i",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMP",
      "path": "4"
    },
    "906": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "907": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "909": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "910": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35F"
    },
    "913": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "914": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "915": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x276C"
    },
    "918": {
      "fn": "BankStorage.getName",
      "jump": "i",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMP",
      "path": "4"
    },
    "919": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "920": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "923": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A5"
    },
    "926": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "927": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "929": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27BF"
    },
    "932": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "933": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "934": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x862"
    },
    "937": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "938": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2229,
        2342
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "939": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2309,
        2335
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x14"
    },
    "941": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2309,
        2335
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "942": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2229,
        2342
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "945": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2229,
        2342
      ],
      "op": "JUMP",
      "path": "4"
    },
    "946": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "947": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36C"
    },
    "950": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0"
    },
    "953": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "954": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "956": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26FD"
    },
    "959": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4394,
        4523
      ],
      "op": "JUMP",
      "path": "0"
    },
    "960": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "961": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4468,
        4475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "963": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 3
    },
    "964": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "965": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "966": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "968": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "970": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "971": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "973": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "974": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "975": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "977": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "ADD",
      "path": "0"
    },
    "978": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "979": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "980": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "JUMP",
      "path": "0"
    },
    "981": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "982": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "985": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E3"
    },
    "988": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "989": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "991": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27DC"
    },
    "994": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "995": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "996": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90E"
    },
    "999": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1000": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1001": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1004": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F6"
    },
    "1007": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1008": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1010": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27BF"
    },
    "1013": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        7668,
        9031
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1014": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1015": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x938"
    },
    "1018": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        7668,
        9031
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1019": {
      "fn": "BankOld.getBankFactoryOwner",
      "offset": [
        12891,
        12993
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1020": {
      "fn": "BankOld.getBankFactoryOwner",
      "offset": [
        12969,
        12986
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x4D"
    },
    "1022": {
      "fn": "BankOld.getBankFactoryOwner",
      "offset": [
        12969,
        12986
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "op": "SUB"
    },
    "1031": {
      "fn": "BankOld.getBankFactoryOwner",
      "offset": [
        12969,
        12986
      ],
      "op": "AND",
      "path": "3"
    },
    "1032": {
      "fn": "BankOld.getBankFactoryOwner",
      "offset": [
        12891,
        12993
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1033": {
      "fn": "BankOld.getBankFactoryOwner",
      "offset": [
        12891,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1035": {
      "fn": "BankOld.getBankFactoryOwner",
      "offset": [
        12891,
        12993
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "op": "SWAP1"
    },
    "1045": {
      "op": "SWAP2"
    },
    "1046": {
      "op": "AND"
    },
    "1047": {
      "op": "DUP2"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "fn": "BankOld.getBankFactoryOwner",
      "offset": [
        12891,
        12993
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35F"
    },
    "1055": {
      "op": "JUMP"
    },
    "1056": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3828,
        3983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1057": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3949,
        3976
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0xB"
    },
    "1059": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3949,
        3976
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1060": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3828,
        3983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1063": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3828,
        3983
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1064": {
      "offset": [
        379,
        441
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1065": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        379,
        441
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1070": {
      "op": "DUP1"
    },
    "1071": {
      "op": "MLOAD"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1074": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "1077": {
      "op": "DUP4"
    },
    "1078": {
      "op": "CODECOPY"
    },
    "1079": {
      "op": "DUP2"
    },
    "1080": {
      "op": "MLOAD"
    },
    "1081": {
      "op": "SWAP2"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "offset": [
        379,
        441
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1084": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        379,
        441
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1085": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1086": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "1089": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44B"
    },
    "1092": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1093": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1095": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27DC"
    },
    "1098": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1099": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1100": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA8"
    },
    "1103": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1104": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2794,
        3425
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1105": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2794,
        3425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1108": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2794,
        3425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45E"
    },
    "1111": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2794,
        3425
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1112": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2794,
        3425
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1114": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2794,
        3425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x280C"
    },
    "1117": {
      "fn": "BankOld.setCollateral",
      "jump": "i",
      "offset": [
        2794,
        3425
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1118": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2794,
        3425
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1119": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2794,
        3425
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC26"
    },
    "1122": {
      "fn": "BankOld.setCollateral",
      "jump": "i",
      "offset": [
        2794,
        3425
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1123": {
      "offset": [
        488,
        554
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1124": {
      "fn": "BankOld.setCollateral",
      "offset": [
        488,
        554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1129": {
      "op": "DUP1"
    },
    "1130": {
      "op": "MLOAD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x2BAA"
    },
    "1136": {
      "op": "DUP4"
    },
    "1137": {
      "op": "CODECOPY"
    },
    "1138": {
      "op": "DUP2"
    },
    "1139": {
      "op": "MLOAD"
    },
    "1140": {
      "op": "SWAP2"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "offset": [
        488,
        554
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1143": {
      "fn": "BankOld.setCollateral",
      "offset": [
        488,
        554
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1144": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1145": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48B"
    },
    "1148": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x486"
    },
    "1151": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1152": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1154": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26FD"
    },
    "1157": {
      "fn": "BankOld.getCurrentValue",
      "jump": "i",
      "offset": [
        13185,
        13799
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1158": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1159": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCBC"
    },
    "1162": {
      "fn": "BankOld.getCurrentValue",
      "jump": "i",
      "offset": [
        13185,
        13799
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1163": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1164": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1166": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1167": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1168": {
      "op": "SWAP4"
    },
    "1169": {
      "op": "ISZERO"
    },
    "1170": {
      "op": "ISZERO"
    },
    "1171": {
      "op": "DUP5"
    },
    "1172": {
      "op": "MSTORE"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1175": {
      "op": "DUP5"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "SWAP3"
    },
    "1178": {
      "op": "SWAP1"
    },
    "1179": {
      "op": "SWAP3"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "SWAP1"
    },
    "1182": {
      "op": "DUP3"
    },
    "1183": {
      "op": "ADD"
    },
    "1184": {
      "op": "MSTORE"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35F"
    },
    "1191": {
      "op": "JUMP"
    },
    "1192": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1193": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1196": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B6"
    },
    "1199": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1200": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1202": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27BF"
    },
    "1205": {
      "fn": "BankOld.addKeeper",
      "jump": "i",
      "offset": [
        13919,
        14074
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1206": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1207": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE58"
    },
    "1210": {
      "fn": "BankOld.addKeeper",
      "jump": "i",
      "offset": [
        13919,
        14074
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1211": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5575,
        6237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1212": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5575,
        6237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1215": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5575,
        6237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C9"
    },
    "1218": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5575,
        6237
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1219": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5575,
        6237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1221": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5575,
        6237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26FD"
    },
    "1224": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        5575,
        6237
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1225": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5575,
        6237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1226": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5575,
        6237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEC1"
    },
    "1229": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        5575,
        6237
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1230": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6942,
        7343
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1231": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6942,
        7343
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1234": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6942,
        7343
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFCC"
    },
    "1237": {
      "fn": "BankOld.updateDebtPrice",
      "jump": "i",
      "offset": [
        6942,
        7343
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1238": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14202,
        14303
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1239": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14202,
        14303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1242": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14202,
        14303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E4"
    },
    "1245": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14202,
        14303
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1246": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14202,
        14303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1248": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14202,
        14303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27BF"
    },
    "1251": {
      "fn": "BankOld.revokeKeeper",
      "jump": "i",
      "offset": [
        14202,
        14303
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1252": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14202,
        14303
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1253": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14202,
        14303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109E"
    },
    "1256": {
      "fn": "BankOld.revokeKeeper",
      "jump": "i",
      "offset": [
        14202,
        14303
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1257": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        12999,
        13179
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1258": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        12999,
        13179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1261": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        12999,
        13179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F7"
    },
    "1264": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        12999,
        13179
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1265": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        12999,
        13179
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1267": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        12999,
        13179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27BF"
    },
    "1270": {
      "fn": "BankOld.setBankFactoryOwner",
      "jump": "i",
      "offset": [
        12999,
        13179
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1271": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        12999,
        13179
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1272": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        12999,
        13179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10B6"
    },
    "1275": {
      "fn": "BankOld.setBankFactoryOwner",
      "jump": "i",
      "offset": [
        12999,
        13179
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1276": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9702,
        10952
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1277": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9702,
        10952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1280": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9702,
        10952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50A"
    },
    "1283": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9702,
        10952
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1284": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9702,
        10952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1286": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9702,
        10952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26FD"
    },
    "1289": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        9702,
        10952
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1290": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9702,
        10952
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1291": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9702,
        10952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1132"
    },
    "1294": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        9702,
        10952
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1295": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1555,
        1656
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1296": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1629,
        1649
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x11"
    },
    "1298": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1629,
        1649
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1299": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1555,
        1656
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1302": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1555,
        1656
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1303": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4124,
        4245
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1304": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4214,
        4238
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0xE"
    },
    "1306": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4214,
        4238
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1307": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4124,
        4245
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1310": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4124,
        4245
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1311": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1312": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1315": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x52D"
    },
    "1318": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1319": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1321": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26FD"
    },
    "1324": {
      "fn": "BankOld.vaultDeposit",
      "jump": "i",
      "offset": [
        9179,
        9569
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1325": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1326": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E4"
    },
    "1329": {
      "fn": "BankOld.vaultDeposit",
      "jump": "i",
      "offset": [
        9179,
        9569
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1330": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5076,
        5189
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1331": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5160,
        5170
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 8
    },
    "1332": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5127,
        5134
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1334": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1335": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1336": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1337": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5159
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1339": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1341": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1342": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1344": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1345": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1346": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5182
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1348": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5182
      ],
      "op": "ADD",
      "path": "4"
    },
    "1349": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5182
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1350": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5076,
        5189
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1353": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5076,
        5189
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1354": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3347,
        3461
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1355": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3431,
        3441
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x9"
    },
    "1357": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3431,
        3454
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3431,
        3454
      ],
      "op": "AND",
      "path": "4"
    },
    "1367": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3347,
        3461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x408"
    },
    "1370": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3347,
        3461
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1371": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1372": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1375": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x569"
    },
    "1378": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1379": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1381": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x285D"
    },
    "1384": {
      "fn": "BankOld.init",
      "jump": "i",
      "offset": [
        1894,
        2685
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1385": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1386": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1496"
    },
    "1389": {
      "fn": "BankOld.init",
      "jump": "i",
      "offset": [
        1894,
        2685
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1390": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11130,
        11888
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1391": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11130,
        11888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1394": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11130,
        11888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57C"
    },
    "1397": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11130,
        11888
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1398": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11130,
        11888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1400": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11130,
        11888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26FD"
    },
    "1403": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11130,
        11888
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1404": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11130,
        11888
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1405": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11130,
        11888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15C4"
    },
    "1408": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11130,
        11888
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1409": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6374,
        6811
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1410": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6374,
        6811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1413": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6374,
        6811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1749"
    },
    "1416": {
      "fn": "BankOld.updateCollateralPrice",
      "jump": "i",
      "offset": [
        6374,
        6811
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1417": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        1995,
        2116
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1418": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        2079,
        2109
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x13"
    },
    "1420": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        2079,
        2109
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1421": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        1995,
        2116
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1424": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        1995,
        2116
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1425": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14743,
        14850
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1426": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14743,
        14850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1429": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14743,
        14850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59F"
    },
    "1432": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14743,
        14850
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1433": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14743,
        14850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1435": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14743,
        14850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27BF"
    },
    "1438": {
      "fn": "BankOld.revokeReporter",
      "jump": "i",
      "offset": [
        14743,
        14850
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1439": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14743,
        14850
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1440": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14743,
        14850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1811"
    },
    "1443": {
      "fn": "BankOld.revokeReporter",
      "jump": "i",
      "offset": [
        14743,
        14850
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1444": {
      "fn": "BankOld.owner",
      "offset": [
        1392,
        1469
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1445": {
      "fn": "BankOld.owner",
      "offset": [
        1430,
        1437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1447": {
      "fn": "BankOld.owner",
      "offset": [
        1456,
        1462
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 11
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "fn": "BankOld.owner",
      "offset": [
        1456,
        1462
      ],
      "op": "AND",
      "path": "3"
    },
    "1457": {
      "fn": "BankOld.owner",
      "offset": [
        1392,
        1469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x408"
    },
    "1460": {
      "fn": "BankOld.owner",
      "offset": [
        1392,
        1469
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1461": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1462": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x408"
    },
    "1465": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C3"
    },
    "1468": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1469": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1471": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2973"
    },
    "1474": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "i",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1475": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1476": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1829"
    },
    "1479": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "i",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1480": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1481": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x353"
    },
    "1484": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D6"
    },
    "1487": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1488": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1490": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27DC"
    },
    "1493": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1494": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1495": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1848"
    },
    "1498": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1499": {
      "offset": [
        2020,
        2069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1500": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2020,
        2069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36C"
    },
    "1503": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1505": {
      "offset": [
        2020,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1506": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2020,
        2069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1507": {
      "offset": [
        1171,
        1210
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1508": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x611"
    },
    "1511": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F1"
    },
    "1514": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1515": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1517": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27BF"
    },
    "1520": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        1171,
        1210
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1521": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1522": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1524": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1526": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1527": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1528": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1529": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1531": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1532": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1533": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1534": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1536": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1537": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1538": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1539": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1540": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1541": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1543": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1544": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "ADD",
      "path": "4"
    },
    "1545": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1546": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1547": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1548": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1549": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "ADD",
      "path": "4"
    },
    "1550": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1551": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1552": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1553": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1554": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1556": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1557": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1558": {
      "op": "SWAP4"
    },
    "1559": {
      "op": "DUP5"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1563": {
      "op": "DUP5"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "SWAP3"
    },
    "1566": {
      "op": "SWAP1"
    },
    "1567": {
      "op": "SWAP3"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "SWAP1"
    },
    "1570": {
      "op": "DUP3"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "op": "MSTORE"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35F"
    },
    "1579": {
      "op": "JUMP"
    },
    "1580": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4841,
        4966
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1581": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4931,
        4941
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 12
    },
    "1582": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4898,
        4905
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1584": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1585": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1586": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1587": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1589": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1591": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1592": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1594": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1595": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1596": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4959
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1597": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4841,
        4966
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1600": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4841,
        4966
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1601": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1602": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1605": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1873"
    },
    "1608": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5379,
        5824
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1609": {
      "fn": "BankOld.setDebt",
      "offset": [
        3528,
        4053
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1610": {
      "fn": "BankOld.setDebt",
      "offset": [
        3528,
        4053
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1613": {
      "fn": "BankOld.setDebt",
      "offset": [
        3528,
        4053
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x657"
    },
    "1616": {
      "fn": "BankOld.setDebt",
      "offset": [
        3528,
        4053
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1617": {
      "fn": "BankOld.setDebt",
      "offset": [
        3528,
        4053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1619": {
      "fn": "BankOld.setDebt",
      "offset": [
        3528,
        4053
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x280C"
    },
    "1622": {
      "fn": "BankOld.setDebt",
      "jump": "i",
      "offset": [
        3528,
        4053
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1623": {
      "fn": "BankOld.setDebt",
      "offset": [
        3528,
        4053
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1624": {
      "fn": "BankOld.setDebt",
      "offset": [
        3528,
        4053
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x191C"
    },
    "1627": {
      "fn": "BankOld.setDebt",
      "jump": "i",
      "offset": [
        3528,
        4053
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1628": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2665,
        2758
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1629": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2741,
        2751
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 13,
      "value": "0x4"
    },
    "1631": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2741,
        2751
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1632": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2665,
        2758
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1635": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2665,
        2758
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1636": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1637": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36C"
    },
    "1640": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x672"
    },
    "1643": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1644": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1646": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26FD"
    },
    "1649": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1650": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1651": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19B2"
    },
    "1654": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1655": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4367,
        4469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1656": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4443,
        4462
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 14,
      "value": "0x10"
    },
    "1658": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4443,
        4462
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1659": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4367,
        4469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1662": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4367,
        4469
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1663": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2447,
        2549
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1664": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2525,
        2529
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x3"
    },
    "1666": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2525,
        2542
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "op": "SUB"
    },
    "1675": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2525,
        2542
      ],
      "op": "AND",
      "path": "4"
    },
    "1676": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2447,
        2549
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x408"
    },
    "1679": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2447,
        2549
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1680": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1681": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "1684": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69E"
    },
    "1687": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1688": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1690": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27DC"
    },
    "1693": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1694": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1695": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19C9"
    },
    "1698": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1699": {
      "fn": "BankOld.addReporter",
      "offset": [
        14438,
        14600
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1700": {
      "fn": "BankOld.addReporter",
      "offset": [
        14438,
        14600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1703": {
      "fn": "BankOld.addReporter",
      "offset": [
        14438,
        14600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B1"
    },
    "1706": {
      "fn": "BankOld.addReporter",
      "offset": [
        14438,
        14600
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1707": {
      "fn": "BankOld.addReporter",
      "offset": [
        14438,
        14600
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1709": {
      "fn": "BankOld.addReporter",
      "offset": [
        14438,
        14600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27BF"
    },
    "1712": {
      "fn": "BankOld.addReporter",
      "jump": "i",
      "offset": [
        14438,
        14600
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1713": {
      "fn": "BankOld.addReporter",
      "offset": [
        14438,
        14600
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1714": {
      "fn": "BankOld.addReporter",
      "offset": [
        14438,
        14600
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19EE"
    },
    "1717": {
      "fn": "BankOld.addReporter",
      "jump": "i",
      "offset": [
        14438,
        14600
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1718": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1719": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1722": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6C4"
    },
    "1725": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1726": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1728": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26FD"
    },
    "1731": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "i",
      "offset": [
        4793,
        5379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1732": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1733": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A54"
    },
    "1736": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "i",
      "offset": [
        4793,
        5379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1737": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1665,
        1761
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1738": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1665,
        1761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1741": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1665,
        1761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6D7"
    },
    "1744": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1665,
        1761
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1745": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1665,
        1761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1747": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1665,
        1761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27BF"
    },
    "1750": {
      "fn": "BankOld.transferOwnership",
      "jump": "i",
      "offset": [
        1665,
        1761
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1751": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1665,
        1761
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1752": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1665,
        1761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BD7"
    },
    "1755": {
      "fn": "BankOld.transferOwnership",
      "jump": "i",
      "offset": [
        1665,
        1761
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1756": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3133,
        3242
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1757": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3217,
        3235
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x8"
    },
    "1759": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3217,
        3235
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1760": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3133,
        3242
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1763": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3133,
        3242
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1764": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4601,
        4719
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1765": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4687,
        4694
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0xF"
    },
    "1767": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4687,
        4712
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1768": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4601,
        4719
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1771": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4601,
        4719
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1772": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12010,
        12885
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1773": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12010,
        12885
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1776": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12010,
        12885
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6FA"
    },
    "1779": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12010,
        12885
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1780": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12010,
        12885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1782": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12010,
        12885
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x26FD"
    },
    "1785": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12010,
        12885
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1786": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12010,
        12885
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1787": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12010,
        12885
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C42"
    },
    "1790": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12010,
        12885
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1791": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1761,
        1866
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1792": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1837,
        1859
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 18,
      "value": "0x12"
    },
    "1794": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1837,
        1859
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1795": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1761,
        1866
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "1798": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1761,
        1866
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1799": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1800": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1802": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x712"
    },
    "1805": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1806": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "1809": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1810": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1811": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4331,
        4332
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x0"
    },
    "1813": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4322,
        4328
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1814": {
      "branch": 146,
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4322,
        4332
      ],
      "op": "GT",
      "path": "3"
    },
    "1815": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x73B"
    },
    "1818": {
      "branch": 146,
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1819": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1821": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1830": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1831": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1833": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "ADD",
      "path": "3"
    },
    "1834": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "1837": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1838": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2995"
    },
    "1841": {
      "fn": "BankOld.reserveDeposit",
      "jump": "i",
      "offset": [
        4314,
        4354
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1842": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1843": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1845": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1846": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1847": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1848": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "SUB",
      "path": "3"
    },
    "1849": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1850": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "1851": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4314,
        4354
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1852": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4387,
        4393
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 20
    },
    "1853": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4371
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1855": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1857": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4383
      ],
      "op": "ADD",
      "path": "3"
    },
    "1858": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1860": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1861": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1862": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1863": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x750"
    },
    "1866": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1867": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1868": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "1871": {
      "fn": "BankOld.reserveDeposit",
      "jump": "i",
      "offset": [
        4364,
        4393
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1872": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1873": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1874": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1875": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4364,
        4393
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4410,
        4414
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x3"
    },
    "1880": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4410,
        4427
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1881": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4403,
        4526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76D"
    },
    "1884": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4403,
        4526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1891": {
      "op": "SHL"
    },
    "1892": {
      "op": "SUB"
    },
    "1893": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4410,
        4427
      ],
      "op": "AND",
      "path": "3"
    },
    "1894": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4459,
        4469
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1895": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4491,
        4495
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1896": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4510,
        4516
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1897": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4403,
        4445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E08"
    },
    "1900": {
      "fn": "BankOld.reserveDeposit",
      "jump": "i",
      "offset": [
        4403,
        4526
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1901": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4403,
        4526
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1902": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x40"
    },
    "1904": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "DUP2"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x71EB3E5DF75EF293B81B4C7B38DB51F7A6CEC007D12529CB74D4EAFB7FA53222"
    },
    "1941": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1944": {
      "op": "ADD"
    },
    "1945": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1946": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1948": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1949": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1950": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1951": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "SUB",
      "path": "3"
    },
    "1952": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1953": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4541,
        4563
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1954": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "POP",
      "path": "3"
    },
    "1955": {
      "fn": "BankOld.reserveDeposit",
      "offset": [
        4206,
        4570
      ],
      "op": "POP",
      "path": "3"
    },
    "1956": {
      "fn": "BankOld.reserveDeposit",
      "jump": "o",
      "offset": [
        4206,
        4570
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1957": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1958": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        701,
        705
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "op": "NOT"
    },
    "1969": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        781
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 23
    },
    "1970": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        781
      ],
      "op": "AND",
      "path": "1"
    },
    "1971": {
      "op": "PUSH4",
      "value": "0x5A05180F"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1978": {
      "op": "SHL"
    },
    "1979": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        781
      ],
      "op": "EQ",
      "path": "1"
    },
    "1980": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        781
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1981": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7CA"
    },
    "1984": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        821
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1985": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        821
      ],
      "op": "POP",
      "path": "1"
    },
    "1986": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        785,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7CA"
    },
    "1989": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        809,
        820
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1990": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        785,
        808
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E79"
    },
    "1993": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "i",
      "offset": [
        785,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1994": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        785,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1995": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        717,
        821
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1996": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1997": {
      "op": "POP"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "o",
      "offset": [
        616,
        828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2000": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2001": {
      "fn": "BankStorage.getName",
      "offset": [
        1403,
        1416
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2003": {
      "fn": "BankStorage.getName",
      "offset": [
        1435,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0x1"
    },
    "2005": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2006": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2007": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7DF"
    },
    "2010": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2011": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29EE"
    },
    "2014": {
      "fn": "BankStorage.getName",
      "jump": "i",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2015": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2016": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2017": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2019": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "4"
    },
    "2020": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2022": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2023": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2024": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DIV",
      "path": "4"
    },
    "2025": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MUL",
      "path": "4"
    },
    "2026": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2028": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "4"
    },
    "2029": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2031": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2032": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2033": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2034": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "4"
    },
    "2035": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2037": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2038": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2039": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2040": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2041": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2042": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2043": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2044": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2045": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2047": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "4"
    },
    "2048": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2049": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2050": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2051": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x80B"
    },
    "2054": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2055": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29EE"
    },
    "2058": {
      "fn": "BankStorage.getName",
      "jump": "i",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2059": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2060": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2061": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2062": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x858"
    },
    "2065": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2066": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2067": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2069": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "LT",
      "path": "4"
    },
    "2070": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x82D"
    },
    "2073": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2074": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2077": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2078": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2079": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2080": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DIV",
      "path": "4"
    },
    "2081": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MUL",
      "path": "4"
    },
    "2082": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2083": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2084": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2085": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2087": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "4"
    },
    "2088": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2089": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x858"
    },
    "2092": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2093": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2094": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2095": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "4"
    },
    "2096": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2097": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2098": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2100": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2101": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2103": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2105": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2106": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2107": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2108": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2109": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2110": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2111": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2112": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2113": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2115": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "4"
    },
    "2116": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2117": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2119": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "4"
    },
    "2120": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2121": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2122": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "GT",
      "path": "4"
    },
    "2123": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x83B"
    },
    "2126": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2127": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2128": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2129": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SUB",
      "path": "4"
    },
    "2130": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2132": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "AND",
      "path": "4"
    },
    "2133": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2134": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "4"
    },
    "2135": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2136": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2137": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "4"
    },
    "2138": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "4"
    },
    "2139": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "4"
    },
    "2140": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "4"
    },
    "2141": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "4"
    },
    "2142": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2143": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "4"
    },
    "2144": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2145": {
      "fn": "BankStorage.getName",
      "jump": "o",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2146": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2153": {
      "op": "SHL"
    },
    "2154": {
      "op": "SUB"
    },
    "2155": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2156": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "AND",
      "path": "4"
    },
    "2157": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6050,
        6057
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2159": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2160": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2161": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2162": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6083
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2164": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2166": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2167": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2169": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2170": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2171": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6106
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2173": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6106
      ],
      "op": "ADD",
      "path": "4"
    },
    "2174": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6106
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2175": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6073,
        6427
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x88A"
    },
    "2178": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6073,
        6427
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6134,
        6135
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0x0"
    },
    "2182": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6134,
        6135
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2183": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "o",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2186": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6073,
        6427
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2187": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6394,
        6415
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 26,
      "value": "0x5"
    },
    "2189": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6394,
        6415
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2190": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6360,
        6370
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2192": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6360,
        6370
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2199": {
      "op": "SHL"
    },
    "2200": {
      "op": "SUB"
    },
    "2201": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2202": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "AND",
      "path": "4"
    },
    "2203": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2205": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2206": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2207": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2208": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6394,
        6415
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2210": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2212": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2213": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2215": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2216": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2217": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6360,
        6370
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2219": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6357
      ],
      "op": "ADD",
      "path": "4"
    },
    "2220": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6357
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2221": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6370
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B6"
    },
    "2224": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6370
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2225": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6360,
        6370
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2226": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6370
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A29"
    },
    "2229": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6328,
        6370
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2230": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6370
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2231": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C0"
    },
    "2234": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2235": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2236": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A48"
    },
    "2239": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6327,
        6415
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2240": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2241": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6270,
        6297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xB"
    },
    "2243": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6270,
        6297
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2244": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6230,
        6246
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "2246": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6230,
        6246
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2253": {
      "op": "SHL"
    },
    "2254": {
      "op": "SUB"
    },
    "2255": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2256": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "AND",
      "path": "4"
    },
    "2257": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2259": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2260": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2261": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2262": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6270,
        6297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2264": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2266": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2267": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2269": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2270": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2271": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6227
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2272": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6246
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8E9"
    },
    "2275": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6246
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2276": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6230,
        6246
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2277": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6246
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A29"
    },
    "2280": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6192,
        6246
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2281": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6246
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2282": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8F3"
    },
    "2285": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2286": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2287": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A48"
    },
    "2290": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6191,
        6297
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2291": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2292": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6190,
        6306
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8FF"
    },
    "2295": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6190,
        6306
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2296": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6301,
        6306
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2710"
    },
    "2299": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6190,
        6306
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A29"
    },
    "2302": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6190,
        6306
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2303": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6190,
        6306
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2304": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6189,
        6416
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7CA"
    },
    "2307": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6189,
        6416
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2308": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6189,
        6416
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2309": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6189,
        6416
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A48"
    },
    "2312": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6189,
        6416
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2313": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6073,
        6427
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2314": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2315": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2316": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "POP",
      "path": "4"
    },
    "2317": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "o",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2318": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2319": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4468,
        4475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2321": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2322": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2323": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2324": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "2326": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2328": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2329": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2331": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2332": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2333": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2335": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "ADD",
      "path": "0"
    },
    "2336": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2337": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x929"
    },
    "2340": {
      "offset": [
        2509,
        2513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2341": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "2344": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2345": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2346": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4886,
        4911
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0x933"
    },
    "2349": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4897,
        4901
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2350": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4903,
        4910
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2351": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4886,
        4896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0B"
    },
    "2354": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4886,
        4911
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2355": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4886,
        4911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2356": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "POP",
      "path": "0"
    },
    "2357": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "POP",
      "path": "0"
    },
    "2358": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "POP",
      "path": "0"
    },
    "2359": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2360": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2361": {
      "fn": "BankOld.liquidate",
      "offset": [
        7747,
        7779
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 28,
      "value": "0x950"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2366": {
      "op": "DUP1"
    },
    "2367": {
      "op": "MLOAD"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2370": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "2373": {
      "op": "DUP4"
    },
    "2374": {
      "op": "CODECOPY"
    },
    "2375": {
      "op": "DUP2"
    },
    "2376": {
      "op": "MLOAD"
    },
    "2377": {
      "op": "SWAP2"
    },
    "2378": {
      "op": "MSTORE"
    },
    "2379": {
      "fn": "BankOld.liquidate",
      "offset": [
        7768,
        7778
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2380": {
      "fn": "BankOld.liquidate",
      "offset": [
        7747,
        7754
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1848"
    },
    "2383": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        7747,
        7779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2384": {
      "branch": 147,
      "fn": "BankOld.liquidate",
      "offset": [
        7747,
        7779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2385": {
      "fn": "BankOld.liquidate",
      "offset": [
        7747,
        7838
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2386": {
      "fn": "BankOld.liquidate",
      "offset": [
        7747,
        7838
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x961"
    },
    "2389": {
      "branch": 147,
      "fn": "BankOld.liquidate",
      "offset": [
        7747,
        7838
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2390": {
      "op": "POP"
    },
    "2391": {
      "fn": "BankOld.liquidate",
      "offset": [
        7799,
        7838
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x961"
    },
    "2394": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2396": {
      "fn": "BankOld.liquidate",
      "offset": [
        7827,
        7837
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2397": {
      "fn": "BankOld.liquidate",
      "offset": [
        7799,
        7806
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1848"
    },
    "2400": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        7799,
        7838
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2401": {
      "branch": 148,
      "fn": "BankOld.liquidate",
      "offset": [
        7799,
        7838
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2402": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A3"
    },
    "2405": {
      "branch": 148,
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2406": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2408": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2409": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2415": {
      "op": "SHL"
    },
    "2416": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2417": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2420": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2422": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2423": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "ADD",
      "path": "3"
    },
    "2424": {
      "op": "MSTORE"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2429": {
      "op": "DUP3"
    },
    "2430": {
      "op": "ADD"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH19",
      "value": "0x3737BA1035B2B2B832B91037B91030B236B4B7"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "2454": {
      "op": "SHL"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2457": {
      "op": "DUP3"
    },
    "2458": {
      "op": "ADD"
    },
    "2459": {
      "op": "MSTORE"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2462": {
      "op": "ADD"
    },
    "2463": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "2466": {
      "op": "JUMP"
    },
    "2467": {
      "fn": "BankOld.liquidate",
      "offset": [
        7726,
        7883
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2468": {
      "fn": "BankOld.liquidate",
      "offset": [
        8017,
        8047
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0x13"
    },
    "2470": {
      "fn": "BankOld.liquidate",
      "offset": [
        8017,
        8047
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2471": {
      "fn": "BankOld.liquidate",
      "offset": [
        8017,
        8053
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B1"
    },
    "2474": {
      "fn": "BankOld.liquidate",
      "offset": [
        8017,
        8053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2475": {
      "fn": "BankOld.liquidate",
      "offset": [
        8050,
        8053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2477": {
      "fn": "BankOld.liquidate",
      "offset": [
        8017,
        8053
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "2480": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8017,
        8053
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2481": {
      "fn": "BankOld.liquidate",
      "offset": [
        8017,
        8053
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2482": {
      "fn": "BankOld.liquidate",
      "offset": [
        7956,
        7998
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9BA"
    },
    "2485": {
      "fn": "BankOld.liquidate",
      "offset": [
        7987,
        7997
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2486": {
      "fn": "BankOld.liquidate",
      "offset": [
        7956,
        7986
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x862"
    },
    "2489": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        7956,
        7998
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2490": {
      "fn": "BankOld.liquidate",
      "offset": [
        7956,
        7998
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2491": {
      "branch": 149,
      "fn": "BankOld.liquidate",
      "offset": [
        7956,
        8053
      ],
      "op": "LT",
      "path": "3"
    },
    "2492": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA07"
    },
    "2495": {
      "branch": 149,
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2496": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2498": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2505": {
      "op": "SHL"
    },
    "2506": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2507": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2510": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2512": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2513": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "ADD",
      "path": "3"
    },
    "2514": {
      "op": "MSTORE"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2519": {
      "op": "DUP3"
    },
    "2520": {
      "op": "ADD"
    },
    "2521": {
      "op": "MSTORE"
    },
    "2522": {
      "op": "PUSH32",
      "value": "0x5641554C54204E4F5420554E444552434F4C4C41544552414C495A4544000000"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "ADD"
    },
    "2559": {
      "op": "MSTORE"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2562": {
      "op": "ADD"
    },
    "2563": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "2566": {
      "op": "JUMP"
    },
    "2567": {
      "fn": "BankOld.liquidate",
      "offset": [
        7935,
        8108
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2568": {
      "fn": "BankOld.liquidate",
      "offset": [
        8254,
        8280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "2570": {
      "fn": "BankOld.liquidate",
      "offset": [
        8254,
        8280
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2577": {
      "op": "SHL"
    },
    "2578": {
      "op": "SUB"
    },
    "2579": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2580": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "AND",
      "path": "3"
    },
    "2581": {
      "fn": "BankOld.liquidate",
      "offset": [
        8118,
        8135
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2583": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2584": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2585": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2586": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8190
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2588": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2590": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2591": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2593": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2594": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8202
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2595": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2597": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8213
      ],
      "op": "ADD",
      "path": "3"
    },
    "2598": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8213
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2599": {
      "fn": "BankOld.liquidate",
      "offset": [
        8118,
        8135
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2600": {
      "fn": "BankOld.liquidate",
      "offset": [
        8118,
        8135
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2601": {
      "fn": "BankOld.liquidate",
      "offset": [
        8322,
        8325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2603": {
      "fn": "BankOld.liquidate",
      "offset": [
        8322,
        8325
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2604": {
      "fn": "BankOld.liquidate",
      "offset": [
        8322,
        8325
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2605": {
      "fn": "BankOld.liquidate",
      "offset": [
        8322,
        8325
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2606": {
      "fn": "BankOld.liquidate",
      "offset": [
        8254,
        8280
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2607": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8235
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA38"
    },
    "2610": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8235
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2611": {
      "fn": "BankOld.liquidate",
      "offset": [
        8322,
        8325
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2612": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8235
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "2615": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8184,
        8235
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2616": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8235
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2617": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA42"
    },
    "2620": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8280
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2621": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8280
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2622": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "2625": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8184,
        8280
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2626": {
      "fn": "BankOld.liquidate",
      "offset": [
        8184,
        8280
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2627": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4C"
    },
    "2630": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8303
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2631": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8303
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2632": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8303
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "2635": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8183,
        8303
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2636": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8303
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2637": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA56"
    },
    "2640": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8325
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2641": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8325
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2642": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "2645": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8183,
        8325
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2646": {
      "fn": "BankOld.liquidate",
      "offset": [
        8183,
        8325
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "op": "SUB"
    },
    "2655": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2656": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "AND",
      "path": "3"
    },
    "2657": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2659": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2660": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2661": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2662": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8144
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2664": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2666": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2667": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2669": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2670": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8156
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2671": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2673": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8167
      ],
      "op": "ADD",
      "path": "3"
    },
    "2674": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8167
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2675": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8326
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7C"
    },
    "2678": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8326
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2679": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8326
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2680": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8326
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "2683": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8138,
        8326
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2684": {
      "fn": "BankOld.liquidate",
      "offset": [
        8138,
        8326
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2685": {
      "fn": "BankOld.liquidate",
      "offset": [
        8407,
        8423
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2687": {
      "fn": "BankOld.liquidate",
      "offset": [
        8407,
        8423
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2688": {
      "fn": "BankOld.liquidate",
      "offset": [
        8381,
        8391
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2690": {
      "fn": "BankOld.liquidate",
      "offset": [
        8381,
        8391
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2691": {
      "fn": "BankOld.liquidate",
      "offset": [
        8118,
        8326
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2692": {
      "fn": "BankOld.liquidate",
      "offset": [
        8118,
        8326
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2693": {
      "op": "POP"
    },
    "2694": {
      "fn": "BankOld.liquidate",
      "offset": [
        8336,
        8365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2696": {
      "fn": "BankOld.liquidate",
      "offset": [
        8336,
        8365
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2697": {
      "fn": "BankOld.liquidate",
      "offset": [
        8369,
        8391
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA92"
    },
    "2700": {
      "fn": "BankOld.liquidate",
      "offset": [
        8369,
        8391
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2701": {
      "fn": "BankOld.liquidate",
      "offset": [
        8118,
        8326
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2702": {
      "fn": "BankOld.liquidate",
      "offset": [
        8369,
        8391
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "2705": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8369,
        8391
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2706": {
      "fn": "BankOld.liquidate",
      "offset": [
        8369,
        8391
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2707": {
      "fn": "BankOld.liquidate",
      "offset": [
        8368,
        8423
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9C"
    },
    "2710": {
      "fn": "BankOld.liquidate",
      "offset": [
        8368,
        8423
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2711": {
      "fn": "BankOld.liquidate",
      "offset": [
        8368,
        8423
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2712": {
      "fn": "BankOld.liquidate",
      "offset": [
        8368,
        8423
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "2715": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8368,
        8423
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2716": {
      "fn": "BankOld.liquidate",
      "offset": [
        8368,
        8423
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2723": {
      "op": "SHL"
    },
    "2724": {
      "op": "SUB"
    },
    "2725": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2726": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "AND",
      "path": "3"
    },
    "2727": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2729": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2730": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2731": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2732": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8468
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2734": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2736": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2737": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2739": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2740": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8480
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2741": {
      "fn": "BankOld.liquidate",
      "offset": [
        8462,
        8497
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2742": {
      "fn": "BankOld.liquidate",
      "offset": [
        8336,
        8423
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2743": {
      "fn": "BankOld.liquidate",
      "offset": [
        8336,
        8423
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "fn": "BankOld.liquidate",
      "offset": [
        8438,
        8497
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2746": {
      "branch": 150,
      "fn": "BankOld.liquidate",
      "offset": [
        8438,
        8497
      ],
      "op": "GT",
      "path": "3"
    },
    "2747": {
      "fn": "BankOld.liquidate",
      "offset": [
        8434,
        8583
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2748": {
      "fn": "BankOld.liquidate",
      "offset": [
        8434,
        8583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADA"
    },
    "2751": {
      "branch": 150,
      "fn": "BankOld.liquidate",
      "offset": [
        8434,
        8583
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2759": {
      "op": "SHL"
    },
    "2760": {
      "op": "SUB"
    },
    "2761": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 30
    },
    "2762": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "AND",
      "path": "3"
    },
    "2763": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2765": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2766": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2767": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2768": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8543
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2770": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2772": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2773": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2775": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2776": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8555
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2777": {
      "fn": "BankOld.liquidate",
      "offset": [
        8537,
        8572
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2778": {
      "fn": "BankOld.liquidate",
      "offset": [
        8434,
        8583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2779": {
      "fn": "BankOld.liquidate",
      "offset": [
        8593,
        8610
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2781": {
      "fn": "BankOld.liquidate",
      "offset": [
        8613,
        8639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE7"
    },
    "2784": {
      "fn": "BankOld.liquidate",
      "offset": [
        8637,
        8639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2786": {
      "fn": "BankOld.liquidate",
      "offset": [
        8613,
        8634
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2787": {
      "fn": "BankOld.liquidate",
      "offset": [
        8613,
        8639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "2790": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8613,
        8639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2791": {
      "fn": "BankOld.liquidate",
      "offset": [
        8613,
        8639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2792": {
      "fn": "BankOld.liquidate",
      "offset": [
        8593,
        8639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2793": {
      "op": "POP"
    },
    "2794": {
      "fn": "BankOld.liquidate",
      "offset": [
        8711,
        8744
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 31,
      "value": "0xAF3"
    },
    "2797": {
      "fn": "BankOld.liquidate",
      "offset": [
        8593,
        8639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2798": {
      "fn": "BankOld.liquidate",
      "offset": [
        8711,
        8732
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2799": {
      "fn": "BankOld.liquidate",
      "offset": [
        8711,
        8744
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "2802": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8711,
        8744
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2803": {
      "fn": "BankOld.liquidate",
      "offset": [
        8711,
        8744
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2804": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2806": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2807": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2808": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8707
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2810": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2811": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB05"
    },
    "2814": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2815": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2816": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2817": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "2820": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8682,
        8744
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2821": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2822": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2823": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2824": {
      "fn": "BankOld.liquidate",
      "offset": [
        8682,
        8744
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2825": {
      "op": "POP"
    },
    "2826": {
      "op": "POP"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2833": {
      "op": "SHL"
    },
    "2834": {
      "op": "SUB"
    },
    "2835": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 32
    },
    "2836": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "AND",
      "path": "3"
    },
    "2837": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2839": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2840": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2841": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2842": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2844": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2846": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2847": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2849": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2850": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2851": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8814
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2852": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8814
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2853": {
      "fn": "BankOld.liquidate",
      "offset": [
        8793,
        8814
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2854": {
      "fn": "BankOld.liquidate",
      "offset": [
        8793,
        8814
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2855": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2856": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB32"
    },
    "2859": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8814
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2860": {
      "fn": "BankOld.liquidate",
      "offset": [
        8793,
        8814
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2861": {
      "fn": "BankOld.liquidate",
      "offset": [
        8793,
        8814
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2862": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "2865": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8754,
        8814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2866": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2867": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8814
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2868": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8814
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2869": {
      "fn": "BankOld.liquidate",
      "offset": [
        8754,
        8814
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "op": "POP"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2878": {
      "op": "SHL"
    },
    "2879": {
      "op": "SUB"
    },
    "2880": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 33
    },
    "2881": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2882": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "AND",
      "path": "3"
    },
    "2883": {
      "fn": "BankOld.liquidate",
      "offset": [
        8856,
        8857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2885": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2886": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2887": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2888": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2890": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2892": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2893": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2895": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2896": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8842
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2897": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8853
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2899": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8853
      ],
      "op": "ADD",
      "path": "3"
    },
    "2900": {
      "fn": "BankOld.liquidate",
      "offset": [
        8824,
        8857
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2901": {
      "fn": "BankOld.liquidate",
      "offset": [
        8925,
        8942
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 34,
      "value": "0x4D"
    },
    "2903": {
      "fn": "BankOld.liquidate",
      "offset": [
        8925,
        8942
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2904": {
      "fn": "BankOld.liquidate",
      "offset": [
        8874,
        8884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "2906": {
      "fn": "BankOld.liquidate",
      "offset": [
        8874,
        8897
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2907": {
      "fn": "BankOld.liquidate",
      "offset": [
        8867,
        8975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB69"
    },
    "2910": {
      "fn": "BankOld.liquidate",
      "offset": [
        8867,
        8975
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2911": {
      "fn": "BankOld.liquidate",
      "offset": [
        8874,
        8897
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2912": {
      "fn": "BankOld.liquidate",
      "offset": [
        8874,
        8897
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2913": {
      "fn": "BankOld.liquidate",
      "offset": [
        8874,
        8897
      ],
      "op": "AND",
      "path": "3"
    },
    "2914": {
      "fn": "BankOld.liquidate",
      "offset": [
        8874,
        8897
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2915": {
      "fn": "BankOld.liquidate",
      "offset": [
        8925,
        8942
      ],
      "op": "AND",
      "path": "3"
    },
    "2916": {
      "fn": "BankOld.liquidate",
      "offset": [
        8956,
        8965
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2917": {
      "fn": "BankOld.liquidate",
      "offset": [
        8867,
        8911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "2920": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8867,
        8975
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2921": {
      "fn": "BankOld.liquidate",
      "offset": [
        8867,
        8975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2922": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 35,
      "value": "0x6DD29D11F8D1BCDBD79DA21BF92895417DCC2F8886B3DB11C8A4CE00B73DE9D0"
    },
    "2955": {
      "fn": "BankOld.liquidate",
      "offset": [
        9002,
        9012
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2956": {
      "fn": "BankOld.liquidate",
      "offset": [
        9014,
        9023
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2957": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2959": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2960": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9A"
    },
    "2963": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2964": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2965": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2966": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A81"
    },
    "2969": {
      "fn": "BankOld.liquidate",
      "jump": "i",
      "offset": [
        8990,
        9024
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2970": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2971": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2973": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2974": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2975": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2976": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "SUB",
      "path": "3"
    },
    "2977": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2978": {
      "fn": "BankOld.liquidate",
      "offset": [
        8990,
        9024
      ],
      "op": "LOG1",
      "path": "3"
    },
    "2979": {
      "fn": "BankOld.liquidate",
      "offset": [
        7716,
        9031
      ],
      "op": "POP",
      "path": "3"
    },
    "2980": {
      "fn": "BankOld.liquidate",
      "offset": [
        7716,
        9031
      ],
      "op": "POP",
      "path": "3"
    },
    "2981": {
      "fn": "BankOld.liquidate",
      "offset": [
        7716,
        9031
      ],
      "op": "POP",
      "path": "3"
    },
    "2982": {
      "fn": "BankOld.liquidate",
      "offset": [
        7668,
        9031
      ],
      "op": "POP",
      "path": "3"
    },
    "2983": {
      "fn": "BankOld.liquidate",
      "jump": "o",
      "offset": [
        7668,
        9031
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2984": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "op": "SUB"
    },
    "2993": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5885,
        5908
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 36
    },
    "2994": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5885,
        5908
      ],
      "op": "AND",
      "path": "0"
    },
    "2995": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 37
    },
    "2996": {
      "branch": 174,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5885,
        5908
      ],
      "op": "EQ",
      "path": "0"
    },
    "2997": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC18"
    },
    "3000": {
      "branch": 174,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3001": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3003": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3004": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3010": {
      "op": "SHL"
    },
    "3011": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3012": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3015": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3017": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3018": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "ADD",
      "path": "0"
    },
    "3019": {
      "op": "MSTORE"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3024": {
      "op": "DUP3"
    },
    "3025": {
      "op": "ADD"
    },
    "3026": {
      "op": "MSTORE"
    },
    "3027": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3062": {
      "op": "DUP3"
    },
    "3063": {
      "op": "ADD"
    },
    "3064": {
      "op": "MSTORE"
    },
    "3065": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3083": {
      "op": "SHL"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3086": {
      "op": "DUP3"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3091": {
      "op": "ADD"
    },
    "3092": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "3095": {
      "op": "JUMP"
    },
    "3096": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3097": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5971,
        5997
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0xC22"
    },
    "3100": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5983,
        5987
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3101": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5989,
        5996
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3102": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5971,
        5982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F4C"
    },
    "3105": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5971,
        5997
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3106": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5971,
        5997
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3107": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "POP",
      "path": "0"
    },
    "3108": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "POP",
      "path": "0"
    },
    "3109": {
      "fn": "AccessControl.renounceRole",
      "jump": "o",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3110": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2794,
        3425
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3111": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3113": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC31"
    },
    "3116": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3117": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "3120": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3121": {
      "fn": "BankOld.setCollateral",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3122": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3058,
        3068
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 39,
      "value": "0x9"
    },
    "3124": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3058,
        3081
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3131": {
      "op": "SHL"
    },
    "3132": {
      "op": "SUB"
    },
    "3133": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3058,
        3081
      ],
      "op": "AND",
      "path": "3"
    },
    "3134": {
      "branch": 151,
      "fn": "BankOld.setCollateral",
      "offset": [
        3058,
        3095
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3135": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3058,
        3144
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3136": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3058,
        3144
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3137": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3058,
        3144
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC52"
    },
    "3140": {
      "branch": 151,
      "fn": "BankOld.setCollateral",
      "offset": [
        3058,
        3144
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3141": {
      "op": "POP"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3148": {
      "op": "SHL"
    },
    "3149": {
      "op": "SUB"
    },
    "3150": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3115,
        3144
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3151": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3115,
        3144
      ],
      "op": "AND",
      "path": "3"
    },
    "3152": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3115,
        3144
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3153": {
      "branch": 152,
      "fn": "BankOld.setCollateral",
      "offset": [
        3115,
        3144
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3154": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3058,
        3144
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3155": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC89"
    },
    "3158": {
      "branch": 152,
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3159": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3161": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3168": {
      "op": "SHL"
    },
    "3169": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3170": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3173": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3175": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3176": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "ADD",
      "path": "3"
    },
    "3177": {
      "op": "MSTORE"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3182": {
      "op": "DUP3"
    },
    "3183": {
      "op": "ADD"
    },
    "3184": {
      "op": "MSTORE"
    },
    "3185": {
      "op": "PUSH8",
      "value": "0x2173657461626C65"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3196": {
      "op": "SHL"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3199": {
      "op": "DUP3"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "MSTORE"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3204": {
      "op": "ADD"
    },
    "3205": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "3208": {
      "op": "JUMP"
    },
    "3209": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3037,
        3178
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3210": {
      "op": "POP"
    },
    "3211": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3198
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 40,
      "value": "0x9"
    },
    "3213": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3214": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3221": {
      "op": "SHL"
    },
    "3222": {
      "op": "SUB"
    },
    "3223": {
      "op": "NOT"
    },
    "3224": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "AND",
      "path": "3"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "op": "SUB"
    },
    "3233": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3234": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3235": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3236": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "AND",
      "path": "3"
    },
    "3237": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3238": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3239": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3240": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "OR",
      "path": "3"
    },
    "3241": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3242": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3243": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3188,
        3229
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3244": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3239,
        3255
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 41,
      "value": "0xA"
    },
    "3246": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3239,
        3278
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3247": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3239,
        3278
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3248": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3239,
        3278
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3249": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3239,
        3278
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3250": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3288,
        3315
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 42,
      "value": "0xB"
    },
    "3252": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3288,
        3349
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3253": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3288,
        3349
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3254": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3288,
        3349
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3255": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3288,
        3349
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3256": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3359,
        3385
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 43,
      "value": "0xC"
    },
    "3258": {
      "fn": "BankOld.setCollateral",
      "offset": [
        3359,
        3418
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3259": {
      "fn": "BankOld.setCollateral",
      "jump": "o",
      "offset": [
        2794,
        3425
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3260": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3261": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13421,
        13443
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "3263": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13421,
        13443
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3264": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3266": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3267": {
      "op": "PUSH4",
      "value": "0x11BBB871"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3274": {
      "op": "SHL"
    },
    "3275": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3276": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3277": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3279": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3280": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "ADD",
      "path": "3"
    },
    "3281": {
      "op": "DUP4"
    },
    "3282": {
      "op": "SWAP1"
    },
    "3283": {
      "op": "MSTORE"
    },
    "3284": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13288,
        13303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3286": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13288,
        13303
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3287": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13288,
        13303
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3288": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13288,
        13303
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3289": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13288,
        13303
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3290": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13288,
        13303
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3297": {
      "op": "SHL"
    },
    "3298": {
      "op": "SUB"
    },
    "3299": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13421,
        13443
      ],
      "op": "AND",
      "path": "3"
    },
    "3300": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13421,
        13443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3301": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13288,
        13303
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3302": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13288,
        13303
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3303": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13421,
        13443
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3304": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13421,
        13443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3305": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13505
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x46EEE1C4"
    },
    "3310": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3313": {
      "op": "ADD"
    },
    "3314": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3316": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3318": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3319": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3320": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3321": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "SUB",
      "path": "3"
    },
    "3322": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3323": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3324": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "GAS",
      "path": "3"
    },
    "3325": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3326": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3327": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3328": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3329": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD0E"
    },
    "3332": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3333": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3334": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3336": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3337": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3338": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3339": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3341": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3342": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3343": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "POP",
      "path": "3"
    },
    "3344": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "POP",
      "path": "3"
    },
    "3345": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "POP",
      "path": "3"
    },
    "3346": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "POP",
      "path": "3"
    },
    "3347": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3349": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3350": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3351": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3353": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "NOT",
      "path": "3"
    },
    "3354": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3356": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3357": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "ADD",
      "path": "3"
    },
    "3358": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "AND",
      "path": "3"
    },
    "3359": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3360": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "ADD",
      "path": "3"
    },
    "3361": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3362": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3364": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3365": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "POP",
      "path": "3"
    },
    "3366": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3367": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "ADD",
      "path": "3"
    },
    "3368": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3369": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD32"
    },
    "3372": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3373": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3374": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A9A"
    },
    "3377": {
      "fn": "BankOld.getCurrentValue",
      "jump": "i",
      "offset": [
        13471,
        13517
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3378": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13471,
        13517
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3379": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13454,
        13517
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13527,
        13540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "op": "SUB"
    },
    "3391": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13581
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3392": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13581
      ],
      "op": "AND",
      "path": "3"
    },
    "3393": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13581
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x77FBB663"
    },
    "3398": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13595,
        13605
      ],
      "op": "DUP9",
      "path": "3"
    },
    "3399": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13619,
        13629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD51"
    },
    "3402": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13628,
        13629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3404": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13454,
        13517
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3405": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13619,
        13629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "3408": {
      "fn": "BankOld.getCurrentValue",
      "jump": "i",
      "offset": [
        13619,
        13629
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3409": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13619,
        13629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3410": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3412": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "op": "SUB"
    },
    "3421": {
      "op": "NOT"
    },
    "3422": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3424": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3425": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3426": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "SHL",
      "path": "3"
    },
    "3427": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "AND",
      "path": "3"
    },
    "3428": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3429": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3430": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3432": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3433": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "ADD",
      "path": "3"
    },
    "3434": {
      "op": "SWAP3"
    },
    "3435": {
      "op": "SWAP1"
    },
    "3436": {
      "op": "SWAP3"
    },
    "3437": {
      "op": "MSTORE"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3440": {
      "op": "DUP3"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "MSTORE"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3445": {
      "op": "ADD"
    },
    "3446": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3448": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3450": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3451": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3452": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3453": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "SUB",
      "path": "3"
    },
    "3454": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3455": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3456": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "GAS",
      "path": "3"
    },
    "3457": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3458": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3459": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3460": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3461": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD92"
    },
    "3464": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3465": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3466": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3468": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3469": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3470": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3471": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3473": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3474": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3475": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "POP",
      "path": "3"
    },
    "3476": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "POP",
      "path": "3"
    },
    "3477": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "POP",
      "path": "3"
    },
    "3478": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "POP",
      "path": "3"
    },
    "3479": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3481": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3482": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3483": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3485": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "NOT",
      "path": "3"
    },
    "3486": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3488": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3489": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "ADD",
      "path": "3"
    },
    "3490": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "AND",
      "path": "3"
    },
    "3491": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3492": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "ADD",
      "path": "3"
    },
    "3493": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3494": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3496": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3497": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "POP",
      "path": "3"
    },
    "3498": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3499": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "ADD",
      "path": "3"
    },
    "3500": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3501": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB6"
    },
    "3504": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3505": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3506": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A9A"
    },
    "3509": {
      "fn": "BankOld.getCurrentValue",
      "jump": "i",
      "offset": [
        13543,
        13639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3510": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13543,
        13639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3511": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3513": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3514": {
      "op": "PUSH4",
      "value": "0x93FA4915"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3521": {
      "op": "SHL"
    },
    "3522": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3523": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3524": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3526": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3527": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "ADD",
      "path": "3"
    },
    "3528": {
      "op": "DUP10"
    },
    "3529": {
      "op": "SWAP1"
    },
    "3530": {
      "op": "MSTORE"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3533": {
      "op": "DUP2"
    },
    "3534": {
      "op": "ADD"
    },
    "3535": {
      "op": "DUP3"
    },
    "3536": {
      "op": "SWAP1"
    },
    "3537": {
      "op": "MSTORE"
    },
    "3538": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13527,
        13639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3539": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13527,
        13639
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3540": {
      "op": "POP"
    },
    "3541": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13649,
        13663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3543": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13649,
        13663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3550": {
      "op": "SHL"
    },
    "3551": {
      "op": "SUB"
    },
    "3552": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13685
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3553": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13685
      ],
      "op": "AND",
      "path": "3"
    },
    "3554": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3555": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13685
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x93FA4915"
    },
    "3560": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3563": {
      "op": "ADD"
    },
    "3564": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3566": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3568": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3569": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3570": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3571": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "SUB",
      "path": "3"
    },
    "3572": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3573": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3574": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "GAS",
      "path": "3"
    },
    "3575": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3576": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3577": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3578": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3579": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE08"
    },
    "3582": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3583": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3584": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3586": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3587": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3588": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3589": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3591": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3592": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3593": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "POP",
      "path": "3"
    },
    "3594": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "POP",
      "path": "3"
    },
    "3595": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "POP",
      "path": "3"
    },
    "3596": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "POP",
      "path": "3"
    },
    "3597": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3599": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3600": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3601": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3603": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "NOT",
      "path": "3"
    },
    "3604": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3606": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3607": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "ADD",
      "path": "3"
    },
    "3608": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "AND",
      "path": "3"
    },
    "3609": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3610": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "ADD",
      "path": "3"
    },
    "3611": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3612": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3614": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3615": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "POP",
      "path": "3"
    },
    "3616": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3617": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "ADD",
      "path": "3"
    },
    "3618": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3619": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2C"
    },
    "3622": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3623": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3624": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A9A"
    },
    "3627": {
      "fn": "BankOld.getCurrentValue",
      "jump": "i",
      "offset": [
        13666,
        13704
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3628": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13666,
        13704
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3629": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13649,
        13704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13718,
        13728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3632": {
      "branch": 153,
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13718,
        13728
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3633": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13714,
        13758
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE44"
    },
    "3636": {
      "branch": 153,
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13714,
        13758
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3637": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13738,
        13742
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 44,
      "value": "0x1"
    },
    "3639": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13738,
        13742
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13744,
        13750
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3642": {
      "op": "POP"
    },
    "3643": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13752,
        13757
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3644": {
      "op": "POP"
    },
    "3645": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13730,
        13758
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE51"
    },
    "3648": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13730,
        13758
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "op": "POP"
    },
    "3651": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13730,
        13758
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3652": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13714,
        13758
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13776,
        13781
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 45,
      "value": "0x0"
    },
    "3656": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13776,
        13781
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3657": {
      "op": "POP"
    },
    "3658": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13776,
        13781
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3659": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13776,
        13781
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3660": {
      "op": "POP"
    },
    "3661": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13786,
        13791
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3662": {
      "op": "POP"
    },
    "3663": {
      "op": "POP"
    },
    "3664": {
      "op": "POP"
    },
    "3665": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3666": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3667": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3668": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3669": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3670": {
      "fn": "BankOld.getCurrentValue",
      "offset": [
        13185,
        13799
      ],
      "op": "POP",
      "path": "3"
    },
    "3671": {
      "fn": "BankOld.getCurrentValue",
      "jump": "o",
      "offset": [
        13185,
        13799
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3672": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3679": {
      "op": "SHL"
    },
    "3680": {
      "op": "SUB"
    },
    "3681": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13981,
        14001
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 46
    },
    "3682": {
      "branch": 154,
      "fn": "BankOld.addKeeper",
      "offset": [
        13981,
        14001
      ],
      "op": "AND",
      "path": "3"
    },
    "3683": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA6"
    },
    "3686": {
      "branch": 154,
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3687": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3689": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3696": {
      "op": "SHL"
    },
    "3697": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3698": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3701": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3703": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3704": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "ADD",
      "path": "3"
    },
    "3705": {
      "op": "MSTORE"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3710": {
      "op": "DUP3"
    },
    "3711": {
      "op": "ADD"
    },
    "3712": {
      "op": "MSTORE"
    },
    "3713": {
      "op": "PUSH21",
      "value": "0x1BDC195C985D1A5BDB881B9BDD08185B1B1BDDD959"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "3737": {
      "op": "SHL"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3740": {
      "op": "DUP3"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "op": "MSTORE"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3745": {
      "op": "ADD"
    },
    "3746": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "3749": {
      "op": "JUMP"
    },
    "3750": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13973,
        14027
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3751": {
      "fn": "BankOld.addKeeper",
      "offset": [
        14037,
        14067
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 47,
      "value": "0xEBE"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3756": {
      "op": "DUP1"
    },
    "3757": {
      "op": "MLOAD"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3760": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "3763": {
      "op": "DUP4"
    },
    "3764": {
      "op": "CODECOPY"
    },
    "3765": {
      "op": "DUP2"
    },
    "3766": {
      "op": "MLOAD"
    },
    "3767": {
      "op": "SWAP2"
    },
    "3768": {
      "op": "MSTORE"
    },
    "3769": {
      "fn": "BankOld.addKeeper",
      "offset": [
        14060,
        14066
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3770": {
      "fn": "BankOld.addKeeper",
      "offset": [
        14037,
        14046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x90E"
    },
    "3773": {
      "fn": "BankOld.addKeeper",
      "jump": "i",
      "offset": [
        14037,
        14067
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3774": {
      "fn": "BankOld.addKeeper",
      "offset": [
        14037,
        14067
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3775": {
      "fn": "BankOld.addKeeper",
      "offset": [
        13919,
        14074
      ],
      "op": "POP",
      "path": "3"
    },
    "3776": {
      "fn": "BankOld.addKeeper",
      "jump": "o",
      "offset": [
        13919,
        14074
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3777": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5575,
        6237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3778": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3780": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECC"
    },
    "3783": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3784": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "3787": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3788": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3789": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5715,
        5722
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 48,
      "value": "0xF"
    },
    "3791": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5715,
        5740
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3792": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5715,
        5750
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3793": {
      "op": "GT"
    },
    "3794": {
      "branch": 155,
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5715,
        5750
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3795": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF1E"
    },
    "3798": {
      "branch": 155,
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3799": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3801": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3808": {
      "op": "SHL"
    },
    "3809": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3810": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3813": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3815": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3816": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "ADD",
      "path": "3"
    },
    "3817": {
      "op": "DUP2"
    },
    "3818": {
      "op": "SWAP1"
    },
    "3819": {
      "op": "MSTORE"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3822": {
      "op": "DUP3"
    },
    "3823": {
      "op": "ADD"
    },
    "3824": {
      "op": "MSTORE"
    },
    "3825": {
      "op": "PUSH32",
      "value": "0x4E4F5420454E4F55474820434F4C4C41544552414C20494E2052455345525645"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3860": {
      "op": "DUP3"
    },
    "3861": {
      "op": "ADD"
    },
    "3862": {
      "op": "MSTORE"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "3869": {
      "op": "JUMP"
    },
    "3870": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5694,
        5808
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3871": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5818,
        5835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3873": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5838,
        5850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF2B"
    },
    "3876": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5847,
        5850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC8"
    },
    "3878": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5838,
        5844
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3879": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5838,
        5850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "3882": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        5838,
        5850
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3883": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5838,
        5850
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3884": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5818,
        5850
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3885": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5818,
        5850
      ],
      "op": "POP",
      "path": "3"
    },
    "3886": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5923,
        5929
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 49
    },
    "3887": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5901
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "3889": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3891": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5919
      ],
      "op": "ADD",
      "path": "3"
    },
    "3892": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3894": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3895": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3896": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3897": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF42"
    },
    "3900": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3901": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3902": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "3905": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        5894,
        5929
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3906": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3907": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3908": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3909": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5894,
        5929
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3910": {
      "op": "POP"
    },
    "3911": {
      "op": "POP"
    },
    "3912": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5960,
        5970
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 50,
      "value": "0x9"
    },
    "3914": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5960,
        5983
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3915": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3917": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3918": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x529AFC4538720FE0B3EADC40486369AB962002D72FEAD1387B300C66073E7BF"
    },
    "3951": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3952": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF86"
    },
    "3955": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3962": {
      "op": "SHL"
    },
    "3963": {
      "op": "SUB"
    },
    "3964": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5960,
        5983
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3965": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5960,
        5983
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3966": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5960,
        5983
      ],
      "op": "AND",
      "path": "3"
    },
    "3967": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5960,
        5983
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3968": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5985,
        5991
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3969": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5985,
        5991
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3970": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A81"
    },
    "3973": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        5944,
        5992
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3974": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3975": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3977": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3978": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3979": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3980": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "SUB",
      "path": "3"
    },
    "3981": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3982": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        5944,
        5992
      ],
      "op": "LOG1",
      "path": "3"
    },
    "3983": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6002,
        6112
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 51,
      "value": "0xFAF"
    },
    "3986": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6060,
        6070
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3987": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6084,
        6102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF9C"
    },
    "3990": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6093,
        6102
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3991": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6084,
        6090
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3992": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6084,
        6102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "3995": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        6084,
        6102
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3996": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6084,
        6102
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3997": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6009,
        6019
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "3999": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6009,
        6032
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4006": {
      "op": "SHL"
    },
    "4007": {
      "op": "SUB"
    },
    "4008": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6009,
        6032
      ],
      "op": "AND",
      "path": "3"
    },
    "4009": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6009,
        6032
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4010": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6002,
        6112
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4011": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6002,
        6046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "4014": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        6002,
        6112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4015": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6002,
        6112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4016": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6180,
        6197
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 52,
      "value": "0x4D"
    },
    "4018": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6180,
        6197
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4019": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6129,
        6139
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "4021": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6129,
        6152
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4022": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6122,
        6230
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x933"
    },
    "4025": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6122,
        6230
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4032": {
      "op": "SHL"
    },
    "4033": {
      "op": "SUB"
    },
    "4034": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6129,
        6152
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4035": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6129,
        6152
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4036": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6129,
        6152
      ],
      "op": "AND",
      "path": "3"
    },
    "4037": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6129,
        6152
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4038": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6180,
        6197
      ],
      "op": "AND",
      "path": "3"
    },
    "4039": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6211,
        6220
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4040": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "offset": [
        6122,
        6166
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "4043": {
      "fn": "BankOld.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        6122,
        6230
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4044": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6942,
        7343
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4045": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7009,
        7043
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 53,
      "value": "0xFE4"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "DUP1"
    },
    "4051": {
      "op": "MLOAD"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4054": {
      "op": "PUSH2",
      "value": "0x2BAA"
    },
    "4057": {
      "op": "DUP4"
    },
    "4058": {
      "op": "CODECOPY"
    },
    "4059": {
      "op": "DUP2"
    },
    "4060": {
      "op": "MLOAD"
    },
    "4061": {
      "op": "SWAP2"
    },
    "4062": {
      "op": "MSTORE"
    },
    "4063": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7032,
        7042
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4064": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7009,
        7016
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1848"
    },
    "4067": {
      "fn": "BankOld.updateDebtPrice",
      "jump": "i",
      "offset": [
        7009,
        7043
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4068": {
      "branch": 156,
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7009,
        7043
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4069": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7009,
        7102
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4070": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7009,
        7102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF5"
    },
    "4073": {
      "branch": 156,
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7009,
        7102
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7063,
        7102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF5"
    },
    "4078": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4080": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7091,
        7101
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4081": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7063,
        7070
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1848"
    },
    "4084": {
      "fn": "BankOld.updateDebtPrice",
      "jump": "i",
      "offset": [
        7063,
        7102
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4085": {
      "branch": 157,
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7063,
        7102
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4086": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1041"
    },
    "4089": {
      "branch": 157,
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4090": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4092": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4099": {
      "op": "SHL"
    },
    "4100": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4101": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4104": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4106": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4107": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "ADD",
      "path": "3"
    },
    "4108": {
      "op": "MSTORE"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4113": {
      "op": "DUP3"
    },
    "4114": {
      "op": "ADD"
    },
    "4115": {
      "op": "MSTORE"
    },
    "4116": {
      "op": "PUSH32",
      "value": "0x6E6F742070726963652075706461746572206F722061646D696E000000000000"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4151": {
      "op": "DUP3"
    },
    "4152": {
      "op": "ADD"
    },
    "4153": {
      "op": "MSTORE"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4156": {
      "op": "ADD"
    },
    "4157": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "4160": {
      "op": "JUMP"
    },
    "4161": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        6988,
        7154
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4162": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7230,
        7250
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 54,
      "value": "0x6"
    },
    "4164": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7230,
        7250
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4165": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7201,
        7260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104D"
    },
    "4168": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7201,
        7260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4169": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7201,
        7216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCBC"
    },
    "4172": {
      "fn": "BankOld.updateDebtPrice",
      "jump": "i",
      "offset": [
        7201,
        7260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4173": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7201,
        7260
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4174": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7179,
        7197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4176": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7164,
        7260
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4177": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7167,
        7177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4179": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7164,
        7260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4180": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7164,
        7260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4181": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7164,
        7260
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4182": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7167,
        7171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4184": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7306,
        7323
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 55
    },
    "4185": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4187": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4188": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C"
    },
    "4221": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4222": {
      "op": "POP"
    },
    "4223": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1094"
    },
    "4226": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4233": {
      "op": "SHL"
    },
    "4234": {
      "op": "SUB"
    },
    "4235": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7306,
        7323
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4236": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7306,
        7323
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4237": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7306,
        7323
      ],
      "op": "AND",
      "path": "3"
    },
    "4238": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7306,
        7323
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4239": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7164,
        7260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4240": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A81"
    },
    "4243": {
      "fn": "BankOld.updateDebtPrice",
      "jump": "i",
      "offset": [
        7294,
        7336
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4244": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4245": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4247": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4248": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4249": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4250": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "SUB",
      "path": "3"
    },
    "4251": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4252": {
      "fn": "BankOld.updateDebtPrice",
      "offset": [
        7294,
        7336
      ],
      "op": "LOG1",
      "path": "3"
    },
    "4253": {
      "fn": "BankOld.updateDebtPrice",
      "jump": "o",
      "offset": [
        6942,
        7343
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4254": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14202,
        14303
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4255": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14262,
        14296
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 56,
      "value": "0xEBE"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4260": {
      "op": "DUP1"
    },
    "4261": {
      "op": "MLOAD"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4264": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "4267": {
      "op": "DUP4"
    },
    "4268": {
      "op": "CODECOPY"
    },
    "4269": {
      "op": "DUP2"
    },
    "4270": {
      "op": "MLOAD"
    },
    "4271": {
      "op": "SWAP2"
    },
    "4272": {
      "op": "MSTORE"
    },
    "4273": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14286,
        14295
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4274": {
      "fn": "BankOld.revokeKeeper",
      "offset": [
        14262,
        14272
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19C9"
    },
    "4277": {
      "fn": "BankOld.revokeKeeper",
      "jump": "i",
      "offset": [
        14262,
        14296
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4278": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        12999,
        13179
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4279": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13073,
        13090
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 57,
      "value": "0x4D"
    },
    "4281": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13073,
        13090
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4288": {
      "op": "SHL"
    },
    "4289": {
      "op": "SUB"
    },
    "4290": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13073,
        13090
      ],
      "op": "AND",
      "path": "3"
    },
    "4291": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13094,
        13104
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4292": {
      "branch": 158,
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13073,
        13104
      ],
      "op": "EQ",
      "path": "3"
    },
    "4293": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1110"
    },
    "4296": {
      "branch": 158,
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4297": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4299": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4300": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4306": {
      "op": "SHL"
    },
    "4307": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4308": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4311": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4313": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4314": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "ADD",
      "path": "3"
    },
    "4315": {
      "op": "MSTORE"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4320": {
      "op": "DUP3"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "op": "MSTORE"
    },
    "4323": {
      "op": "PUSH32",
      "value": "0x4953204E4F542042414E4B20464143544F5259204F574E455200000000000000"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4358": {
      "op": "DUP3"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "op": "MSTORE"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4363": {
      "op": "ADD"
    },
    "4364": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "4367": {
      "op": "JUMP"
    },
    "4368": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13065,
        13134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4369": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13161
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 58,
      "value": "0x4D"
    },
    "4371": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4372": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4379": {
      "op": "SHL"
    },
    "4380": {
      "op": "SUB"
    },
    "4381": {
      "op": "NOT"
    },
    "4382": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "AND",
      "path": "3"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4389": {
      "op": "SHL"
    },
    "4390": {
      "op": "SUB"
    },
    "4391": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4392": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4393": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4394": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "AND",
      "path": "3"
    },
    "4395": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4396": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4397": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4398": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "OR",
      "path": "3"
    },
    "4399": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4400": {
      "fn": "BankOld.setBankFactoryOwner",
      "offset": [
        13144,
        13172
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4401": {
      "fn": "BankOld.setBankFactoryOwner",
      "jump": "o",
      "offset": [
        12999,
        13179
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4402": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9702,
        10952
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4403": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9769,
        9779
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4404": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4406": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9780
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4407": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9780
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4408": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9780
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4409": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4411": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4413": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9780
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4414": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9780
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4416": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9780
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4417": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9780
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4418": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9791
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4420": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9791
      ],
      "op": "ADD",
      "path": "3"
    },
    "4421": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9791
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4422": {
      "branch": 159,
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9762,
        9796
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4423": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9758,
        9876
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1166"
    },
    "4426": {
      "branch": 159,
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9758,
        9876
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4427": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9844,
        9865
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 59,
      "value": "0x1152"
    },
    "4430": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9844,
        9863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1873"
    },
    "4433": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        9844,
        9865
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4434": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9844,
        9865
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4435": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9819,
        9829
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4436": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4438": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9830
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4439": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9830
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4440": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9830
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4441": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4443": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4445": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9830
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4446": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4448": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9830
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4449": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9830
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4450": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4452": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9841
      ],
      "op": "ADD",
      "path": "3"
    },
    "4453": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9812,
        9865
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4454": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9758,
        9876
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4455": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10014,
        10044
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x13"
    },
    "4457": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10014,
        10044
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4458": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10014,
        10044
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4460": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9989,
        9999
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4461": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9957,
        9973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "4463": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9957,
        9973
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4464": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9914,
        9924
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4465": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9885,
        9902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4467": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9925
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4468": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9925
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4469": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9925
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4470": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4472": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4474": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9925
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4475": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4477": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9925
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4478": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9925
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4479": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9942
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4480": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9885,
        9902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4481": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9885,
        9902
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4482": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10014,
        10044
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4483": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9989,
        9999
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4484": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x118C"
    },
    "4487": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9973
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4488": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "4491": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        9907,
        9973
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4492": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9907,
        9973
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4493": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        9999
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1196"
    },
    "4496": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        9999
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4497": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        9999
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4498": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        9999
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "4501": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        9906,
        9999
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4502": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        9999
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4503": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        10044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A0"
    },
    "4506": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        10044
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4507": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        10044
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4508": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        10044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "4511": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        9906,
        10044
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4512": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9906,
        10044
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4513": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9905,
        10051
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11AB"
    },
    "4516": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9905,
        10051
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4517": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10048,
        10051
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4519": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9905,
        10051
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "4522": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        9905,
        10051
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4523": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9905,
        10051
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4524": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10074,
        10095
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 60,
      "value": "0x5"
    },
    "4526": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10074,
        10095
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4527": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9885,
        10051
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4528": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9885,
        10051
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10061,
        10095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11BB"
    },
    "4533": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10061,
        10095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4534": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        9885,
        10051
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4535": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10061,
        10095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "4538": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10061,
        10095
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4539": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10061,
        10095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4540": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10118,
        10145
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 61,
      "value": "0xB"
    },
    "4542": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10118,
        10145
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4543": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10061,
        10095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4544": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10061,
        10095
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10105,
        10145
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CB"
    },
    "4549": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10105,
        10145
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4550": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10061,
        10095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4551": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10105,
        10145
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "4554": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10105,
        10145
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4555": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10105,
        10145
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4556": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10175,
        10185
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 62
    },
    "4557": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4559": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10186
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4560": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10186
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4561": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10186
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4562": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10174
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4564": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4566": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10186
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4567": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4569": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10186
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4570": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10186
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4571": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4573": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10197
      ],
      "op": "ADD",
      "path": "3"
    },
    "4574": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10168,
        10197
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4575": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10105,
        10145
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4576": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10105,
        10145
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10155,
        10197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11EB"
    },
    "4581": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10155,
        10197
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4582": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10105,
        10145
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4583": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10155,
        10197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "4586": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10155,
        10197
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4587": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10155,
        10197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4588": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10284,
        10306
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 63,
      "value": "0x12"
    },
    "4590": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10284,
        10306
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4591": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10155,
        10197
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4592": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10155,
        10197
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4593": {
      "op": "POP"
    },
    "4594": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10310,
        10315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "4597": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10310,
        10315
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4598": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10275,
        10306
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11FF"
    },
    "4601": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10275,
        10306
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4602": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10275,
        10281
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4603": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10275,
        10306
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "4606": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10275,
        10306
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4607": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10275,
        10306
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4608": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10274,
        10315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1209"
    },
    "4611": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10274,
        10315
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4612": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10274,
        10315
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4613": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10274,
        10315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "4616": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10274,
        10315
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4617": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10274,
        10315
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4618": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10252,
        10316
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1213"
    },
    "4621": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10252,
        10316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4622": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10252,
        10258
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4623": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10252,
        10316
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "4626": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10252,
        10316
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4627": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10252,
        10316
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4628": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10214,
        10224
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4629": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4631": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4632": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4633": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4634": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10213
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4636": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4638": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4639": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4641": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4642": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4643": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10236
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4645": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10236
      ],
      "op": "ADD",
      "path": "3"
    },
    "4646": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4647": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4648": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10236
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4649": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10236
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4650": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4651": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1235"
    },
    "4654": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4655": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4656": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4657": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "4660": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10207,
        10316
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4661": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4662": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4663": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4664": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10207,
        10316
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "op": "POP"
    },
    "4667": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10354,
        10364
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 64
    },
    "4668": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4670": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10365
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4671": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10365
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4672": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10365
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4673": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4675": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4677": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10365
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4678": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4680": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10365
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4681": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10365
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4682": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10376
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4684": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10376
      ],
      "op": "ADD",
      "path": "3"
    },
    "4685": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10376
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4686": {
      "branch": 160,
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10347,
        10388
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4687": {
      "op": "GT"
    },
    "4688": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1293"
    },
    "4691": {
      "branch": 160,
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4692": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4694": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4701": {
      "op": "SHL"
    },
    "4702": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4703": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4706": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4708": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4709": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "ADD",
      "path": "3"
    },
    "4710": {
      "op": "MSTORE"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4715": {
      "op": "DUP3"
    },
    "4716": {
      "op": "ADD"
    },
    "4717": {
      "op": "MSTORE"
    },
    "4718": {
      "op": "PUSH21",
      "value": "0x1393D508115393D551D20810D3D313105511549053"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "4742": {
      "op": "SHL"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4745": {
      "op": "DUP3"
    },
    "4746": {
      "op": "ADD"
    },
    "4747": {
      "op": "MSTORE"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4750": {
      "op": "ADD"
    },
    "4751": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "4754": {
      "op": "JUMP"
    },
    "4755": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10326,
        10435
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4756": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10483,
        10487
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 65,
      "value": "0x3"
    },
    "4758": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10483,
        10500
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4759": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4761": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4762": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4769": {
      "op": "SHL"
    },
    "4770": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4771": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4772": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10520,
        10524
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4773": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4775": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4776": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "ADD",
      "path": "3"
    },
    "4777": {
      "op": "MSTORE"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4784": {
      "op": "SHL"
    },
    "4785": {
      "op": "SUB"
    },
    "4786": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10483,
        10500
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4787": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10483,
        10500
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4788": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10483,
        10500
      ],
      "op": "AND",
      "path": "3"
    },
    "4789": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10483,
        10500
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4790": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10511
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "4795": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10511
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4798": {
      "op": "ADD"
    },
    "4799": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4801": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4803": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4804": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4805": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4806": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "SUB",
      "path": "3"
    },
    "4807": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4808": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4809": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "GAS",
      "path": "3"
    },
    "4810": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4811": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4812": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4813": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4814": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12DB"
    },
    "4817": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4818": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4819": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4821": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4822": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4823": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4824": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4826": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4827": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4828": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "POP",
      "path": "3"
    },
    "4829": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "POP",
      "path": "3"
    },
    "4830": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "POP",
      "path": "3"
    },
    "4831": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "POP",
      "path": "3"
    },
    "4832": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4834": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4835": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4836": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4838": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "NOT",
      "path": "3"
    },
    "4839": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4841": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4842": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "ADD",
      "path": "3"
    },
    "4843": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "AND",
      "path": "3"
    },
    "4844": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4845": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "ADD",
      "path": "3"
    },
    "4846": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4847": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4849": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4850": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "POP",
      "path": "3"
    },
    "4851": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4852": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "ADD",
      "path": "3"
    },
    "4853": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4854": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12FF"
    },
    "4857": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4858": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4859": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A9A"
    },
    "4862": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10476,
        10526
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4863": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10476,
        10526
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4864": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10466,
        10472
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4865": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10466,
        10526
      ],
      "op": "GT",
      "path": "3"
    },
    "4866": {
      "branch": 161,
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10466,
        10526
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4867": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1344"
    },
    "4870": {
      "branch": 161,
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4871": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4873": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4880": {
      "op": "SHL"
    },
    "4881": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4882": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4885": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4887": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4888": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "ADD",
      "path": "3"
    },
    "4889": {
      "op": "MSTORE"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4894": {
      "op": "DUP3"
    },
    "4895": {
      "op": "ADD"
    },
    "4896": {
      "op": "MSTORE"
    },
    "4897": {
      "op": "PUSH19",
      "value": "0x4E4F5420454E4F554748205245534552564553"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "4919": {
      "op": "SHL"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4922": {
      "op": "DUP3"
    },
    "4923": {
      "op": "ADD"
    },
    "4924": {
      "op": "MSTORE"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4927": {
      "op": "ADD"
    },
    "4928": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "4931": {
      "op": "JUMP"
    },
    "4932": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10445,
        10571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4933": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10634,
        10648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x16"
    },
    "4935": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10634,
        10648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4936": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10610,
        10620
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4937": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4939": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4940": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4941": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4942": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4944": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4946": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4947": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4948": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4949": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4951": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4952": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4953": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10621
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4954": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10631
      ],
      "op": "ADD",
      "path": "3"
    },
    "4955": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10603,
        10631
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4956": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10585,
        10631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1365"
    },
    "4959": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10585,
        10631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4960": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10585,
        10600
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4961": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10585,
        10631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "4964": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10585,
        10631
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4965": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10585,
        10631
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4966": {
      "branch": 162,
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10585,
        10648
      ],
      "op": "GT",
      "path": "3"
    },
    "4967": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10581,
        10793
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4968": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10581,
        10793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1382"
    },
    "4971": {
      "branch": 162,
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10581,
        10793
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4972": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10743,
        10753
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 66
    },
    "4973": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4975": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4976": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4977": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4978": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10742
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4980": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4982": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4983": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4984": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4985": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4987": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4988": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4989": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10754
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4990": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10767,
        10782
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4991": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10764
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4992": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10764
      ],
      "op": "ADD",
      "path": "3"
    },
    "4993": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10736,
        10782
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4994": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10581,
        10793
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4995": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10825,
        10831
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 67
    },
    "4996": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10809
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "4998": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10821
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5000": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10821
      ],
      "op": "ADD",
      "path": "3"
    },
    "5001": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10821
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5003": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5004": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5005": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5006": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1397"
    },
    "5009": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5010": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5011": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "5014": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10802,
        10831
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5015": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5016": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5017": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5018": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10802,
        10831
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5019": {
      "op": "POP"
    },
    "5020": {
      "op": "POP"
    },
    "5021": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10848,
        10852
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 68,
      "value": "0x3"
    },
    "5023": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10848,
        10865
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5024": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10841,
        10899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B3"
    },
    "5027": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10841,
        10899
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5034": {
      "op": "SHL"
    },
    "5035": {
      "op": "SUB"
    },
    "5036": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10848,
        10865
      ],
      "op": "AND",
      "path": "3"
    },
    "5037": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10880,
        10890
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5038": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10892,
        10898
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5039": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10841,
        10879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "5042": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10841,
        10899
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5043": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10841,
        10899
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5044": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10914,
        10945
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 69,
      "value": "0x232862A021D33EA4A70F5D509B754F0F6986AAA0FFDD5C7DB4910422AFC768A"
    },
    "5077": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10926,
        10936
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5078": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10938,
        10944
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5079": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10914,
        10945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5081": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10914,
        10945
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5082": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10914,
        10945
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x799"
    },
    "5085": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10914,
        10945
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5086": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10914,
        10945
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5087": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10914,
        10945
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5088": {
      "fn": "BankOld.vaultBorrow",
      "offset": [
        10914,
        10945
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A81"
    },
    "5091": {
      "fn": "BankOld.vaultBorrow",
      "jump": "i",
      "offset": [
        10914,
        10945
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5092": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5093": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9253,
        9254
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 70,
      "value": "0x0"
    },
    "5095": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9244,
        9250
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5096": {
      "branch": 163,
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9244,
        9254
      ],
      "op": "GT",
      "path": "3"
    },
    "5097": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1404"
    },
    "5100": {
      "branch": 163,
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5101": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5103": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5110": {
      "op": "SHL"
    },
    "5111": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5112": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5113": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5115": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "ADD",
      "path": "3"
    },
    "5116": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "5119": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5120": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2995"
    },
    "5123": {
      "fn": "BankOld.vaultDeposit",
      "jump": "i",
      "offset": [
        9236,
        9276
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5124": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9236,
        9276
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5125": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9293,
        9303
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 71
    },
    "5126": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5128": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5129": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5130": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5131": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9292
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5133": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5135": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5136": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5138": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5139": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5140": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9331
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5141": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9331
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5142": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9325,
        9331
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5143": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9325,
        9331
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5144": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9304
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5145": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9331
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1423"
    },
    "5148": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9331
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5149": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9325,
        9331
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5150": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9325,
        9331
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5151": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9331
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "5154": {
      "fn": "BankOld.vaultDeposit",
      "jump": "i",
      "offset": [
        9286,
        9331
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5155": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9331
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5156": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9331
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5157": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9331
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5158": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9286,
        9331
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5159": {
      "op": "POP"
    },
    "5160": {
      "op": "POP"
    },
    "5161": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9348
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 72,
      "value": "0xF"
    },
    "5163": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9376
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5164": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9376
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5165": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9370,
        9376
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5166": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9370,
        9376
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5167": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5168": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9366
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5170": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9366
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5171": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x143D"
    },
    "5174": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9376
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5175": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9370,
        9376
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5176": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9370,
        9376
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5177": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "5180": {
      "fn": "BankOld.vaultDeposit",
      "jump": "i",
      "offset": [
        9341,
        9376
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5181": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9376
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5182": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9376
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5183": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9376
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5184": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9341,
        9376
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5185": {
      "op": "POP"
    },
    "5186": {
      "op": "POP"
    },
    "5187": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9393,
        9403
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 73,
      "value": "0x9"
    },
    "5189": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9393,
        9416
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5190": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9386,
        9515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x145A"
    },
    "5193": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9386,
        9515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5200": {
      "op": "SHL"
    },
    "5201": {
      "op": "SUB"
    },
    "5202": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9393,
        9416
      ],
      "op": "AND",
      "path": "3"
    },
    "5203": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9448,
        9458
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5204": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9480,
        9484
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5205": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9499,
        9505
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5206": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9386,
        9434
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E08"
    },
    "5209": {
      "fn": "BankOld.vaultDeposit",
      "jump": "i",
      "offset": [
        9386,
        9515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5210": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9386,
        9515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5211": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 74,
      "value": "0x89D28CF06BDB2EE1B92CD046D58450042AD113E9F4CDABFC4D43E7C5557758D7"
    },
    "5244": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9543,
        9553
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5245": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9555,
        9561
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5246": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5248": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5249": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x148B"
    },
    "5252": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5253": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5254": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5255": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A81"
    },
    "5258": {
      "fn": "BankOld.vaultDeposit",
      "jump": "i",
      "offset": [
        9530,
        9562
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5259": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5260": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5262": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5263": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5264": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5265": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "SUB",
      "path": "3"
    },
    "5266": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5267": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9530,
        9562
      ],
      "op": "LOG1",
      "path": "3"
    },
    "5268": {
      "fn": "BankOld.vaultDeposit",
      "offset": [
        9179,
        9569
      ],
      "op": "POP",
      "path": "3"
    },
    "5269": {
      "fn": "BankOld.vaultDeposit",
      "jump": "o",
      "offset": [
        9179,
        9569
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5270": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5271": {
      "offset": [
        1048,
        1060
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1A"
    },
    "5273": {
      "fn": "BankOld.init",
      "offset": [
        1048,
        1060
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5274": {
      "fn": "BankOld.init",
      "offset": [
        1048,
        1060
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "5277": {
      "fn": "BankOld.init",
      "offset": [
        1048,
        1060
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5278": {
      "fn": "BankOld.init",
      "offset": [
        1048,
        1060
      ],
      "op": "DIV",
      "path": "8"
    },
    "5279": {
      "fn": "BankOld.init",
      "offset": [
        1048,
        1060
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "5281": {
      "fn": "BankOld.init",
      "offset": [
        1048,
        1060
      ],
      "op": "AND",
      "path": "8"
    },
    "5282": {
      "branch": 181,
      "fn": "BankOld.init",
      "offset": [
        1048,
        1060
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5283": {
      "offset": [
        1048,
        1079
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14AB"
    },
    "5286": {
      "branch": 181,
      "offset": [
        1048,
        1079
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5287": {
      "op": "POP"
    },
    "5288": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1844,
        1848
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "5289": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1888,
        1905
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "5290": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1919,
        1926
      ],
      "op": "ISZERO",
      "path": "8",
      "statement": 75
    },
    "5291": {
      "offset": [
        1064,
        1079
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5292": {
      "offset": [
        1048,
        1095
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5293": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14B9"
    },
    "5296": {
      "offset": [
        1048,
        1095
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5297": {
      "op": "POP"
    },
    "5298": {
      "offset": [
        1084,
        1095
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1A"
    },
    "5300": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1084,
        1095
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5301": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1084,
        1095
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "5303": {
      "branch": 182,
      "fn": "Initializable.isConstructor",
      "offset": [
        1084,
        1095
      ],
      "op": "AND",
      "path": "8"
    },
    "5304": {
      "offset": [
        1083,
        1095
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5305": {
      "offset": [
        1048,
        1095
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5306": {
      "offset": [
        1040,
        1146
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x151C"
    },
    "5309": {
      "branch": 182,
      "offset": [
        1040,
        1146
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5310": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5312": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5313": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5319": {
      "op": "SHL"
    },
    "5320": {
      "offset": [
        1040,
        1146
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5321": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5324": {
      "offset": [
        1040,
        1146
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5326": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5327": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "ADD",
      "path": "8"
    },
    "5328": {
      "op": "MSTORE"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5333": {
      "op": "DUP3"
    },
    "5334": {
      "op": "ADD"
    },
    "5335": {
      "op": "MSTORE"
    },
    "5336": {
      "op": "PUSH32",
      "value": "0x436F6E747261637420696E7374616E63652068617320616C7265616479206265"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5371": {
      "op": "DUP3"
    },
    "5372": {
      "op": "ADD"
    },
    "5373": {
      "op": "MSTORE"
    },
    "5374": {
      "op": "PUSH14",
      "value": "0x195B881A5B9A5D1A585B1A5E9959"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "5391": {
      "op": "SHL"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5394": {
      "op": "DUP3"
    },
    "5395": {
      "op": "ADD"
    },
    "5396": {
      "op": "MSTORE"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5399": {
      "op": "ADD"
    },
    "5400": {
      "offset": [
        1040,
        1146
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x732"
    },
    "5403": {
      "op": "JUMP"
    },
    "5404": {
      "offset": [
        1040,
        1146
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5405": {
      "offset": [
        1176,
        1188
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1A"
    },
    "5407": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5408": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "5411": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5412": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "DIV",
      "path": "8"
    },
    "5413": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "5415": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "AND",
      "path": "8"
    },
    "5416": {
      "offset": [
        1175,
        1188
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5417": {
      "offset": [
        1194,
        1274
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5418": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1194,
        1274
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5419": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1194,
        1274
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x153E"
    },
    "5422": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1194,
        1274
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5423": {
      "offset": [
        1222,
        1234
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1A"
    },
    "5425": {
      "offset": [
        1222,
        1241
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5426": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1222,
        1241
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5427": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5430": {
      "op": "NOT"
    },
    "5431": {
      "offset": [
        1249,
        1267
      ],
      "op": "AND",
      "path": "8"
    },
    "5432": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1249,
        1267
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x101"
    },
    "5435": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1249,
        1267
      ],
      "op": "OR",
      "path": "8"
    },
    "5436": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1249,
        1267
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5437": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1249,
        1267
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5438": {
      "offset": [
        1194,
        1274
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5439": {
      "fn": "BankOld.init",
      "offset": [
        2270,
        2309
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 76,
      "value": "0x1549"
    },
    "5442": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5444": {
      "fn": "BankOld.init",
      "offset": [
        2301,
        2308
      ],
      "op": "DUP12",
      "path": "3"
    },
    "5445": {
      "fn": "BankOld.init",
      "offset": [
        2270,
        2280
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F6E"
    },
    "5448": {
      "fn": "BankOld.init",
      "jump": "i",
      "offset": [
        2270,
        2309
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5449": {
      "fn": "BankOld.init",
      "offset": [
        2270,
        2309
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5450": {
      "fn": "BankOld.init",
      "offset": [
        2319,
        2339
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 77,
      "value": "0x11"
    },
    "5452": {
      "fn": "BankOld.init",
      "offset": [
        2319,
        2354
      ],
      "op": "DUP9",
      "path": "3"
    },
    "5453": {
      "fn": "BankOld.init",
      "offset": [
        2319,
        2354
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5454": {
      "fn": "BankOld.init",
      "offset": [
        2319,
        2354
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5455": {
      "fn": "BankOld.init",
      "offset": [
        2364,
        2386
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 78,
      "value": "0x12"
    },
    "5457": {
      "fn": "BankOld.init",
      "offset": [
        2364,
        2403
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5458": {
      "fn": "BankOld.init",
      "offset": [
        2364,
        2403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5459": {
      "fn": "BankOld.init",
      "offset": [
        2364,
        2403
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5460": {
      "fn": "BankOld.init",
      "offset": [
        2413,
        2443
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 79,
      "value": "0x13"
    },
    "5462": {
      "fn": "BankOld.init",
      "offset": [
        2413,
        2468
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5463": {
      "fn": "BankOld.init",
      "offset": [
        2413,
        2468
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5464": {
      "fn": "BankOld.init",
      "offset": [
        2413,
        2468
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5465": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2500
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 80,
      "value": "0x15"
    },
    "5467": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5468": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5475": {
      "op": "SHL"
    },
    "5476": {
      "op": "SUB"
    },
    "5477": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5478": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5479": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "AND",
      "path": "3"
    },
    "5480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5486": {
      "op": "SHL"
    },
    "5487": {
      "op": "SUB"
    },
    "5488": {
      "op": "NOT"
    },
    "5489": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5490": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5491": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "AND",
      "path": "3"
    },
    "5492": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "OR",
      "path": "3"
    },
    "5493": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5494": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5495": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5496": {
      "fn": "BankOld.init",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 81,
      "value": "0x14"
    },
    "5498": {
      "fn": "BankOld.init",
      "offset": [
        2527,
        2574
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5499": {
      "fn": "BankOld.init",
      "offset": [
        2527,
        2574
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5500": {
      "fn": "BankOld.init",
      "offset": [
        2527,
        2574
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5501": {
      "fn": "BankOld.init",
      "offset": [
        2584,
        2598
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 82,
      "value": "0x16"
    },
    "5503": {
      "fn": "BankOld.init",
      "offset": [
        2584,
        2607
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5504": {
      "fn": "BankOld.init",
      "offset": [
        2584,
        2607
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5505": {
      "fn": "BankOld.init",
      "offset": [
        2584,
        2607
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5506": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2634
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 83,
      "value": "0x4D"
    },
    "5508": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5509": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5510": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5511": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5512": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "AND",
      "path": "3"
    },
    "5513": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5514": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5515": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5516": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "AND",
      "path": "3"
    },
    "5517": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5518": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5519": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5520": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "OR",
      "path": "3"
    },
    "5521": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5522": {
      "fn": "BankOld.init",
      "offset": [
        2617,
        2653
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5523": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "DUP9",
      "path": "3",
      "statement": 84
    },
    "5524": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5525": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15A5"
    },
    "5528": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5529": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5531": {
      "fn": "BankOld.init",
      "offset": [
        2478,
        2517
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5532": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5534": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "DUP13",
      "path": "3"
    },
    "5535": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "ADD",
      "path": "3"
    },
    "5536": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5537": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2664"
    },
    "5540": {
      "fn": "BankOld.init",
      "jump": "i",
      "offset": [
        2663,
        2678
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5541": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5542": {
      "fn": "BankOld.init",
      "offset": [
        2663,
        2678
      ],
      "op": "POP",
      "path": "3"
    },
    "5543": {
      "offset": [
        1292,
        1306
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5544": {
      "offset": [
        1288,
        1343
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5545": {
      "fn": "BankOld.init",
      "offset": [
        1288,
        1343
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15B8"
    },
    "5548": {
      "offset": [
        1288,
        1343
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5549": {
      "offset": [
        1316,
        1328
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1A"
    },
    "5551": {
      "offset": [
        1316,
        1336
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5552": {
      "fn": "BankOld.init",
      "offset": [
        1316,
        1336
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5553": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5556": {
      "op": "NOT"
    },
    "5557": {
      "offset": [
        1316,
        1336
      ],
      "op": "AND",
      "path": "8"
    },
    "5558": {
      "fn": "BankOld.init",
      "offset": [
        1316,
        1336
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5559": {
      "fn": "BankOld.init",
      "offset": [
        1316,
        1336
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5560": {
      "offset": [
        1288,
        1343
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5561": {
      "offset": [
        1034,
        1347
      ],
      "op": "POP",
      "path": "8"
    },
    "5562": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "POP",
      "path": "3"
    },
    "5563": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "POP",
      "path": "3"
    },
    "5564": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "POP",
      "path": "3"
    },
    "5565": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "POP",
      "path": "3"
    },
    "5566": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "POP",
      "path": "3"
    },
    "5567": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "POP",
      "path": "3"
    },
    "5568": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "POP",
      "path": "3"
    },
    "5569": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "POP",
      "path": "3"
    },
    "5570": {
      "fn": "BankOld.init",
      "offset": [
        1894,
        2685
      ],
      "op": "POP",
      "path": "3"
    },
    "5571": {
      "fn": "BankOld.init",
      "jump": "o",
      "offset": [
        1894,
        2685
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5572": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11130,
        11888
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5573": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11202,
        11203
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 85,
      "value": "0x0"
    },
    "5575": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11193,
        11199
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5576": {
      "branch": 164,
      "fn": "BankOld.vaultRepay",
      "offset": [
        11193,
        11203
      ],
      "op": "GT",
      "path": "3"
    },
    "5577": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E4"
    },
    "5580": {
      "branch": 164,
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5581": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5583": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5590": {
      "op": "SHL"
    },
    "5591": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5592": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5593": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5595": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "ADD",
      "path": "3"
    },
    "5596": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "5599": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5600": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2995"
    },
    "5603": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11185,
        11225
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5604": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11185,
        11225
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5605": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11267,
        11288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 86,
      "value": "0x15EC"
    },
    "5608": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11267,
        11286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1873"
    },
    "5611": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11267,
        11288
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5612": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11267,
        11288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5613": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11242,
        11252
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5614": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5616": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5617": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11253
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5618": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11253
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5619": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11241
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5621": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5623": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11253
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5624": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11253
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5626": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5627": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11253
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5628": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11264
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5630": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11264
      ],
      "op": "ADD",
      "path": "3"
    },
    "5631": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5632": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11288
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5633": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11235,
        11288
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5634": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11319,
        11358
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 87
    },
    "5635": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11319,
        11358
      ],
      "op": "GT",
      "path": "3"
    },
    "5636": {
      "branch": 165,
      "fn": "BankOld.vaultRepay",
      "offset": [
        11319,
        11358
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5637": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1650"
    },
    "5640": {
      "branch": 165,
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5641": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5643": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5652": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5655": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5657": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5658": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "ADD",
      "path": "3"
    },
    "5659": {
      "op": "MSTORE"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5664": {
      "op": "DUP3"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "MSTORE"
    },
    "5667": {
      "op": "PUSH32",
      "value": "0x43414E4E4F54205245504159204D4F5245205448414E204F5745440000000000"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5702": {
      "op": "DUP3"
    },
    "5703": {
      "op": "ADD"
    },
    "5704": {
      "op": "MSTORE"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5707": {
      "op": "ADD"
    },
    "5708": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "5711": {
      "op": "JUMP"
    },
    "5712": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11298,
        11411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5713": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11428,
        11438
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 88
    },
    "5714": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5716": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5717": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5718": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5719": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5721": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5723": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5724": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5726": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5727": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5728": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11450
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5730": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11450
      ],
      "op": "ADD",
      "path": "3"
    },
    "5731": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11460
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5732": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11460
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5733": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11454,
        11460
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5734": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11454,
        11460
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5735": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11439
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5736": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11460
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1672"
    },
    "5739": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11460
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5740": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11454,
        11460
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5741": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11454,
        11460
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5742": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11460
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "5745": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11421,
        11460
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5746": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11460
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5747": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11460
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5748": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11460
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5749": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11421,
        11460
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5750": {
      "op": "POP"
    },
    "5751": {
      "op": "POP"
    },
    "5752": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11489
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 89,
      "value": "0x10"
    },
    "5754": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11499
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5755": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11499
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5756": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11493,
        11499
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5757": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11493,
        11499
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5758": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11489
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5759": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5761": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11489
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5762": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x168C"
    },
    "5765": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11499
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5766": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11493,
        11499
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5767": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11493,
        11499
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5768": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "5771": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11470,
        11499
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5772": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5773": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11499
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5774": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11499
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5775": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11470,
        11499
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5776": {
      "op": "POP"
    },
    "5777": {
      "op": "POP"
    },
    "5778": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11615,
        11629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x16"
    },
    "5780": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11615,
        11629
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5781": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11591,
        11601
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5782": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11509,
        11531
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5784": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5785": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5786": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5787": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5789": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5791": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5792": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5793": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5794": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5796": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5797": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11602
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5798": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11612
      ],
      "op": "ADD",
      "path": "3"
    },
    "5799": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11612
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5800": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11509,
        11531
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5801": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11509,
        11531
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5802": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B2"
    },
    "5805": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5806": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "5809": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11584,
        11629
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5810": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11584,
        11629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5811": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11553,
        11567
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x16"
    },
    "5813": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11553,
        11567
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5814": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11535,
        11567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16BF"
    },
    "5817": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11535,
        11567
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5818": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11535,
        11550
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5819": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11535,
        11567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "5822": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11535,
        11567
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5823": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11535,
        11567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5824": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11534,
        11630
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C9"
    },
    "5827": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11534,
        11630
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5828": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11534,
        11630
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5829": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11534,
        11630
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "5832": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11534,
        11630
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5833": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11534,
        11630
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5834": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11689,
        11703
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 90,
      "value": "0x16"
    },
    "5836": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11689,
        11703
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5837": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11509,
        11630
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5838": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11509,
        11630
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5839": {
      "op": "POP"
    },
    "5840": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11672,
        11703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16D9"
    },
    "5843": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11672,
        11703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5844": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11509,
        11630
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5845": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11672,
        11703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "5848": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11672,
        11703
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5849": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11672,
        11703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5850": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11647,
        11657
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5851": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5853": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5854": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5855": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5856": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11646
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5858": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5860": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5861": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5862": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5863": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5865": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5866": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5867": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11668
      ],
      "op": "ADD",
      "path": "3"
    },
    "5868": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5869": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5870": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11668
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5871": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11668
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5872": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5873": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16FB"
    },
    "5876": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5877": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5878": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5879": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D6"
    },
    "5882": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11640,
        11703
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5883": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5884": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5885": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5886": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11640,
        11703
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5887": {
      "op": "POP"
    },
    "5888": {
      "op": "POP"
    },
    "5889": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11720,
        11724
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 91,
      "value": "0x3"
    },
    "5891": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11720,
        11737
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5892": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11713,
        11836
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1718"
    },
    "5895": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11713,
        11836
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5902": {
      "op": "SHL"
    },
    "5903": {
      "op": "SUB"
    },
    "5904": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11720,
        11737
      ],
      "op": "AND",
      "path": "3"
    },
    "5905": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11769,
        11779
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5906": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11801,
        11805
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5907": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11820,
        11826
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5908": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11713,
        11755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E08"
    },
    "5911": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11713,
        11836
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5912": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11713,
        11836
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5913": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11851,
        11881
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 92,
      "value": "0x34D657CD4DEC79D6716CE5AC15B81DE5751705030CBEF01B43B15EAE44CBC112"
    },
    "5946": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11862,
        11872
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5947": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11874,
        11880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5948": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11851,
        11881
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5950": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11851,
        11881
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5951": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11851,
        11881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x799"
    },
    "5954": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11851,
        11881
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5955": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11851,
        11881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5956": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11851,
        11881
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5957": {
      "fn": "BankOld.vaultRepay",
      "offset": [
        11851,
        11881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A81"
    },
    "5960": {
      "fn": "BankOld.vaultRepay",
      "jump": "i",
      "offset": [
        11851,
        11881
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5961": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6374,
        6811
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5962": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6447,
        6481
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 93,
      "value": "0x1761"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5967": {
      "op": "DUP1"
    },
    "5968": {
      "op": "MLOAD"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5971": {
      "op": "PUSH2",
      "value": "0x2BAA"
    },
    "5974": {
      "op": "DUP4"
    },
    "5975": {
      "op": "CODECOPY"
    },
    "5976": {
      "op": "DUP2"
    },
    "5977": {
      "op": "MLOAD"
    },
    "5978": {
      "op": "SWAP2"
    },
    "5979": {
      "op": "MSTORE"
    },
    "5980": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6470,
        6480
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5981": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6447,
        6454
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1848"
    },
    "5984": {
      "fn": "BankOld.updateCollateralPrice",
      "jump": "i",
      "offset": [
        6447,
        6481
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5985": {
      "branch": 166,
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6447,
        6481
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5986": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6447,
        6540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5987": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6447,
        6540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1772"
    },
    "5990": {
      "branch": 166,
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6447,
        6540
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5991": {
      "op": "POP"
    },
    "5992": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6501,
        6540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1772"
    },
    "5995": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5997": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6529,
        6539
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5998": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6501,
        6508
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1848"
    },
    "6001": {
      "fn": "BankOld.updateCollateralPrice",
      "jump": "i",
      "offset": [
        6501,
        6540
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6002": {
      "branch": 167,
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6501,
        6540
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6003": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17BE"
    },
    "6006": {
      "branch": 167,
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6007": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6009": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6016": {
      "op": "SHL"
    },
    "6017": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6018": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6021": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6023": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6024": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "ADD",
      "path": "3"
    },
    "6025": {
      "op": "MSTORE"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6030": {
      "op": "DUP3"
    },
    "6031": {
      "op": "ADD"
    },
    "6032": {
      "op": "MSTORE"
    },
    "6033": {
      "op": "PUSH32",
      "value": "0x6E6F742070726963652075706461746572206F722061646D696E000000000000"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6068": {
      "op": "DUP3"
    },
    "6069": {
      "op": "ADD"
    },
    "6070": {
      "op": "MSTORE"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6073": {
      "op": "ADD"
    },
    "6074": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "6077": {
      "op": "JUMP"
    },
    "6078": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6426,
        6592
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6079": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6680,
        6706
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 94,
      "value": "0xC"
    },
    "6081": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6680,
        6706
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6082": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6651,
        6716
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17CA"
    },
    "6085": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6651,
        6716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6086": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6651,
        6666
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCBC"
    },
    "6089": {
      "fn": "BankOld.updateCollateralPrice",
      "jump": "i",
      "offset": [
        6651,
        6716
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6090": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6651,
        6716
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6091": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6623,
        6647
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "6093": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6602,
        6716
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6094": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6605,
        6621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "6096": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6602,
        6716
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6097": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6602,
        6716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6098": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6602,
        6716
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6099": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6605,
        6615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "6101": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6762,
        6785
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 95
    },
    "6102": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6750,
        6804
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6104": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6750,
        6804
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6105": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6750,
        6804
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C"
    },
    "6138": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6750,
        6804
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6750,
        6804
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1094"
    },
    "6143": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6750,
        6804
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6150": {
      "op": "SHL"
    },
    "6151": {
      "op": "SUB"
    },
    "6152": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6762,
        6785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6153": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6762,
        6785
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6154": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6762,
        6785
      ],
      "op": "AND",
      "path": "3"
    },
    "6155": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6762,
        6785
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6156": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6602,
        6716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6157": {
      "fn": "BankOld.updateCollateralPrice",
      "offset": [
        6750,
        6804
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A81"
    },
    "6160": {
      "fn": "BankOld.updateCollateralPrice",
      "jump": "i",
      "offset": [
        6750,
        6804
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6161": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14743,
        14850
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6162": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14806,
        14843
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 96,
      "value": "0xEBE"
    },
    "6165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6167": {
      "op": "DUP1"
    },
    "6168": {
      "op": "MLOAD"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6171": {
      "op": "PUSH2",
      "value": "0x2BAA"
    },
    "6174": {
      "op": "DUP4"
    },
    "6175": {
      "op": "CODECOPY"
    },
    "6176": {
      "op": "DUP2"
    },
    "6177": {
      "op": "MLOAD"
    },
    "6178": {
      "op": "SWAP2"
    },
    "6179": {
      "op": "MSTORE"
    },
    "6180": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14832,
        14842
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6181": {
      "fn": "BankOld.revokeReporter",
      "offset": [
        14806,
        14816
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19C9"
    },
    "6184": {
      "fn": "BankOld.revokeReporter",
      "jump": "i",
      "offset": [
        14806,
        14843
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6185": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6186": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1503,
        1510
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6188": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 97
    },
    "6189": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6190": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6191": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1541
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x19"
    },
    "6193": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6195": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6196": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6198": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6199": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6200": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1557
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1841"
    },
    "6203": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6204": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1551,
        1556
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6205": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F78"
    },
    "6208": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "i",
      "offset": [
        1529,
        1557
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6209": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1557
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6210": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1522,
        1557
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6211": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6212": {
      "op": "POP"
    },
    "6213": {
      "op": "POP"
    },
    "6214": {
      "op": "POP"
    },
    "6215": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "o",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6216": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6217": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2984,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6219": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 98
    },
    "6220": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6221": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6222": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "6224": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6226": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6227": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6228": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6229": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6231": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6232": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6233": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6240": {
      "op": "SHL"
    },
    "6241": {
      "op": "SUB"
    },
    "6242": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6243": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6244": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6245": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "AND",
      "path": "0"
    },
    "6246": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6247": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6248": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6249": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6250": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6251": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6252": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6253": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6254": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6256": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "AND",
      "path": "0"
    },
    "6257": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6258": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6259": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6260": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5479,
        5489
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 99
    },
    "6261": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5431,
        5448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6263": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6264": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6265": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6266": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5478
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "6268": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6270": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6271": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6273": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6274": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6275": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "6277": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "ADD",
      "path": "4"
    },
    "6278": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6279": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5547,
        5561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x16"
    },
    "6281": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5547,
        5561
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6282": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6283": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6284": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5431,
        5448
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6285": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x189A"
    },
    "6288": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6289": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5544
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1E13380"
    },
    "6294": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A48"
    },
    "6297": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5536,
        5561
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6298": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6299": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5677,
        5691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x16"
    },
    "6301": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5677,
        5691
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6302": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5653,
        5663
      ],
      "op": "CALLER",
      "path": "4"
    },
    "6303": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5571,
        5593
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6305": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6306": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6307": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6308": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5652
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "6310": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6312": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6313": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6314": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6315": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6317": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6318": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6319": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5674
      ],
      "op": "ADD",
      "path": "4"
    },
    "6320": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5674
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6321": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5511,
        5561
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6322": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5511,
        5561
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "6323": {
      "op": "POP"
    },
    "6324": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5571,
        5593
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6325": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18BE"
    },
    "6328": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5691
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6329": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5677,
        5691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6330": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A48"
    },
    "6333": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5646,
        5691
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6334": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6335": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5615,
        5629
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x16"
    },
    "6337": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5615,
        5629
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6338": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5629
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18CB"
    },
    "6341": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5629
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6342": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5612
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "6343": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5629
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A48"
    },
    "6346": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5597,
        5629
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6347": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5629
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6348": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18D5"
    },
    "6351": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6352": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6353": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A6A"
    },
    "6356": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5596,
        5692
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6357": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6358": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5571,
        5692
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6359": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5571,
        5692
      ],
      "op": "POP",
      "path": "4"
    },
    "6360": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5803,
        5817
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 100
    },
    "6361": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5773,
        5787
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6362": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5765,
        5770
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2710"
    },
    "6365": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5741,
        5748
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF"
    },
    "6367": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5741,
        5761
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "6369": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5741,
        5761
      ],
      "op": "ADD",
      "path": "4"
    },
    "6370": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5741,
        5761
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6371": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5738
      ],
      "op": "DUP7",
      "path": "4"
    },
    "6372": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18ED"
    },
    "6375": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6376": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6377": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A29"
    },
    "6380": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5729,
        5761
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6381": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6382": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18F7"
    },
    "6385": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6386": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6387": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A48"
    },
    "6390": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5728,
        5770
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6391": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6392": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1901"
    },
    "6395": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6396": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6397": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A48"
    },
    "6400": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5728,
        5787
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6401": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6402": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x190B"
    },
    "6405": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6406": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6407": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A29"
    },
    "6410": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5727,
        5817
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6411": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6412": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1915"
    },
    "6415": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6416": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6417": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29D6"
    },
    "6420": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5702,
        5817
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6421": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6422": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6423": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "POP",
      "path": "4"
    },
    "6424": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5450,
        5824
      ],
      "op": "POP",
      "path": "4"
    },
    "6425": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5450,
        5824
      ],
      "op": "POP",
      "path": "4"
    },
    "6426": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6427": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "o",
      "offset": [
        5379,
        5824
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6428": {
      "fn": "BankOld.setDebt",
      "offset": [
        3528,
        4053
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6429": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6431": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1927"
    },
    "6434": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6435": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "6438": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6439": {
      "fn": "BankOld.setDebt",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6440": {
      "fn": "BankOld.setDebt",
      "offset": [
        3762,
        3766
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 101,
      "value": "0x3"
    },
    "6442": {
      "fn": "BankOld.setDebt",
      "offset": [
        3762,
        3779
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6449": {
      "op": "SHL"
    },
    "6450": {
      "op": "SUB"
    },
    "6451": {
      "fn": "BankOld.setDebt",
      "offset": [
        3762,
        3779
      ],
      "op": "AND",
      "path": "3"
    },
    "6452": {
      "branch": 168,
      "fn": "BankOld.setDebt",
      "offset": [
        3762,
        3793
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6453": {
      "fn": "BankOld.setDebt",
      "offset": [
        3762,
        3820
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6454": {
      "fn": "BankOld.setDebt",
      "offset": [
        3762,
        3820
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6455": {
      "fn": "BankOld.setDebt",
      "offset": [
        3762,
        3820
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1948"
    },
    "6458": {
      "branch": 168,
      "fn": "BankOld.setDebt",
      "offset": [
        3762,
        3820
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6459": {
      "op": "POP"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6466": {
      "op": "SHL"
    },
    "6467": {
      "op": "SUB"
    },
    "6468": {
      "fn": "BankOld.setDebt",
      "offset": [
        3797,
        3820
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6469": {
      "fn": "BankOld.setDebt",
      "offset": [
        3797,
        3820
      ],
      "op": "AND",
      "path": "3"
    },
    "6470": {
      "fn": "BankOld.setDebt",
      "offset": [
        3797,
        3820
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6471": {
      "branch": 169,
      "fn": "BankOld.setDebt",
      "offset": [
        3797,
        3820
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6472": {
      "fn": "BankOld.setDebt",
      "offset": [
        3762,
        3820
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6473": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x197F"
    },
    "6476": {
      "branch": 169,
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6477": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6479": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6486": {
      "op": "SHL"
    },
    "6487": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6488": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6491": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6493": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6494": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "ADD",
      "path": "3"
    },
    "6495": {
      "op": "MSTORE"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6500": {
      "op": "DUP3"
    },
    "6501": {
      "op": "ADD"
    },
    "6502": {
      "op": "MSTORE"
    },
    "6503": {
      "op": "PUSH8",
      "value": "0x2173657461626C65"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6514": {
      "op": "SHL"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6517": {
      "op": "DUP3"
    },
    "6518": {
      "op": "ADD"
    },
    "6519": {
      "op": "MSTORE"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6522": {
      "op": "ADD"
    },
    "6523": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "6526": {
      "op": "JUMP"
    },
    "6527": {
      "fn": "BankOld.setDebt",
      "offset": [
        3741,
        3854
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6528": {
      "op": "POP"
    },
    "6529": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3868
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 102,
      "value": "0x3"
    },
    "6531": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6532": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6539": {
      "op": "SHL"
    },
    "6540": {
      "op": "SUB"
    },
    "6541": {
      "op": "NOT"
    },
    "6542": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "AND",
      "path": "3"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6549": {
      "op": "SHL"
    },
    "6550": {
      "op": "SUB"
    },
    "6551": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "6552": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6553": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "6554": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "AND",
      "path": "3"
    },
    "6555": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6556": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6557": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6558": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "OR",
      "path": "3"
    },
    "6559": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6560": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6561": {
      "fn": "BankOld.setDebt",
      "offset": [
        3864,
        3893
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6562": {
      "fn": "BankOld.setDebt",
      "offset": [
        3903,
        3913
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 103,
      "value": "0x4"
    },
    "6564": {
      "fn": "BankOld.setDebt",
      "offset": [
        3903,
        3930
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6565": {
      "fn": "BankOld.setDebt",
      "offset": [
        3903,
        3930
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6566": {
      "fn": "BankOld.setDebt",
      "offset": [
        3903,
        3930
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6567": {
      "fn": "BankOld.setDebt",
      "offset": [
        3903,
        3930
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6568": {
      "fn": "BankOld.setDebt",
      "offset": [
        3940,
        3961
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 104,
      "value": "0x5"
    },
    "6570": {
      "fn": "BankOld.setDebt",
      "offset": [
        3940,
        3989
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6571": {
      "fn": "BankOld.setDebt",
      "offset": [
        3940,
        3989
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6572": {
      "fn": "BankOld.setDebt",
      "offset": [
        3940,
        3989
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6573": {
      "fn": "BankOld.setDebt",
      "offset": [
        3940,
        3989
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6574": {
      "fn": "BankOld.setDebt",
      "offset": [
        3999,
        4019
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 105,
      "value": "0x6"
    },
    "6576": {
      "fn": "BankOld.setDebt",
      "offset": [
        3999,
        4046
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6577": {
      "fn": "BankOld.setDebt",
      "jump": "o",
      "offset": [
        3528,
        4053
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6578": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6579": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1812,
        1819
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6581": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 106
    },
    "6582": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6583": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6584": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1850
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x19"
    },
    "6586": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6588": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6589": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6591": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6592": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6593": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7CA"
    },
    "6596": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6597": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F84"
    },
    "6600": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1838,
        1865
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6601": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6602": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4468,
        4475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6604": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6605": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6606": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6607": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "6609": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6611": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6612": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6614": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6615": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6616": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6618": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "ADD",
      "path": "0"
    },
    "6619": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6620": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E4"
    },
    "6623": {
      "offset": [
        2509,
        2513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6624": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "6627": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6628": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6629": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5266,
        5292
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 107,
      "value": "0x933"
    },
    "6632": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5278,
        5282
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6633": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5284,
        5291
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6634": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5266,
        5277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F4C"
    },
    "6637": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5266,
        5292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6638": {
      "fn": "BankOld.addReporter",
      "offset": [
        14438,
        14600
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6645": {
      "op": "SHL"
    },
    "6646": {
      "op": "SUB"
    },
    "6647": {
      "fn": "BankOld.addReporter",
      "offset": [
        14503,
        14524
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 108
    },
    "6648": {
      "branch": 170,
      "fn": "BankOld.addReporter",
      "offset": [
        14503,
        14524
      ],
      "op": "AND",
      "path": "3"
    },
    "6649": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A3C"
    },
    "6652": {
      "branch": 170,
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6653": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6655": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6662": {
      "op": "SHL"
    },
    "6663": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6664": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6667": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6669": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6670": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "ADD",
      "path": "3"
    },
    "6671": {
      "op": "MSTORE"
    },
    "6672": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6676": {
      "op": "DUP3"
    },
    "6677": {
      "op": "ADD"
    },
    "6678": {
      "op": "MSTORE"
    },
    "6679": {
      "op": "PUSH21",
      "value": "0x1BDC195C985D1A5BDB881B9BDD08185B1B1BDDD959"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "6703": {
      "op": "SHL"
    },
    "6704": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6706": {
      "op": "DUP3"
    },
    "6707": {
      "op": "ADD"
    },
    "6708": {
      "op": "MSTORE"
    },
    "6709": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6711": {
      "op": "ADD"
    },
    "6712": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "6715": {
      "op": "JUMP"
    },
    "6716": {
      "fn": "BankOld.addReporter",
      "offset": [
        14495,
        14550
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6717": {
      "fn": "BankOld.addReporter",
      "offset": [
        14560,
        14593
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 109,
      "value": "0xEBE"
    },
    "6720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6722": {
      "op": "DUP1"
    },
    "6723": {
      "op": "MLOAD"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6726": {
      "op": "PUSH2",
      "value": "0x2BAA"
    },
    "6729": {
      "op": "DUP4"
    },
    "6730": {
      "op": "CODECOPY"
    },
    "6731": {
      "op": "DUP2"
    },
    "6732": {
      "op": "MLOAD"
    },
    "6733": {
      "op": "SWAP2"
    },
    "6734": {
      "op": "MSTORE"
    },
    "6735": {
      "fn": "BankOld.addReporter",
      "offset": [
        14585,
        14592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6736": {
      "fn": "BankOld.addReporter",
      "offset": [
        14560,
        14569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x90E"
    },
    "6739": {
      "fn": "BankOld.addReporter",
      "jump": "i",
      "offset": [
        14560,
        14593
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6740": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6741": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6743": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A5F"
    },
    "6746": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6747": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "6750": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6751": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6752": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4930,
        4934
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 110,
      "value": "0x3"
    },
    "6754": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4930,
        4947
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6755": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6757": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6758": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6765": {
      "op": "SHL"
    },
    "6766": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6767": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6768": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4967,
        4971
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "6769": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6771": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6772": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "ADD",
      "path": "3"
    },
    "6773": {
      "op": "MSTORE"
    },
    "6774": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4977,
        4983
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6775": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4977,
        4983
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6782": {
      "op": "SHL"
    },
    "6783": {
      "op": "SUB"
    },
    "6784": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4930,
        4947
      ],
      "op": "AND",
      "path": "3"
    },
    "6785": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4930,
        4947
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6786": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4958
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "6791": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6794": {
      "op": "ADD"
    },
    "6795": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6797": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6799": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6800": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6801": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6802": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "SUB",
      "path": "3"
    },
    "6803": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6804": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6805": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "GAS",
      "path": "3"
    },
    "6806": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "6807": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6808": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6809": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6810": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA7"
    },
    "6813": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6814": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6815": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6817": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6818": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6819": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6820": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6822": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6823": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6824": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "POP",
      "path": "3"
    },
    "6825": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "POP",
      "path": "3"
    },
    "6826": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "POP",
      "path": "3"
    },
    "6827": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "POP",
      "path": "3"
    },
    "6828": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6830": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6831": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6832": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6834": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "NOT",
      "path": "3"
    },
    "6835": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6837": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6838": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "ADD",
      "path": "3"
    },
    "6839": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "AND",
      "path": "3"
    },
    "6840": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6841": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "ADD",
      "path": "3"
    },
    "6842": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6843": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6845": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6846": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "POP",
      "path": "3"
    },
    "6847": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6848": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "ADD",
      "path": "3"
    },
    "6849": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6850": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ACB"
    },
    "6853": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6854": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6855": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A9A"
    },
    "6858": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "i",
      "offset": [
        4923,
        4973
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6859": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4973
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6860": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4983
      ],
      "op": "LT",
      "path": "3"
    },
    "6861": {
      "branch": 171,
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4923,
        4983
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6862": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B23"
    },
    "6865": {
      "branch": 171,
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6866": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6868": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6875": {
      "op": "SHL"
    },
    "6876": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6877": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6880": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6882": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6883": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "ADD",
      "path": "3"
    },
    "6884": {
      "op": "MSTORE"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6889": {
      "op": "DUP3"
    },
    "6890": {
      "op": "ADD"
    },
    "6891": {
      "op": "MSTORE"
    },
    "6892": {
      "op": "PUSH32",
      "value": "0x4E4F5420454E4F554748204445425420544F4B454E5320494E20524553455256"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6927": {
      "op": "DUP3"
    },
    "6928": {
      "op": "ADD"
    },
    "6929": {
      "op": "MSTORE"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6934": {
      "op": "SHL"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6937": {
      "op": "DUP3"
    },
    "6938": {
      "op": "ADD"
    },
    "6939": {
      "op": "MSTORE"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6942": {
      "op": "ADD"
    },
    "6943": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "6946": {
      "op": "JUMP"
    },
    "6947": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4902,
        5042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6948": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5052,
        5069
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6950": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5072,
        5084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B30"
    },
    "6953": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5081,
        5084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC8"
    },
    "6955": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5072,
        5078
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6956": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5072,
        5084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "6959": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "i",
      "offset": [
        5072,
        5084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6960": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5072,
        5084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6961": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5052,
        5084
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6962": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5052,
        5084
      ],
      "op": "POP",
      "path": "3"
    },
    "6963": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5151,
        5157
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 111
    },
    "6964": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5135
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "6966": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5147
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6968": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5147
      ],
      "op": "ADD",
      "path": "3"
    },
    "6969": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5147
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6971": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6972": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6973": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6974": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B47"
    },
    "6977": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6978": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6979": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "6982": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "i",
      "offset": [
        5128,
        5157
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6983": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6984": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6985": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6986": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5128,
        5157
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6987": {
      "op": "POP"
    },
    "6988": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5167,
        5237
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 112,
      "value": "0x1B6E"
    },
    "6991": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5167,
        5237
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6992": {
      "op": "POP"
    },
    "6993": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5206,
        5216
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6994": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5218,
        5236
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B5B"
    },
    "6997": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5227,
        5236
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6998": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5218,
        5224
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6999": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5218,
        5236
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "7002": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "i",
      "offset": [
        5218,
        5236
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7003": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5218,
        5236
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7004": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5174,
        5178
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7006": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5174,
        5191
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7013": {
      "op": "SHL"
    },
    "7014": {
      "op": "SUB"
    },
    "7015": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5174,
        5191
      ],
      "op": "AND",
      "path": "3"
    },
    "7016": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5174,
        5191
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7017": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5167,
        5237
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7018": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5167,
        5205
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "7021": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "i",
      "offset": [
        5167,
        5237
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7022": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5167,
        5237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7023": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5286,
        5303
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 113,
      "value": "0x4D"
    },
    "7025": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5286,
        5303
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7026": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5254,
        5258
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7028": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5254,
        5271
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7029": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5247,
        5315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8B"
    },
    "7032": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5247,
        5315
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7039": {
      "op": "SHL"
    },
    "7040": {
      "op": "SUB"
    },
    "7041": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5254,
        5271
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7042": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5254,
        5271
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7043": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5254,
        5271
      ],
      "op": "AND",
      "path": "3"
    },
    "7044": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5254,
        5271
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7045": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5286,
        5303
      ],
      "op": "AND",
      "path": "3"
    },
    "7046": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5305,
        5314
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7047": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5247,
        5285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "7050": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "i",
      "offset": [
        5247,
        5315
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7051": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5247,
        5315
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7052": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5346,
        5350
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 114,
      "value": "0x3"
    },
    "7054": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5346,
        5363
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7055": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7057": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7058": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x529AFC4538720FE0B3EADC40486369AB962002D72FEAD1387B300C66073E7BF"
    },
    "7091": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7092": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BCA"
    },
    "7095": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7102": {
      "op": "SHL"
    },
    "7103": {
      "op": "SUB"
    },
    "7104": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5346,
        5363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7105": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5346,
        5363
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7106": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5346,
        5363
      ],
      "op": "AND",
      "path": "3"
    },
    "7107": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5346,
        5363
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7108": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5365,
        5371
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7109": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5365,
        5371
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7110": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A81"
    },
    "7113": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "i",
      "offset": [
        5330,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7114": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7115": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7117": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7118": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7119": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7120": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "7121": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7122": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        5330,
        5372
      ],
      "op": "LOG1",
      "path": "3"
    },
    "7123": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4892,
        5379
      ],
      "op": "POP",
      "path": "3"
    },
    "7124": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "POP",
      "path": "3"
    },
    "7125": {
      "fn": "BankOld.reserveWithdraw",
      "offset": [
        4793,
        5379
      ],
      "op": "POP",
      "path": "3"
    },
    "7126": {
      "fn": "BankOld.reserveWithdraw",
      "jump": "o",
      "offset": [
        4793,
        5379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7127": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1665,
        1761
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7128": {
      "offset": [
        1255,
        1261
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7130": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1255,
        1261
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7137": {
      "op": "SHL"
    },
    "7138": {
      "op": "SUB"
    },
    "7139": {
      "offset": [
        1255,
        1261
      ],
      "op": "AND",
      "path": "3"
    },
    "7140": {
      "offset": [
        1265,
        1275
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7141": {
      "offset": [
        1255,
        1275
      ],
      "op": "EQ",
      "path": "3"
    },
    "7142": {
      "offset": [
        1247,
        1292
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C20"
    },
    "7145": {
      "offset": [
        1247,
        1292
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7146": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1247,
        1292
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7148": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1247,
        1292
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7149": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7155": {
      "op": "SHL"
    },
    "7156": {
      "offset": [
        1247,
        1292
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7157": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1247,
        1292
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7160": {
      "offset": [
        1247,
        1292
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7162": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1247,
        1292
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7163": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1247,
        1292
      ],
      "op": "ADD",
      "path": "3"
    },
    "7164": {
      "op": "MSTORE"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7169": {
      "op": "DUP3"
    },
    "7170": {
      "op": "ADD"
    },
    "7171": {
      "op": "MSTORE"
    },
    "7172": {
      "op": "PUSH12",
      "value": "0x24A9902727AA1027ABA722A9"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "7187": {
      "op": "SHL"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7190": {
      "op": "DUP3"
    },
    "7191": {
      "op": "ADD"
    },
    "7192": {
      "op": "MSTORE"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7195": {
      "op": "ADD"
    },
    "7196": {
      "offset": [
        1247,
        1292
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "7199": {
      "op": "JUMP"
    },
    "7200": {
      "offset": [
        1247,
        1292
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7201": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1743
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 115,
      "value": "0x0"
    },
    "7203": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7204": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7211": {
      "op": "SHL"
    },
    "7212": {
      "op": "SUB"
    },
    "7213": {
      "op": "NOT"
    },
    "7214": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "AND",
      "path": "3"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7221": {
      "op": "SHL"
    },
    "7222": {
      "op": "SUB"
    },
    "7223": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7224": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7225": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7226": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "AND",
      "path": "3"
    },
    "7227": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7228": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7229": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7230": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "OR",
      "path": "3"
    },
    "7231": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7232": {
      "fn": "BankOld.transferOwnership",
      "offset": [
        1737,
        1754
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7233": {
      "fn": "BankOld.transferOwnership",
      "jump": "o",
      "offset": [
        1665,
        1761
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7234": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12010,
        12885
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7235": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12106,
        12116
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 116
    },
    "7236": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7238": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12117
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7239": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12117
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7240": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12117
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7241": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7243": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7245": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12117
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7246": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7248": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12117
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7249": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12117
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7250": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12099,
        12134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7251": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12089,
        12134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7252": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12089,
        12134
      ],
      "op": "GT",
      "path": "3"
    },
    "7253": {
      "branch": 172,
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12089,
        12134
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7254": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA1"
    },
    "7257": {
      "branch": 172,
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7258": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7260": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7261": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7267": {
      "op": "SHL"
    },
    "7268": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7269": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7272": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7274": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7275": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "ADD",
      "path": "3"
    },
    "7276": {
      "op": "MSTORE"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7281": {
      "op": "DUP3"
    },
    "7282": {
      "op": "ADD"
    },
    "7283": {
      "op": "MSTORE"
    },
    "7284": {
      "op": "PUSH32",
      "value": "0x43414E4E4F54205749544844524157204D4F524520434F4C4C41544552414C00"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7319": {
      "op": "DUP3"
    },
    "7320": {
      "op": "ADD"
    },
    "7321": {
      "op": "MSTORE"
    },
    "7322": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7324": {
      "op": "ADD"
    },
    "7325": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "7328": {
      "op": "JUMP"
    },
    "7329": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12068,
        12191
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7330": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12356,
        12386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x13"
    },
    "7332": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12356,
        12386
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7333": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12356,
        12386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7335": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12331,
        12341
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7336": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12299,
        12315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "7338": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12299,
        12315
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7339": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12245,
        12255
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7340": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12202,
        12232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7342": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12256
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7343": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12256
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7344": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12256
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7345": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7347": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12256
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7349": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12256
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7350": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12256
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7352": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12256
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7353": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12256
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7354": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12286
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7355": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12202,
        12232
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7356": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12202,
        12232
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7357": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12356,
        12386
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7358": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12331,
        12341
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7359": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12299,
        12315
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7360": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CCA"
    },
    "7363": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7364": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12289,
        12295
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7365": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12289,
        12295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7366": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "7369": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12238,
        12295
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7370": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12238,
        12295
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7371": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12237,
        12315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CD4"
    },
    "7374": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12237,
        12315
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7375": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12237,
        12315
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7376": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12237,
        12315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "7379": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12237,
        12315
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7380": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12237,
        12315
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7381": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12341
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CDE"
    },
    "7384": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12341
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7385": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12341
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7386": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12341
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "7389": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12236,
        12341
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7390": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12341
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7391": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12386
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CE8"
    },
    "7394": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12386
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7395": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12386
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7396": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12386
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "7399": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12236,
        12386
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7400": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12236,
        12386
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7401": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12235,
        12393
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF3"
    },
    "7404": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12235,
        12393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7405": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12390,
        12393
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "7407": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12235,
        12393
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "7410": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12235,
        12393
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7411": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12235,
        12393
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7412": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12429,
        12450
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 117,
      "value": "0x5"
    },
    "7414": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12429,
        12450
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7415": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12202,
        12393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7416": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12202,
        12393
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7417": {
      "op": "POP"
    },
    "7418": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12403,
        12450
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D03"
    },
    "7421": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12403,
        12450
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7422": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12202,
        12393
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7423": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12403,
        12450
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A29"
    },
    "7426": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12403,
        12450
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7427": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12403,
        12450
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7428": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12486,
        12513
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 118,
      "value": "0xB"
    },
    "7430": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12486,
        12513
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7431": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12403,
        12450
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7432": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12403,
        12450
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7433": {
      "op": "POP"
    },
    "7434": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12460,
        12513
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D13"
    },
    "7437": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12460,
        12513
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7438": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12403,
        12450
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7439": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12460,
        12513
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A48"
    },
    "7442": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12460,
        12513
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7443": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12460,
        12513
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7444": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12551,
        12561
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 119
    },
    "7445": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7447": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7448": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7449": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12562
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7450": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12550
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7452": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7454": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12562
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7455": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7457": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7458": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12562
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7459": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7461": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12573
      ],
      "op": "ADD",
      "path": "3"
    },
    "7462": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12573
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7463": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12460,
        12513
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7464": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12460,
        12513
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7465": {
      "op": "POP"
    },
    "7466": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12599
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7467": {
      "op": "LT"
    },
    "7468": {
      "branch": 173,
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12544,
        12599
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7469": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D78"
    },
    "7472": {
      "branch": 173,
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7473": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7475": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7476": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7482": {
      "op": "SHL"
    },
    "7483": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7484": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7487": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7489": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7490": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "ADD",
      "path": "3"
    },
    "7491": {
      "op": "MSTORE"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7496": {
      "op": "DUP3"
    },
    "7497": {
      "op": "ADD"
    },
    "7498": {
      "op": "MSTORE"
    },
    "7499": {
      "op": "PUSH32",
      "value": "0x43414E4E4F5420554E444552434F4C4C41544552414C495A45205641554C5400"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7534": {
      "op": "DUP3"
    },
    "7535": {
      "op": "ADD"
    },
    "7536": {
      "op": "MSTORE"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7539": {
      "op": "ADD"
    },
    "7540": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "7543": {
      "op": "JUMP"
    },
    "7544": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12523,
        12656
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7545": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12673,
        12683
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 120
    },
    "7546": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7548": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7549": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7550": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7551": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12672
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7553": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7555": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7556": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7558": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7559": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7560": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12711
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7561": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12711
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7562": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12705,
        12711
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7563": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12705,
        12711
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7564": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12684
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7565": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D97"
    },
    "7568": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7569": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12705,
        12711
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7570": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12705,
        12711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7571": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "7574": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12666,
        12711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7575": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7576": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7577": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12711
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7578": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12666,
        12711
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7579": {
      "op": "POP"
    },
    "7580": {
      "op": "POP"
    },
    "7581": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12728
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 121,
      "value": "0xF"
    },
    "7583": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12756
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7584": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12756
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7585": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12750,
        12756
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7586": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12750,
        12756
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7587": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7588": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7590": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12746
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7591": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12756
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB1"
    },
    "7594": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7595": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12750,
        12756
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7596": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12750,
        12756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7597": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12756
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6A"
    },
    "7600": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12721,
        12756
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7601": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7602": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7603": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12756
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7604": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12721,
        12756
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7605": {
      "op": "POP"
    },
    "7606": {
      "op": "POP"
    },
    "7607": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12773,
        12783
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 122,
      "value": "0x9"
    },
    "7609": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12773,
        12796
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7610": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12766,
        12830
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DCD"
    },
    "7613": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12766,
        12830
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7620": {
      "op": "SHL"
    },
    "7621": {
      "op": "SUB"
    },
    "7622": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12773,
        12796
      ],
      "op": "AND",
      "path": "3"
    },
    "7623": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12811,
        12821
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7624": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12823,
        12829
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7625": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12766,
        12810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "7628": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12766,
        12830
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7629": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12766,
        12830
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7630": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12845,
        12878
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 123,
      "value": "0xAC60FBF53B67F5A6A0C8031DD9D1610A06F01669B1A8B9AF98F3A6A477E8D7C"
    },
    "7663": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12859,
        12869
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7664": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12871,
        12877
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7665": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12845,
        12878
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7667": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12845,
        12878
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7668": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12845,
        12878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x799"
    },
    "7671": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12845,
        12878
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7672": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12845,
        12878
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7673": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12845,
        12878
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7674": {
      "fn": "BankOld.vaultWithdraw",
      "offset": [
        12845,
        12878
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A81"
    },
    "7677": {
      "fn": "BankOld.vaultWithdraw",
      "jump": "i",
      "offset": [
        12845,
        12878
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7678": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3337,
        3440
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7679": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3403,
        3433
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 124,
      "value": "0xEBE"
    },
    "7682": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3414,
        3418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7683": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7684": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3403,
        3413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8E"
    },
    "7687": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3403,
        3433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7688": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7689": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 125,
      "value": "0x40"
    },
    "7691": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7698": {
      "op": "SHL"
    },
    "7699": {
      "op": "SUB"
    },
    "7700": {
      "op": "DUP1"
    },
    "7701": {
      "op": "DUP6"
    },
    "7702": {
      "op": "AND"
    },
    "7703": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "7705": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7706": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "ADD",
      "path": "10"
    },
    "7707": {
      "op": "MSTORE"
    },
    "7708": {
      "op": "DUP4"
    },
    "7709": {
      "op": "AND"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7712": {
      "op": "DUP3"
    },
    "7713": {
      "op": "ADD"
    },
    "7714": {
      "op": "MSTORE"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7717": {
      "op": "DUP2"
    },
    "7718": {
      "op": "ADD"
    },
    "7719": {
      "op": "DUP3"
    },
    "7720": {
      "op": "SWAP1"
    },
    "7721": {
      "op": "MSTORE"
    },
    "7722": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1048,
        1144
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E73"
    },
    "7725": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1048,
        1144
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7726": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1068,
        1073
      ],
      "op": "DUP6",
      "path": "10"
    },
    "7727": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1068,
        1073
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7728": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7735": {
      "op": "SHL"
    },
    "7736": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1098,
        1125
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7739": {
      "op": "ADD"
    },
    "7740": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7741": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7743": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7744": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7747": {
      "op": "NOT"
    },
    "7748": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7749": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7750": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SUB",
      "path": "10"
    },
    "7751": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "ADD",
      "path": "10"
    },
    "7752": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7753": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7754": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7755": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7756": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7757": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7759": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7760": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "ADD",
      "path": "10"
    },
    "7761": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7762": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7769": {
      "op": "SHL"
    },
    "7770": {
      "op": "SUB"
    },
    "7771": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "AND",
      "path": "10"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7778": {
      "op": "SHL"
    },
    "7779": {
      "op": "SUB"
    },
    "7780": {
      "op": "NOT"
    },
    "7781": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7782": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "7783": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "AND",
      "path": "10"
    },
    "7784": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7785": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7786": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7787": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "OR",
      "path": "10"
    },
    "7788": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7789": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7790": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7791": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1048,
        1067
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FF2"
    },
    "7794": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1048,
        1144
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7795": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1048,
        1144
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7796": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "POP",
      "path": "10"
    },
    "7797": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "POP",
      "path": "10"
    },
    "7798": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "POP",
      "path": "10"
    },
    "7799": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "POP",
      "path": "10"
    },
    "7800": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        910,
        1151
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7801": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2599,
        2811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7802": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2684,
        2688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7810": {
      "op": "SHL"
    },
    "7811": {
      "op": "SUB"
    },
    "7812": {
      "op": "NOT"
    },
    "7813": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2754
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 126
    },
    "7814": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2754
      ],
      "op": "AND",
      "path": "0"
    },
    "7815": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7822": {
      "op": "SHL"
    },
    "7823": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2754
      ],
      "op": "EQ",
      "path": "0"
    },
    "7824": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2754
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7825": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CA"
    },
    "7828": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2804
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7829": {
      "op": "POP"
    },
    "7830": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x17"
    },
    "7832": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7833": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7835": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7836": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7843": {
      "op": "SHL"
    },
    "7844": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7845": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7852": {
      "op": "SHL"
    },
    "7853": {
      "op": "SUB"
    },
    "7854": {
      "op": "NOT"
    },
    "7855": {
      "op": "DUP5"
    },
    "7856": {
      "op": "AND"
    },
    "7857": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7859": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7860": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ADD",
      "path": "0"
    },
    "7861": {
      "op": "MSTORE"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7868": {
      "op": "SHL"
    },
    "7869": {
      "op": "SUB"
    },
    "7870": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7871": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7872": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "AND",
      "path": "0"
    },
    "7873": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7874": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2791
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FFC9A7"
    },
    "7879": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7880": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7882": {
      "op": "ADD"
    },
    "7883": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7885": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7887": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7888": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7889": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7890": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "SUB",
      "path": "0"
    },
    "7891": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7892": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7893": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "GAS",
      "path": "0"
    },
    "7894": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7895": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7896": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7897": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7898": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE7"
    },
    "7901": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7902": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7903": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7905": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7906": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7907": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7908": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7910": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7911": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7912": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7913": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7914": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7915": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7916": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7918": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7919": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7920": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7922": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "NOT",
      "path": "0"
    },
    "7923": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7925": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7926": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ADD",
      "path": "0"
    },
    "7927": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "AND",
      "path": "0"
    },
    "7928": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7929": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ADD",
      "path": "0"
    },
    "7930": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7931": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7933": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7934": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7935": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7936": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ADD",
      "path": "0"
    },
    "7937": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7938": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CA"
    },
    "7941": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7942": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7943": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AB3"
    },
    "7946": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        2758,
        2804
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7947": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        1960,
        2126
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7948": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2047,
        2078
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 127,
      "value": "0x1F15"
    },
    "7951": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2064,
        2068
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7952": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2070,
        2077
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7953": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2047,
        2063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20C4"
    },
    "7956": {
      "fn": "AccessControlEnumerable._grantRole",
      "jump": "i",
      "offset": [
        2047,
        2078
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7957": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2047,
        2078
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7958": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 128,
      "value": "0x0"
    },
    "7960": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7961": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7962": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7963": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x19"
    },
    "7965": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7967": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7968": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7970": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7971": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7972": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x933"
    },
    "7975": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7976": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2111,
        2118
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7977": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x214A"
    },
    "7980": {
      "fn": "AccessControlEnumerable._grantRole",
      "jump": "i",
      "offset": [
        2088,
        2119
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7981": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        699,
        904
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7982": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        811,
        897
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 129,
      "value": "0x933"
    },
    "7985": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        831,
        836
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7986": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        861,
        884
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA9059CBB"
    },
    "7991": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        861,
        884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "7993": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        861,
        884
      ],
      "op": "SHL",
      "path": "10"
    },
    "7994": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        886,
        888
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7995": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        890,
        895
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7996": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7998": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7999": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "8001": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "ADD",
      "path": "10"
    },
    "8002": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E3C"
    },
    "8005": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8006": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8007": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8008": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A81"
    },
    "8011": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        838,
        896
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8012": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2215,
        2386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8013": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2303,
        2335
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 130,
      "value": "0x1F56"
    },
    "8016": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2321,
        2325
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8017": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2327,
        2334
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8018": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2303,
        2320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x215F"
    },
    "8021": {
      "fn": "AccessControlEnumerable._revokeRole",
      "jump": "i",
      "offset": [
        2303,
        2335
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8022": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2303,
        2335
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8023": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 131,
      "value": "0x0"
    },
    "8025": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8026": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8027": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8028": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x19"
    },
    "8030": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8032": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8033": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8035": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8036": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8037": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x933"
    },
    "8040": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8041": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2371,
        2378
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8042": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21C6"
    },
    "8045": {
      "fn": "AccessControlEnumerable._revokeRole",
      "jump": "i",
      "offset": [
        2345,
        2379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8046": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6643,
        6753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8047": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6721,
        6746
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 132,
      "value": "0xC22"
    },
    "8050": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6732,
        6736
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8051": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6738,
        6745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8052": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6721,
        6731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0B"
    },
    "8055": {
      "fn": "AccessControl._setupRole",
      "jump": "i",
      "offset": [
        6721,
        6746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8056": {
      "op": "JUMPDEST"
    },
    "8057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8059": {
      "op": "PUSH2",
      "value": "0x1841"
    },
    "8062": {
      "op": "DUP4"
    },
    "8063": {
      "op": "DUP4"
    },
    "8064": {
      "op": "PUSH2",
      "value": "0x21DB"
    },
    "8067": {
      "jump": "i",
      "op": "JUMP"
    },
    "8068": {
      "op": "JUMPDEST"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8071": {
      "op": "PUSH2",
      "value": "0x7CA"
    },
    "8074": {
      "op": "DUP3"
    },
    "8075": {
      "op": "SLOAD"
    },
    "8076": {
      "op": "SWAP1"
    },
    "8077": {
      "op": "JUMP"
    },
    "8078": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3721,
        4213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8079": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3809,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F98"
    },
    "8082": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3817,
        3821
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8083": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3823,
        3830
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8084": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3809,
        3816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1848"
    },
    "8087": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3809,
        3831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8088": {
      "branch": 175,
      "fn": "AccessControl._checkRole",
      "offset": [
        3809,
        3831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8089": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3804,
        4207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC22"
    },
    "8092": {
      "branch": 175,
      "fn": "AccessControl._checkRole",
      "offset": [
        3804,
        4207
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8093": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3992,
        4033
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 133,
      "value": "0x1FB0"
    },
    "8096": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4020,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8103": {
      "op": "SHL"
    },
    "8104": {
      "op": "SUB"
    },
    "8105": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3992,
        4033
      ],
      "op": "AND",
      "path": "0"
    },
    "8106": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4030,
        4032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "8108": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3992,
        4011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2205"
    },
    "8111": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3992,
        4033
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8112": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3992,
        4033
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8113": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4104,
        4142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FBB"
    },
    "8116": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4132,
        4136
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8117": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4139,
        4141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8119": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4104,
        4123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2205"
    },
    "8122": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        4104,
        4142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8123": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4104,
        4142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8124": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8126": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8127": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8129": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "ADD",
      "path": "0"
    },
    "8130": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "8133": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8134": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8135": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8136": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD5"
    },
    "8139": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3899,
        4164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8140": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8141": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8143": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8144": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8147": {
      "op": "NOT"
    },
    "8148": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8149": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8150": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SUB",
      "path": "0"
    },
    "8151": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "ADD",
      "path": "0"
    },
    "8152": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8153": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8154": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8155": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8156": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8157": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8158": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8162": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8164": {
      "op": "SHL"
    },
    "8165": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8166": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8167": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "8170": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8171": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8173": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "ADD",
      "path": "0"
    },
    "8174": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276C"
    },
    "8177": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3847,
        4196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8178": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3205,
        3911
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8179": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3647
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8181": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2047"
    },
    "8184": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3678,
        3682
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8185": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8187": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8188": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8189": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8191": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "ADD",
      "path": "10"
    },
    "8192": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8194": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8195": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8196": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8198": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8199": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8200": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8202": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "ADD",
      "path": "10"
    },
    "8203": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8236": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8237": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8238": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "POP",
      "path": "10"
    },
    "8239": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3658,
        3663
      ],
      "op": "DUP6",
      "path": "10"
    },
    "8240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8246": {
      "op": "SHL"
    },
    "8247": {
      "op": "SUB"
    },
    "8248": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3677
      ],
      "op": "AND",
      "path": "10"
    },
    "8249": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3677
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23A1"
    },
    "8252": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3677
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8253": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8255": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8256": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "8261": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "AND",
      "path": "10"
    },
    "8262": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3650,
        3719
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8263": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8264": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3733,
        3750
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8265": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3733,
        3750
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8266": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3719
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8267": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3719
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8268": {
      "op": "POP"
    },
    "8269": {
      "branch": 183,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3733,
        3754
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8270": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3729,
        3905
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x933"
    },
    "8273": {
      "branch": 183,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3729,
        3905
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8274": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3828,
        3838
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 134
    },
    "8275": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8276": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8278": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "ADD",
      "path": "10"
    },
    "8279": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8280": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8281": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8282": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "ADD",
      "path": "10"
    },
    "8283": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8284": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2065"
    },
    "8287": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8288": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8289": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AB3"
    },
    "8292": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3817,
        3847
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8293": {
      "branch": 184,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8294": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x933"
    },
    "8297": {
      "branch": 184,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8298": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8300": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8301": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8305": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8307": {
      "op": "SHL"
    },
    "8308": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8309": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8312": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8314": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8315": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "ADD",
      "path": "10"
    },
    "8316": {
      "op": "MSTORE"
    },
    "8317": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "8319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8321": {
      "op": "DUP3"
    },
    "8322": {
      "op": "ADD"
    },
    "8323": {
      "op": "MSTORE"
    },
    "8324": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "8357": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8359": {
      "op": "DUP3"
    },
    "8360": {
      "op": "ADD"
    },
    "8361": {
      "op": "MSTORE"
    },
    "8362": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "8375": {
      "op": "SHL"
    },
    "8376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8378": {
      "op": "DUP3"
    },
    "8379": {
      "op": "ADD"
    },
    "8380": {
      "op": "MSTORE"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8383": {
      "op": "ADD"
    },
    "8384": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x732"
    },
    "8387": {
      "op": "JUMP"
    },
    "8388": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7247,
        7480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8389": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7330,
        7352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20CE"
    },
    "8392": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7338,
        7342
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8393": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7344,
        7351
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8394": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7330,
        7337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1848"
    },
    "8397": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7330,
        7352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8398": {
      "branch": 176,
      "fn": "AccessControl._grantRole",
      "offset": [
        7330,
        7352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8399": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7325,
        7474
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC22"
    },
    "8402": {
      "branch": 176,
      "fn": "AccessControl._grantRole",
      "offset": [
        7325,
        7474
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8403": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 135,
      "value": "0x0"
    },
    "8405": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8406": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8407": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8408": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "8410": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8412": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8413": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8414": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8415": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8417": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8418": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8419": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8426": {
      "op": "SHL"
    },
    "8427": {
      "op": "SUB"
    },
    "8428": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8429": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "AND",
      "path": "0"
    },
    "8430": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8431": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8432": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8433": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8434": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8435": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8436": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8437": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8438": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8441": {
      "op": "NOT"
    },
    "8442": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "AND",
      "path": "0"
    },
    "8443": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7400,
        7404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8445": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "OR",
      "path": "0"
    },
    "8446": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8447": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8448": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7450,
        7462
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 136,
      "value": "0x2106"
    },
    "8451": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "8452": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8453": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8454": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7450,
        7462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8461": {
      "op": "SHL"
    },
    "8462": {
      "op": "SUB"
    },
    "8463": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "AND",
      "path": "0"
    },
    "8464": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7441,
        7448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8471": {
      "op": "SHL"
    },
    "8472": {
      "op": "SUB"
    },
    "8473": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "AND",
      "path": "0"
    },
    "8474": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7435,
        7439
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8475": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "8508": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8510": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8511": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8513": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8514": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8515": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8516": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "SUB",
      "path": "0"
    },
    "8517": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8518": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "LOG4",
      "path": "0"
    },
    "8519": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7247,
        7480
      ],
      "op": "POP",
      "path": "0"
    },
    "8520": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7247,
        7480
      ],
      "op": "POP",
      "path": "0"
    },
    "8521": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7247,
        7480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8522": {
      "op": "JUMPDEST"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8525": {
      "op": "PUSH2",
      "value": "0x1841"
    },
    "8528": {
      "op": "DUP4"
    },
    "8529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8535": {
      "op": "SHL"
    },
    "8536": {
      "op": "SUB"
    },
    "8537": {
      "op": "DUP5"
    },
    "8538": {
      "op": "AND"
    },
    "8539": {
      "op": "PUSH2",
      "value": "0x23B8"
    },
    "8542": {
      "jump": "i",
      "op": "JUMP"
    },
    "8543": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7605,
        7839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8544": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7688,
        7710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2169"
    },
    "8547": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7696,
        7700
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8548": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7702,
        7709
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8549": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7688,
        7695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1848"
    },
    "8552": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7688,
        7710
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8553": {
      "branch": 177,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7688,
        7710
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8554": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7684,
        7833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8555": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7684,
        7833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC22"
    },
    "8558": {
      "branch": 177,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7684,
        7833
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8559": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7758,
        7763
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 137,
      "value": "0x0"
    },
    "8561": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8562": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8563": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8564": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "8566": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8568": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8569": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8570": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8571": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8573": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8574": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8575": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8582": {
      "op": "SHL"
    },
    "8583": {
      "op": "SUB"
    },
    "8584": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8585": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "AND",
      "path": "0"
    },
    "8586": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8587": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8588": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8589": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8590": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8591": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8592": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8593": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8594": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8595": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8596": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8598": {
      "op": "NOT"
    },
    "8599": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "AND",
      "path": "0"
    },
    "8600": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8601": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8602": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7782,
        7822
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 138
    },
    "8603": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "8604": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8605": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8606": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8607": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7782,
        7822
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "8640": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7782,
        7822
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8641": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7758,
        7763
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8642": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7782,
        7822
      ],
      "op": "LOG4",
      "path": "0"
    },
    "8643": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7605,
        7839
      ],
      "op": "POP",
      "path": "0"
    },
    "8644": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7605,
        7839
      ],
      "op": "POP",
      "path": "0"
    },
    "8645": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7605,
        7839
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8646": {
      "op": "JUMPDEST"
    },
    "8647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8649": {
      "op": "PUSH2",
      "value": "0x1841"
    },
    "8652": {
      "op": "DUP4"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8659": {
      "op": "SHL"
    },
    "8660": {
      "op": "SUB"
    },
    "8661": {
      "op": "DUP5"
    },
    "8662": {
      "op": "AND"
    },
    "8663": {
      "op": "PUSH2",
      "value": "0x2407"
    },
    "8666": {
      "jump": "i",
      "op": "JUMP"
    },
    "8667": {
      "op": "JUMPDEST"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8670": {
      "op": "DUP3"
    },
    "8671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8673": {
      "op": "ADD"
    },
    "8674": {
      "op": "DUP3"
    },
    "8675": {
      "op": "DUP2"
    },
    "8676": {
      "op": "SLOAD"
    },
    "8677": {
      "op": "DUP2"
    },
    "8678": {
      "op": "LT"
    },
    "8679": {
      "op": "PUSH2",
      "value": "0x21F2"
    },
    "8682": {
      "op": "JUMPI"
    },
    "8683": {
      "op": "PUSH2",
      "value": "0x21F2"
    },
    "8686": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "8689": {
      "jump": "i",
      "op": "JUMP"
    },
    "8690": {
      "op": "JUMPDEST"
    },
    "8691": {
      "op": "SWAP1"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8694": {
      "op": "MSTORE"
    },
    "8695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8699": {
      "op": "KECCAK256"
    },
    "8700": {
      "op": "ADD"
    },
    "8701": {
      "op": "SLOAD"
    },
    "8702": {
      "op": "SWAP1"
    },
    "8703": {
      "op": "POP"
    },
    "8704": {
      "op": "SWAP3"
    },
    "8705": {
      "op": "SWAP2"
    },
    "8706": {
      "op": "POP"
    },
    "8707": {
      "op": "POP"
    },
    "8708": {
      "jump": "o",
      "op": "JUMP"
    },
    "8709": {
      "op": "JUMPDEST"
    },
    "8710": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8714": {
      "op": "PUSH2",
      "value": "0x2214"
    },
    "8717": {
      "op": "DUP4"
    },
    "8718": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8720": {
      "op": "PUSH2",
      "value": "0x2A29"
    },
    "8723": {
      "jump": "i",
      "op": "JUMP"
    },
    "8724": {
      "op": "JUMPDEST"
    },
    "8725": {
      "op": "PUSH2",
      "value": "0x221F"
    },
    "8728": {
      "op": "SWAP1"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8731": {
      "op": "PUSH2",
      "value": "0x29D6"
    },
    "8734": {
      "jump": "i",
      "op": "JUMP"
    },
    "8735": {
      "op": "JUMPDEST"
    },
    "8736": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8745": {
      "op": "DUP2"
    },
    "8746": {
      "op": "GT"
    },
    "8747": {
      "op": "ISZERO"
    },
    "8748": {
      "op": "PUSH2",
      "value": "0x2237"
    },
    "8751": {
      "op": "JUMPI"
    },
    "8752": {
      "op": "PUSH2",
      "value": "0x2237"
    },
    "8755": {
      "op": "PUSH2",
      "value": "0x2847"
    },
    "8758": {
      "jump": "i",
      "op": "JUMP"
    },
    "8759": {
      "op": "JUMPDEST"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8762": {
      "op": "MLOAD"
    },
    "8763": {
      "op": "SWAP1"
    },
    "8764": {
      "op": "DUP1"
    },
    "8765": {
      "op": "DUP3"
    },
    "8766": {
      "op": "MSTORE"
    },
    "8767": {
      "op": "DUP1"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8770": {
      "op": "ADD"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8773": {
      "op": "NOT"
    },
    "8774": {
      "op": "AND"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8777": {
      "op": "ADD"
    },
    "8778": {
      "op": "DUP3"
    },
    "8779": {
      "op": "ADD"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8782": {
      "op": "MSTORE"
    },
    "8783": {
      "op": "DUP1"
    },
    "8784": {
      "op": "ISZERO"
    },
    "8785": {
      "op": "PUSH2",
      "value": "0x2261"
    },
    "8788": {
      "op": "JUMPI"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8791": {
      "op": "DUP3"
    },
    "8792": {
      "op": "ADD"
    },
    "8793": {
      "op": "DUP2"
    },
    "8794": {
      "op": "DUP1"
    },
    "8795": {
      "op": "CALLDATASIZE"
    },
    "8796": {
      "op": "DUP4"
    },
    "8797": {
      "op": "CALLDATACOPY"
    },
    "8798": {
      "op": "ADD"
    },
    "8799": {
      "op": "SWAP1"
    },
    "8800": {
      "op": "POP"
    },
    "8801": {
      "op": "JUMPDEST"
    },
    "8802": {
      "op": "POP"
    },
    "8803": {
      "op": "SWAP1"
    },
    "8804": {
      "op": "POP"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8807": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "8809": {
      "op": "SHL"
    },
    "8810": {
      "op": "DUP2"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8813": {
      "op": "DUP2"
    },
    "8814": {
      "op": "MLOAD"
    },
    "8815": {
      "op": "DUP2"
    },
    "8816": {
      "op": "LT"
    },
    "8817": {
      "op": "PUSH2",
      "value": "0x227C"
    },
    "8820": {
      "op": "JUMPI"
    },
    "8821": {
      "op": "PUSH2",
      "value": "0x227C"
    },
    "8824": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "8827": {
      "jump": "i",
      "op": "JUMP"
    },
    "8828": {
      "op": "JUMPDEST"
    },
    "8829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8831": {
      "op": "ADD"
    },
    "8832": {
      "op": "ADD"
    },
    "8833": {
      "op": "SWAP1"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8838": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8840": {
      "op": "SHL"
    },
    "8841": {
      "op": "SUB"
    },
    "8842": {
      "op": "NOT"
    },
    "8843": {
      "op": "AND"
    },
    "8844": {
      "op": "SWAP1"
    },
    "8845": {
      "op": "DUP2"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8848": {
      "op": "BYTE"
    },
    "8849": {
      "op": "SWAP1"
    },
    "8850": {
      "op": "MSTORE8"
    },
    "8851": {
      "op": "POP"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "8856": {
      "op": "SHL"
    },
    "8857": {
      "op": "DUP2"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8860": {
      "op": "DUP2"
    },
    "8861": {
      "op": "MLOAD"
    },
    "8862": {
      "op": "DUP2"
    },
    "8863": {
      "op": "LT"
    },
    "8864": {
      "op": "PUSH2",
      "value": "0x22AB"
    },
    "8867": {
      "op": "JUMPI"
    },
    "8868": {
      "op": "PUSH2",
      "value": "0x22AB"
    },
    "8871": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "8874": {
      "jump": "i",
      "op": "JUMP"
    },
    "8875": {
      "op": "JUMPDEST"
    },
    "8876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8878": {
      "op": "ADD"
    },
    "8879": {
      "op": "ADD"
    },
    "8880": {
      "op": "SWAP1"
    },
    "8881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8885": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8887": {
      "op": "SHL"
    },
    "8888": {
      "op": "SUB"
    },
    "8889": {
      "op": "NOT"
    },
    "8890": {
      "op": "AND"
    },
    "8891": {
      "op": "SWAP1"
    },
    "8892": {
      "op": "DUP2"
    },
    "8893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8895": {
      "op": "BYTE"
    },
    "8896": {
      "op": "SWAP1"
    },
    "8897": {
      "op": "MSTORE8"
    },
    "8898": {
      "op": "POP"
    },
    "8899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8901": {
      "op": "PUSH2",
      "value": "0x22CF"
    },
    "8904": {
      "op": "DUP5"
    },
    "8905": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8907": {
      "op": "PUSH2",
      "value": "0x2A29"
    },
    "8910": {
      "jump": "i",
      "op": "JUMP"
    },
    "8911": {
      "op": "JUMPDEST"
    },
    "8912": {
      "op": "PUSH2",
      "value": "0x22DA"
    },
    "8915": {
      "op": "SWAP1"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8918": {
      "op": "PUSH2",
      "value": "0x29D6"
    },
    "8921": {
      "jump": "i",
      "op": "JUMP"
    },
    "8922": {
      "op": "JUMPDEST"
    },
    "8923": {
      "op": "SWAP1"
    },
    "8924": {
      "op": "POP"
    },
    "8925": {
      "op": "JUMPDEST"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8928": {
      "op": "DUP2"
    },
    "8929": {
      "op": "GT"
    },
    "8930": {
      "op": "ISZERO"
    },
    "8931": {
      "op": "PUSH2",
      "value": "0x2352"
    },
    "8934": {
      "op": "JUMPI"
    },
    "8935": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "8954": {
      "op": "SHL"
    },
    "8955": {
      "op": "DUP6"
    },
    "8956": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "8958": {
      "op": "AND"
    },
    "8959": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "8961": {
      "op": "DUP2"
    },
    "8962": {
      "op": "LT"
    },
    "8963": {
      "op": "PUSH2",
      "value": "0x230E"
    },
    "8966": {
      "op": "JUMPI"
    },
    "8967": {
      "op": "PUSH2",
      "value": "0x230E"
    },
    "8970": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "8973": {
      "jump": "i",
      "op": "JUMP"
    },
    "8974": {
      "op": "JUMPDEST"
    },
    "8975": {
      "op": "BYTE"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8978": {
      "op": "SHL"
    },
    "8979": {
      "op": "DUP3"
    },
    "8980": {
      "op": "DUP3"
    },
    "8981": {
      "op": "DUP2"
    },
    "8982": {
      "op": "MLOAD"
    },
    "8983": {
      "op": "DUP2"
    },
    "8984": {
      "op": "LT"
    },
    "8985": {
      "op": "PUSH2",
      "value": "0x2324"
    },
    "8988": {
      "op": "JUMPI"
    },
    "8989": {
      "op": "PUSH2",
      "value": "0x2324"
    },
    "8992": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "8995": {
      "jump": "i",
      "op": "JUMP"
    },
    "8996": {
      "op": "JUMPDEST"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8999": {
      "op": "ADD"
    },
    "9000": {
      "op": "ADD"
    },
    "9001": {
      "op": "SWAP1"
    },
    "9002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9006": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9008": {
      "op": "SHL"
    },
    "9009": {
      "op": "SUB"
    },
    "9010": {
      "op": "NOT"
    },
    "9011": {
      "op": "AND"
    },
    "9012": {
      "op": "SWAP1"
    },
    "9013": {
      "op": "DUP2"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9016": {
      "op": "BYTE"
    },
    "9017": {
      "op": "SWAP1"
    },
    "9018": {
      "op": "MSTORE8"
    },
    "9019": {
      "op": "POP"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9022": {
      "op": "SWAP5"
    },
    "9023": {
      "op": "SWAP1"
    },
    "9024": {
      "op": "SWAP5"
    },
    "9025": {
      "op": "SHR"
    },
    "9026": {
      "op": "SWAP4"
    },
    "9027": {
      "op": "PUSH2",
      "value": "0x234B"
    },
    "9030": {
      "op": "DUP2"
    },
    "9031": {
      "op": "PUSH2",
      "value": "0x2B60"
    },
    "9034": {
      "jump": "i",
      "op": "JUMP"
    },
    "9035": {
      "op": "JUMPDEST"
    },
    "9036": {
      "op": "SWAP1"
    },
    "9037": {
      "op": "POP"
    },
    "9038": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "9041": {
      "op": "JUMP"
    },
    "9042": {
      "op": "JUMPDEST"
    },
    "9043": {
      "op": "POP"
    },
    "9044": {
      "op": "DUP4"
    },
    "9045": {
      "op": "ISZERO"
    },
    "9046": {
      "op": "PUSH2",
      "value": "0x1841"
    },
    "9049": {
      "op": "JUMPI"
    },
    "9050": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9052": {
      "op": "MLOAD"
    },
    "9053": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9059": {
      "op": "SHL"
    },
    "9060": {
      "op": "DUP2"
    },
    "9061": {
      "op": "MSTORE"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9066": {
      "op": "DUP3"
    },
    "9067": {
      "op": "ADD"
    },
    "9068": {
      "op": "DUP2"
    },
    "9069": {
      "op": "SWAP1"
    },
    "9070": {
      "op": "MSTORE"
    },
    "9071": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9073": {
      "op": "DUP3"
    },
    "9074": {
      "op": "ADD"
    },
    "9075": {
      "op": "MSTORE"
    },
    "9076": {
      "op": "PUSH32",
      "value": "0x537472696E67733A20686578206C656E67746820696E73756666696369656E74"
    },
    "9109": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9111": {
      "op": "DUP3"
    },
    "9112": {
      "op": "ADD"
    },
    "9113": {
      "op": "MSTORE"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9116": {
      "op": "ADD"
    },
    "9117": {
      "op": "PUSH2",
      "value": "0x732"
    },
    "9120": {
      "op": "JUMP"
    },
    "9121": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9122": {
      "fn": "Address.functionCall",
      "offset": [
        3979,
        3991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9124": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 139,
      "value": "0x23B0"
    },
    "9127": {
      "fn": "Address.functionCall",
      "offset": [
        4032,
        4038
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9128": {
      "fn": "Address.functionCall",
      "offset": [
        4040,
        4044
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9129": {
      "fn": "Address.functionCall",
      "offset": [
        4046,
        4047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9131": {
      "fn": "Address.functionCall",
      "offset": [
        4049,
        4061
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9132": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24FA"
    },
    "9135": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9136": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9137": {
      "fn": "Address.functionCall",
      "offset": [
        4003,
        4062
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9138": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9139": {
      "op": "POP"
    },
    "9140": {
      "op": "POP"
    },
    "9141": {
      "op": "POP"
    },
    "9142": {
      "op": "POP"
    },
    "9143": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9144": {
      "op": "JUMPDEST"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9147": {
      "op": "DUP2"
    },
    "9148": {
      "op": "DUP2"
    },
    "9149": {
      "op": "MSTORE"
    },
    "9150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9152": {
      "op": "DUP4"
    },
    "9153": {
      "op": "ADD"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9156": {
      "op": "MSTORE"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9159": {
      "op": "DUP2"
    },
    "9160": {
      "op": "KECCAK256"
    },
    "9161": {
      "op": "SLOAD"
    },
    "9162": {
      "op": "PUSH2",
      "value": "0x23FF"
    },
    "9165": {
      "op": "JUMPI"
    },
    "9166": {
      "op": "POP"
    },
    "9167": {
      "op": "DUP2"
    },
    "9168": {
      "op": "SLOAD"
    },
    "9169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9171": {
      "op": "DUP2"
    },
    "9172": {
      "op": "DUP2"
    },
    "9173": {
      "op": "ADD"
    },
    "9174": {
      "op": "DUP5"
    },
    "9175": {
      "op": "SSTORE"
    },
    "9176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9178": {
      "op": "DUP5"
    },
    "9179": {
      "op": "DUP2"
    },
    "9180": {
      "op": "MSTORE"
    },
    "9181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9183": {
      "op": "DUP1"
    },
    "9184": {
      "op": "DUP3"
    },
    "9185": {
      "op": "KECCAK256"
    },
    "9186": {
      "op": "SWAP1"
    },
    "9187": {
      "op": "SWAP4"
    },
    "9188": {
      "op": "ADD"
    },
    "9189": {
      "op": "DUP5"
    },
    "9190": {
      "op": "SWAP1"
    },
    "9191": {
      "op": "SSTORE"
    },
    "9192": {
      "op": "DUP5"
    },
    "9193": {
      "op": "SLOAD"
    },
    "9194": {
      "op": "DUP5"
    },
    "9195": {
      "op": "DUP3"
    },
    "9196": {
      "op": "MSTORE"
    },
    "9197": {
      "op": "DUP3"
    },
    "9198": {
      "op": "DUP7"
    },
    "9199": {
      "op": "ADD"
    },
    "9200": {
      "op": "SWAP1"
    },
    "9201": {
      "op": "SWAP4"
    },
    "9202": {
      "op": "MSTORE"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9205": {
      "op": "SWAP1"
    },
    "9206": {
      "op": "KECCAK256"
    },
    "9207": {
      "op": "SWAP2"
    },
    "9208": {
      "op": "SWAP1"
    },
    "9209": {
      "op": "SWAP2"
    },
    "9210": {
      "op": "SSTORE"
    },
    "9211": {
      "op": "PUSH2",
      "value": "0x7CA"
    },
    "9214": {
      "op": "JUMP"
    },
    "9215": {
      "op": "JUMPDEST"
    },
    "9216": {
      "op": "POP"
    },
    "9217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9219": {
      "op": "PUSH2",
      "value": "0x7CA"
    },
    "9222": {
      "op": "JUMP"
    },
    "9223": {
      "op": "JUMPDEST"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9226": {
      "op": "DUP2"
    },
    "9227": {
      "op": "DUP2"
    },
    "9228": {
      "op": "MSTORE"
    },
    "9229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9231": {
      "op": "DUP4"
    },
    "9232": {
      "op": "ADD"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9235": {
      "op": "MSTORE"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9238": {
      "op": "DUP2"
    },
    "9239": {
      "op": "KECCAK256"
    },
    "9240": {
      "op": "SLOAD"
    },
    "9241": {
      "op": "DUP1"
    },
    "9242": {
      "op": "ISZERO"
    },
    "9243": {
      "op": "PUSH2",
      "value": "0x24F0"
    },
    "9246": {
      "op": "JUMPI"
    },
    "9247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9249": {
      "op": "PUSH2",
      "value": "0x242B"
    },
    "9252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9254": {
      "op": "DUP4"
    },
    "9255": {
      "op": "PUSH2",
      "value": "0x2A6A"
    },
    "9258": {
      "jump": "i",
      "op": "JUMP"
    },
    "9259": {
      "op": "JUMPDEST"
    },
    "9260": {
      "op": "DUP6"
    },
    "9261": {
      "op": "SLOAD"
    },
    "9262": {
      "op": "SWAP1"
    },
    "9263": {
      "op": "SWAP2"
    },
    "9264": {
      "op": "POP"
    },
    "9265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9267": {
      "op": "SWAP1"
    },
    "9268": {
      "op": "PUSH2",
      "value": "0x243F"
    },
    "9271": {
      "op": "SWAP1"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9274": {
      "op": "SWAP1"
    },
    "9275": {
      "op": "PUSH2",
      "value": "0x2A6A"
    },
    "9278": {
      "jump": "i",
      "op": "JUMP"
    },
    "9279": {
      "op": "JUMPDEST"
    },
    "9280": {
      "op": "SWAP1"
    },
    "9281": {
      "op": "POP"
    },
    "9282": {
      "op": "DUP2"
    },
    "9283": {
      "op": "DUP2"
    },
    "9284": {
      "op": "EQ"
    },
    "9285": {
      "op": "PUSH2",
      "value": "0x24A4"
    },
    "9288": {
      "op": "JUMPI"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9291": {
      "op": "DUP7"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9294": {
      "op": "ADD"
    },
    "9295": {
      "op": "DUP3"
    },
    "9296": {
      "op": "DUP2"
    },
    "9297": {
      "op": "SLOAD"
    },
    "9298": {
      "op": "DUP2"
    },
    "9299": {
      "op": "LT"
    },
    "9300": {
      "op": "PUSH2",
      "value": "0x245F"
    },
    "9303": {
      "op": "JUMPI"
    },
    "9304": {
      "op": "PUSH2",
      "value": "0x245F"
    },
    "9307": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "9310": {
      "jump": "i",
      "op": "JUMP"
    },
    "9311": {
      "op": "JUMPDEST"
    },
    "9312": {
      "op": "SWAP1"
    },
    "9313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9315": {
      "op": "MSTORE"
    },
    "9316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9320": {
      "op": "KECCAK256"
    },
    "9321": {
      "op": "ADD"
    },
    "9322": {
      "op": "SLOAD"
    },
    "9323": {
      "op": "SWAP1"
    },
    "9324": {
      "op": "POP"
    },
    "9325": {
      "op": "DUP1"
    },
    "9326": {
      "op": "DUP8"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9329": {
      "op": "ADD"
    },
    "9330": {
      "op": "DUP5"
    },
    "9331": {
      "op": "DUP2"
    },
    "9332": {
      "op": "SLOAD"
    },
    "9333": {
      "op": "DUP2"
    },
    "9334": {
      "op": "LT"
    },
    "9335": {
      "op": "PUSH2",
      "value": "0x2482"
    },
    "9338": {
      "op": "JUMPI"
    },
    "9339": {
      "op": "PUSH2",
      "value": "0x2482"
    },
    "9342": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "9345": {
      "jump": "i",
      "op": "JUMP"
    },
    "9346": {
      "op": "JUMPDEST"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9349": {
      "op": "SWAP2"
    },
    "9350": {
      "op": "DUP3"
    },
    "9351": {
      "op": "MSTORE"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9354": {
      "op": "DUP1"
    },
    "9355": {
      "op": "DUP4"
    },
    "9356": {
      "op": "KECCAK256"
    },
    "9357": {
      "op": "SWAP1"
    },
    "9358": {
      "op": "SWAP2"
    },
    "9359": {
      "op": "ADD"
    },
    "9360": {
      "op": "SWAP3"
    },
    "9361": {
      "op": "SWAP1"
    },
    "9362": {
      "op": "SWAP3"
    },
    "9363": {
      "op": "SSTORE"
    },
    "9364": {
      "op": "SWAP2"
    },
    "9365": {
      "op": "DUP3"
    },
    "9366": {
      "op": "MSTORE"
    },
    "9367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9369": {
      "op": "DUP9"
    },
    "9370": {
      "op": "ADD"
    },
    "9371": {
      "op": "SWAP1"
    },
    "9372": {
      "op": "MSTORE"
    },
    "9373": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9375": {
      "op": "SWAP1"
    },
    "9376": {
      "op": "KECCAK256"
    },
    "9377": {
      "op": "DUP4"
    },
    "9378": {
      "op": "SWAP1"
    },
    "9379": {
      "op": "SSTORE"
    },
    "9380": {
      "op": "JUMPDEST"
    },
    "9381": {
      "op": "DUP6"
    },
    "9382": {
      "op": "SLOAD"
    },
    "9383": {
      "op": "DUP7"
    },
    "9384": {
      "op": "SWAP1"
    },
    "9385": {
      "op": "DUP1"
    },
    "9386": {
      "op": "PUSH2",
      "value": "0x24B5"
    },
    "9389": {
      "op": "JUMPI"
    },
    "9390": {
      "op": "PUSH2",
      "value": "0x24B5"
    },
    "9393": {
      "op": "PUSH2",
      "value": "0x2B77"
    },
    "9396": {
      "jump": "i",
      "op": "JUMP"
    },
    "9397": {
      "op": "JUMPDEST"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9400": {
      "op": "SWAP1"
    },
    "9401": {
      "op": "SUB"
    },
    "9402": {
      "op": "DUP2"
    },
    "9403": {
      "op": "DUP2"
    },
    "9404": {
      "op": "SWAP1"
    },
    "9405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9407": {
      "op": "MSTORE"
    },
    "9408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9412": {
      "op": "KECCAK256"
    },
    "9413": {
      "op": "ADD"
    },
    "9414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9416": {
      "op": "SWAP1"
    },
    "9417": {
      "op": "SSTORE"
    },
    "9418": {
      "op": "SWAP1"
    },
    "9419": {
      "op": "SSTORE"
    },
    "9420": {
      "op": "DUP6"
    },
    "9421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9423": {
      "op": "ADD"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9426": {
      "op": "DUP7"
    },
    "9427": {
      "op": "DUP2"
    },
    "9428": {
      "op": "MSTORE"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9431": {
      "op": "ADD"
    },
    "9432": {
      "op": "SWAP1"
    },
    "9433": {
      "op": "DUP2"
    },
    "9434": {
      "op": "MSTORE"
    },
    "9435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9437": {
      "op": "ADD"
    },
    "9438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9440": {
      "op": "KECCAK256"
    },
    "9441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9443": {
      "op": "SWAP1"
    },
    "9444": {
      "op": "SSTORE"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9447": {
      "op": "SWAP4"
    },
    "9448": {
      "op": "POP"
    },
    "9449": {
      "op": "POP"
    },
    "9450": {
      "op": "POP"
    },
    "9451": {
      "op": "POP"
    },
    "9452": {
      "op": "PUSH2",
      "value": "0x7CA"
    },
    "9455": {
      "op": "JUMP"
    },
    "9456": {
      "op": "JUMPDEST"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9459": {
      "op": "SWAP2"
    },
    "9460": {
      "op": "POP"
    },
    "9461": {
      "op": "POP"
    },
    "9462": {
      "op": "PUSH2",
      "value": "0x7CA"
    },
    "9465": {
      "op": "JUMP"
    },
    "9466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5110
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9469": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5155,
        5160
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 140
    },
    "9470": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5151
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "9471": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "LT",
      "path": "2"
    },
    "9472": {
      "branch": 178,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9473": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255B"
    },
    "9476": {
      "branch": 178,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9477": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9479": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9486": {
      "op": "SHL"
    },
    "9487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "ADD",
      "path": "2"
    },
    "9495": {
      "op": "MSTORE"
    },
    "9496": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9500": {
      "op": "DUP3"
    },
    "9501": {
      "op": "ADD"
    },
    "9502": {
      "op": "MSTORE"
    },
    "9503": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9538": {
      "op": "DUP3"
    },
    "9539": {
      "op": "ADD"
    },
    "9540": {
      "op": "MSTORE"
    },
    "9541": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "9550": {
      "op": "SHL"
    },
    "9551": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9553": {
      "op": "DUP3"
    },
    "9554": {
      "op": "ADD"
    },
    "9555": {
      "op": "MSTORE"
    },
    "9556": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9558": {
      "op": "ADD"
    },
    "9559": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x732"
    },
    "9562": {
      "op": "JUMP"
    },
    "9563": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9570": {
      "op": "SHL"
    },
    "9571": {
      "op": "SUB"
    },
    "9572": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 141
    },
    "9573": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "AND",
      "path": "2"
    },
    "9574": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9575": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 142,
      "value": "0x25B2"
    },
    "9578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9581": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9582": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9588": {
      "op": "SHL"
    },
    "9589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9590": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9595": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9596": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "ADD",
      "path": "2"
    },
    "9597": {
      "op": "MSTORE"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "9600": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9602": {
      "op": "DUP3"
    },
    "9603": {
      "op": "ADD"
    },
    "9604": {
      "op": "MSTORE"
    },
    "9605": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "9638": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9640": {
      "op": "DUP3"
    },
    "9641": {
      "op": "ADD"
    },
    "9642": {
      "op": "MSTORE"
    },
    "9643": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9645": {
      "op": "ADD"
    },
    "9646": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x732"
    },
    "9649": {
      "op": "JUMP"
    },
    "9650": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9651": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5285,
        5297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9653": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9654": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5332
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9661": {
      "op": "SHL"
    },
    "9662": {
      "op": "SUB"
    },
    "9663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5337
      ],
      "op": "AND",
      "path": "2"
    },
    "9664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5345,
        5350
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9665": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5352,
        5356
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9669": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25CE"
    },
    "9672": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9673": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9674": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B8D"
    },
    "9677": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9678": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9679": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9684": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SUB",
      "path": "2"
    },
    "9687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "GAS",
      "path": "2"
    },
    "9691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "CALL",
      "path": "2"
    },
    "9692": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9693": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9694": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9695": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9700": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "EQ",
      "path": "2"
    },
    "9702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260B"
    },
    "9705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9708": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "NOT",
      "path": "2"
    },
    "9714": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9716": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "2"
    },
    "9718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "AND",
      "path": "2"
    },
    "9719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9720": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "2"
    },
    "9721": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "2"
    },
    "9734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2610"
    },
    "9738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9739": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9742": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9743": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9744": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9746": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9747": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9748": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 143,
      "value": "0x2620"
    },
    "9753": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5391,
        5398
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9754": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5400,
        5410
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5412,
        5424
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9756": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262B"
    },
    "9759": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9760": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9761": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5425
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "9762": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "9763": {
      "op": "POP"
    },
    "9764": {
      "op": "POP"
    },
    "9765": {
      "op": "POP"
    },
    "9766": {
      "op": "POP"
    },
    "9767": {
      "op": "POP"
    },
    "9768": {
      "op": "POP"
    },
    "9769": {
      "op": "POP"
    },
    "9770": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9771": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7546,
        8238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9772": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7692,
        7704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9774": {
      "branch": 179,
      "fn": "Address.verifyCallResult",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9775": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9776": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x263A"
    },
    "9779": {
      "branch": 179,
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9780": {
      "op": "POP"
    },
    "9781": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7750,
        7760
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 144
    },
    "9782": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1841"
    },
    "9785": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9786": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9787": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9788": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9789": {
      "branch": 180,
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7882
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9790": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x264A"
    },
    "9793": {
      "branch": 180,
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9794": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8055,
        8065
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9795": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8049,
        8066
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9796": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8115,
        8130
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9797": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8112
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9798": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8098,
        8100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9800": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8094,
        8113
      ],
      "op": "ADD",
      "path": "2"
    },
    "9801": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8087,
        8131
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9802": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9803": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8194,
        8206
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 145
    },
    "9804": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9806": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9813": {
      "op": "SHL"
    },
    "9814": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9815": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9816": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9818": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "ADD",
      "path": "2"
    },
    "9819": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x732"
    },
    "9822": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9823": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9824": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276C"
    },
    "9827": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8187,
        8207
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9828": {
      "op": "JUMPDEST"
    },
    "9829": {
      "op": "DUP3"
    },
    "9830": {
      "op": "DUP1"
    },
    "9831": {
      "op": "SLOAD"
    },
    "9832": {
      "op": "PUSH2",
      "value": "0x2670"
    },
    "9835": {
      "op": "SWAP1"
    },
    "9836": {
      "op": "PUSH2",
      "value": "0x29EE"
    },
    "9839": {
      "jump": "i",
      "op": "JUMP"
    },
    "9840": {
      "op": "JUMPDEST"
    },
    "9841": {
      "op": "SWAP1"
    },
    "9842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9844": {
      "op": "MSTORE"
    },
    "9845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9849": {
      "op": "KECCAK256"
    },
    "9850": {
      "op": "SWAP1"
    },
    "9851": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9853": {
      "op": "ADD"
    },
    "9854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9856": {
      "op": "SWAP1"
    },
    "9857": {
      "op": "DIV"
    },
    "9858": {
      "op": "DUP2"
    },
    "9859": {
      "op": "ADD"
    },
    "9860": {
      "op": "SWAP3"
    },
    "9861": {
      "op": "DUP3"
    },
    "9862": {
      "op": "PUSH2",
      "value": "0x2692"
    },
    "9865": {
      "op": "JUMPI"
    },
    "9866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9868": {
      "op": "DUP6"
    },
    "9869": {
      "op": "SSTORE"
    },
    "9870": {
      "op": "PUSH2",
      "value": "0x26D8"
    },
    "9873": {
      "op": "JUMP"
    },
    "9874": {
      "op": "JUMPDEST"
    },
    "9875": {
      "op": "DUP3"
    },
    "9876": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9878": {
      "op": "LT"
    },
    "9879": {
      "op": "PUSH2",
      "value": "0x26AB"
    },
    "9882": {
      "op": "JUMPI"
    },
    "9883": {
      "op": "DUP1"
    },
    "9884": {
      "op": "MLOAD"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9887": {
      "op": "NOT"
    },
    "9888": {
      "op": "AND"
    },
    "9889": {
      "op": "DUP4"
    },
    "9890": {
      "op": "DUP1"
    },
    "9891": {
      "op": "ADD"
    },
    "9892": {
      "op": "OR"
    },
    "9893": {
      "op": "DUP6"
    },
    "9894": {
      "op": "SSTORE"
    },
    "9895": {
      "op": "PUSH2",
      "value": "0x26D8"
    },
    "9898": {
      "op": "JUMP"
    },
    "9899": {
      "op": "JUMPDEST"
    },
    "9900": {
      "op": "DUP3"
    },
    "9901": {
      "op": "DUP1"
    },
    "9902": {
      "op": "ADD"
    },
    "9903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9905": {
      "op": "ADD"
    },
    "9906": {
      "op": "DUP6"
    },
    "9907": {
      "op": "SSTORE"
    },
    "9908": {
      "op": "DUP3"
    },
    "9909": {
      "op": "ISZERO"
    },
    "9910": {
      "op": "PUSH2",
      "value": "0x26D8"
    },
    "9913": {
      "op": "JUMPI"
    },
    "9914": {
      "op": "SWAP2"
    },
    "9915": {
      "op": "DUP3"
    },
    "9916": {
      "op": "ADD"
    },
    "9917": {
      "op": "JUMPDEST"
    },
    "9918": {
      "op": "DUP3"
    },
    "9919": {
      "op": "DUP2"
    },
    "9920": {
      "op": "GT"
    },
    "9921": {
      "op": "ISZERO"
    },
    "9922": {
      "op": "PUSH2",
      "value": "0x26D8"
    },
    "9925": {
      "op": "JUMPI"
    },
    "9926": {
      "op": "DUP3"
    },
    "9927": {
      "op": "MLOAD"
    },
    "9928": {
      "op": "DUP3"
    },
    "9929": {
      "op": "SSTORE"
    },
    "9930": {
      "op": "SWAP2"
    },
    "9931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9933": {
      "op": "ADD"
    },
    "9934": {
      "op": "SWAP2"
    },
    "9935": {
      "op": "SWAP1"
    },
    "9936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9938": {
      "op": "ADD"
    },
    "9939": {
      "op": "SWAP1"
    },
    "9940": {
      "op": "PUSH2",
      "value": "0x26BD"
    },
    "9943": {
      "op": "JUMP"
    },
    "9944": {
      "op": "JUMPDEST"
    },
    "9945": {
      "op": "POP"
    },
    "9946": {
      "op": "PUSH2",
      "value": "0x26E4"
    },
    "9949": {
      "op": "SWAP3"
    },
    "9950": {
      "op": "SWAP2"
    },
    "9951": {
      "op": "POP"
    },
    "9952": {
      "op": "PUSH2",
      "value": "0x26E8"
    },
    "9955": {
      "jump": "i",
      "op": "JUMP"
    },
    "9956": {
      "op": "JUMPDEST"
    },
    "9957": {
      "op": "POP"
    },
    "9958": {
      "op": "SWAP1"
    },
    "9959": {
      "jump": "o",
      "op": "JUMP"
    },
    "9960": {
      "op": "JUMPDEST"
    },
    "9961": {
      "op": "JUMPDEST"
    },
    "9962": {
      "op": "DUP1"
    },
    "9963": {
      "op": "DUP3"
    },
    "9964": {
      "op": "GT"
    },
    "9965": {
      "op": "ISZERO"
    },
    "9966": {
      "op": "PUSH2",
      "value": "0x26E4"
    },
    "9969": {
      "op": "JUMPI"
    },
    "9970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9972": {
      "op": "DUP2"
    },
    "9973": {
      "op": "SSTORE"
    },
    "9974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9976": {
      "op": "ADD"
    },
    "9977": {
      "op": "PUSH2",
      "value": "0x26E9"
    },
    "9980": {
      "op": "JUMP"
    },
    "9981": {
      "op": "JUMPDEST"
    },
    "9982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9986": {
      "op": "DUP3"
    },
    "9987": {
      "op": "DUP5"
    },
    "9988": {
      "op": "SUB"
    },
    "9989": {
      "op": "SLT"
    },
    "9990": {
      "op": "ISZERO"
    },
    "9991": {
      "op": "PUSH2",
      "value": "0x270F"
    },
    "9994": {
      "op": "JUMPI"
    },
    "9995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9997": {
      "op": "DUP1"
    },
    "9998": {
      "op": "REVERT"
    },
    "9999": {
      "op": "JUMPDEST"
    },
    "10000": {
      "op": "POP"
    },
    "10001": {
      "op": "CALLDATALOAD"
    },
    "10002": {
      "op": "SWAP2"
    },
    "10003": {
      "op": "SWAP1"
    },
    "10004": {
      "op": "POP"
    },
    "10005": {
      "jump": "o",
      "op": "JUMP"
    },
    "10006": {
      "op": "JUMPDEST"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10011": {
      "op": "DUP3"
    },
    "10012": {
      "op": "DUP5"
    },
    "10013": {
      "op": "SUB"
    },
    "10014": {
      "op": "SLT"
    },
    "10015": {
      "op": "ISZERO"
    },
    "10016": {
      "op": "PUSH2",
      "value": "0x2728"
    },
    "10019": {
      "op": "JUMPI"
    },
    "10020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10022": {
      "op": "DUP1"
    },
    "10023": {
      "op": "REVERT"
    },
    "10024": {
      "op": "JUMPDEST"
    },
    "10025": {
      "op": "DUP2"
    },
    "10026": {
      "op": "CALLDATALOAD"
    },
    "10027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10031": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10033": {
      "op": "SHL"
    },
    "10034": {
      "op": "SUB"
    },
    "10035": {
      "op": "NOT"
    },
    "10036": {
      "op": "DUP2"
    },
    "10037": {
      "op": "AND"
    },
    "10038": {
      "op": "DUP2"
    },
    "10039": {
      "op": "EQ"
    },
    "10040": {
      "op": "PUSH2",
      "value": "0x1841"
    },
    "10043": {
      "op": "JUMPI"
    },
    "10044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10046": {
      "op": "DUP1"
    },
    "10047": {
      "op": "REVERT"
    },
    "10048": {
      "op": "JUMPDEST"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10051": {
      "op": "JUMPDEST"
    },
    "10052": {
      "op": "DUP4"
    },
    "10053": {
      "op": "DUP2"
    },
    "10054": {
      "op": "LT"
    },
    "10055": {
      "op": "ISZERO"
    },
    "10056": {
      "op": "PUSH2",
      "value": "0x275B"
    },
    "10059": {
      "op": "JUMPI"
    },
    "10060": {
      "op": "DUP2"
    },
    "10061": {
      "op": "DUP2"
    },
    "10062": {
      "op": "ADD"
    },
    "10063": {
      "op": "MLOAD"
    },
    "10064": {
      "op": "DUP4"
    },
    "10065": {
      "op": "DUP3"
    },
    "10066": {
      "op": "ADD"
    },
    "10067": {
      "op": "MSTORE"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10070": {
      "op": "ADD"
    },
    "10071": {
      "op": "PUSH2",
      "value": "0x2743"
    },
    "10074": {
      "op": "JUMP"
    },
    "10075": {
      "op": "JUMPDEST"
    },
    "10076": {
      "op": "DUP4"
    },
    "10077": {
      "op": "DUP2"
    },
    "10078": {
      "op": "GT"
    },
    "10079": {
      "op": "ISZERO"
    },
    "10080": {
      "op": "PUSH2",
      "value": "0x1E73"
    },
    "10083": {
      "op": "JUMPI"
    },
    "10084": {
      "op": "POP"
    },
    "10085": {
      "op": "POP"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10088": {
      "op": "SWAP2"
    },
    "10089": {
      "op": "ADD"
    },
    "10090": {
      "op": "MSTORE"
    },
    "10091": {
      "jump": "o",
      "op": "JUMP"
    },
    "10092": {
      "op": "JUMPDEST"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10095": {
      "op": "DUP2"
    },
    "10096": {
      "op": "MSTORE"
    },
    "10097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10099": {
      "op": "DUP3"
    },
    "10100": {
      "op": "MLOAD"
    },
    "10101": {
      "op": "DUP1"
    },
    "10102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10104": {
      "op": "DUP5"
    },
    "10105": {
      "op": "ADD"
    },
    "10106": {
      "op": "MSTORE"
    },
    "10107": {
      "op": "PUSH2",
      "value": "0x278B"
    },
    "10110": {
      "op": "DUP2"
    },
    "10111": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10113": {
      "op": "DUP6"
    },
    "10114": {
      "op": "ADD"
    },
    "10115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10117": {
      "op": "DUP8"
    },
    "10118": {
      "op": "ADD"
    },
    "10119": {
      "op": "PUSH2",
      "value": "0x2740"
    },
    "10122": {
      "jump": "i",
      "op": "JUMP"
    },
    "10123": {
      "op": "JUMPDEST"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10126": {
      "op": "ADD"
    },
    "10127": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10129": {
      "op": "NOT"
    },
    "10130": {
      "op": "AND"
    },
    "10131": {
      "op": "SWAP2"
    },
    "10132": {
      "op": "SWAP1"
    },
    "10133": {
      "op": "SWAP2"
    },
    "10134": {
      "op": "ADD"
    },
    "10135": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10137": {
      "op": "ADD"
    },
    "10138": {
      "op": "SWAP3"
    },
    "10139": {
      "op": "SWAP2"
    },
    "10140": {
      "op": "POP"
    },
    "10141": {
      "op": "POP"
    },
    "10142": {
      "jump": "o",
      "op": "JUMP"
    },
    "10143": {
      "op": "JUMPDEST"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10150": {
      "op": "SHL"
    },
    "10151": {
      "op": "SUB"
    },
    "10152": {
      "op": "DUP2"
    },
    "10153": {
      "op": "AND"
    },
    "10154": {
      "op": "DUP2"
    },
    "10155": {
      "op": "EQ"
    },
    "10156": {
      "op": "PUSH2",
      "value": "0xEBE"
    },
    "10159": {
      "op": "JUMPI"
    },
    "10160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10162": {
      "op": "DUP1"
    },
    "10163": {
      "op": "REVERT"
    },
    "10164": {
      "op": "JUMPDEST"
    },
    "10165": {
      "op": "DUP1"
    },
    "10166": {
      "op": "CALLDATALOAD"
    },
    "10167": {
      "op": "PUSH2",
      "value": "0x909"
    },
    "10170": {
      "op": "DUP2"
    },
    "10171": {
      "op": "PUSH2",
      "value": "0x279F"
    },
    "10174": {
      "jump": "i",
      "op": "JUMP"
    },
    "10175": {
      "op": "JUMPDEST"
    },
    "10176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10180": {
      "op": "DUP3"
    },
    "10181": {
      "op": "DUP5"
    },
    "10182": {
      "op": "SUB"
    },
    "10183": {
      "op": "SLT"
    },
    "10184": {
      "op": "ISZERO"
    },
    "10185": {
      "op": "PUSH2",
      "value": "0x27D1"
    },
    "10188": {
      "op": "JUMPI"
    },
    "10189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10191": {
      "op": "DUP1"
    },
    "10192": {
      "op": "REVERT"
    },
    "10193": {
      "op": "JUMPDEST"
    },
    "10194": {
      "op": "DUP2"
    },
    "10195": {
      "op": "CALLDATALOAD"
    },
    "10196": {
      "op": "PUSH2",
      "value": "0x1841"
    },
    "10199": {
      "op": "DUP2"
    },
    "10200": {
      "op": "PUSH2",
      "value": "0x279F"
    },
    "10203": {
      "jump": "i",
      "op": "JUMP"
    },
    "10204": {
      "op": "JUMPDEST"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10207": {
      "op": "DUP1"
    },
    "10208": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10210": {
      "op": "DUP4"
    },
    "10211": {
      "op": "DUP6"
    },
    "10212": {
      "op": "SUB"
    },
    "10213": {
      "op": "SLT"
    },
    "10214": {
      "op": "ISZERO"
    },
    "10215": {
      "op": "PUSH2",
      "value": "0x27EF"
    },
    "10218": {
      "op": "JUMPI"
    },
    "10219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10221": {
      "op": "DUP1"
    },
    "10222": {
      "op": "REVERT"
    },
    "10223": {
      "op": "JUMPDEST"
    },
    "10224": {
      "op": "DUP3"
    },
    "10225": {
      "op": "CALLDATALOAD"
    },
    "10226": {
      "op": "SWAP2"
    },
    "10227": {
      "op": "POP"
    },
    "10228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10230": {
      "op": "DUP4"
    },
    "10231": {
      "op": "ADD"
    },
    "10232": {
      "op": "CALLDATALOAD"
    },
    "10233": {
      "op": "PUSH2",
      "value": "0x2801"
    },
    "10236": {
      "op": "DUP2"
    },
    "10237": {
      "op": "PUSH2",
      "value": "0x279F"
    },
    "10240": {
      "jump": "i",
      "op": "JUMP"
    },
    "10241": {
      "op": "JUMPDEST"
    },
    "10242": {
      "op": "DUP1"
    },
    "10243": {
      "op": "SWAP2"
    },
    "10244": {
      "op": "POP"
    },
    "10245": {
      "op": "POP"
    },
    "10246": {
      "op": "SWAP3"
    },
    "10247": {
      "op": "POP"
    },
    "10248": {
      "op": "SWAP3"
    },
    "10249": {
      "op": "SWAP1"
    },
    "10250": {
      "op": "POP"
    },
    "10251": {
      "jump": "o",
      "op": "JUMP"
    },
    "10252": {
      "op": "JUMPDEST"
    },
    "10253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10255": {
      "op": "DUP1"
    },
    "10256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10258": {
      "op": "DUP1"
    },
    "10259": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10261": {
      "op": "DUP6"
    },
    "10262": {
      "op": "DUP8"
    },
    "10263": {
      "op": "SUB"
    },
    "10264": {
      "op": "SLT"
    },
    "10265": {
      "op": "ISZERO"
    },
    "10266": {
      "op": "PUSH2",
      "value": "0x2822"
    },
    "10269": {
      "op": "JUMPI"
    },
    "10270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10272": {
      "op": "DUP1"
    },
    "10273": {
      "op": "REVERT"
    },
    "10274": {
      "op": "JUMPDEST"
    },
    "10275": {
      "op": "DUP5"
    },
    "10276": {
      "op": "CALLDATALOAD"
    },
    "10277": {
      "op": "PUSH2",
      "value": "0x282D"
    },
    "10280": {
      "op": "DUP2"
    },
    "10281": {
      "op": "PUSH2",
      "value": "0x279F"
    },
    "10284": {
      "jump": "i",
      "op": "JUMP"
    },
    "10285": {
      "op": "JUMPDEST"
    },
    "10286": {
      "op": "SWAP7"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10289": {
      "op": "DUP7"
    },
    "10290": {
      "op": "ADD"
    },
    "10291": {
      "op": "CALLDATALOAD"
    },
    "10292": {
      "op": "SWAP7"
    },
    "10293": {
      "op": "POP"
    },
    "10294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10296": {
      "op": "DUP7"
    },
    "10297": {
      "op": "ADD"
    },
    "10298": {
      "op": "CALLDATALOAD"
    },
    "10299": {
      "op": "SWAP6"
    },
    "10300": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10302": {
      "op": "ADD"
    },
    "10303": {
      "op": "CALLDATALOAD"
    },
    "10304": {
      "op": "SWAP5"
    },
    "10305": {
      "op": "POP"
    },
    "10306": {
      "op": "SWAP3"
    },
    "10307": {
      "op": "POP"
    },
    "10308": {
      "op": "POP"
    },
    "10309": {
      "op": "POP"
    },
    "10310": {
      "jump": "o",
      "op": "JUMP"
    },
    "10311": {
      "op": "JUMPDEST"
    },
    "10312": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10319": {
      "op": "SHL"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10322": {
      "op": "MSTORE"
    },
    "10323": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10325": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10327": {
      "op": "MSTORE"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10332": {
      "op": "REVERT"
    },
    "10333": {
      "op": "JUMPDEST"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10336": {
      "op": "DUP1"
    },
    "10337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10339": {
      "op": "DUP1"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10342": {
      "op": "DUP1"
    },
    "10343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10345": {
      "op": "DUP1"
    },
    "10346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10348": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10351": {
      "op": "DUP11"
    },
    "10352": {
      "op": "DUP13"
    },
    "10353": {
      "op": "SUB"
    },
    "10354": {
      "op": "SLT"
    },
    "10355": {
      "op": "ISZERO"
    },
    "10356": {
      "op": "PUSH2",
      "value": "0x287C"
    },
    "10359": {
      "op": "JUMPI"
    },
    "10360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10362": {
      "op": "DUP1"
    },
    "10363": {
      "op": "REVERT"
    },
    "10364": {
      "op": "JUMPDEST"
    },
    "10365": {
      "op": "DUP10"
    },
    "10366": {
      "op": "CALLDATALOAD"
    },
    "10367": {
      "op": "PUSH2",
      "value": "0x2887"
    },
    "10370": {
      "op": "DUP2"
    },
    "10371": {
      "op": "PUSH2",
      "value": "0x279F"
    },
    "10374": {
      "jump": "i",
      "op": "JUMP"
    },
    "10375": {
      "op": "JUMPDEST"
    },
    "10376": {
      "op": "SWAP9"
    },
    "10377": {
      "op": "POP"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10380": {
      "op": "DUP11"
    },
    "10381": {
      "op": "ADD"
    },
    "10382": {
      "op": "CALLDATALOAD"
    },
    "10383": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10392": {
      "op": "DUP1"
    },
    "10393": {
      "op": "DUP3"
    },
    "10394": {
      "op": "GT"
    },
    "10395": {
      "op": "ISZERO"
    },
    "10396": {
      "op": "PUSH2",
      "value": "0x28A4"
    },
    "10399": {
      "op": "JUMPI"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10402": {
      "op": "DUP1"
    },
    "10403": {
      "op": "REVERT"
    },
    "10404": {
      "op": "JUMPDEST"
    },
    "10405": {
      "op": "DUP2"
    },
    "10406": {
      "op": "DUP13"
    },
    "10407": {
      "op": "ADD"
    },
    "10408": {
      "op": "SWAP2"
    },
    "10409": {
      "op": "POP"
    },
    "10410": {
      "op": "DUP13"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10413": {
      "op": "DUP4"
    },
    "10414": {
      "op": "ADD"
    },
    "10415": {
      "op": "SLT"
    },
    "10416": {
      "op": "PUSH2",
      "value": "0x28B8"
    },
    "10419": {
      "op": "JUMPI"
    },
    "10420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10422": {
      "op": "DUP1"
    },
    "10423": {
      "op": "REVERT"
    },
    "10424": {
      "op": "JUMPDEST"
    },
    "10425": {
      "op": "DUP2"
    },
    "10426": {
      "op": "CALLDATALOAD"
    },
    "10427": {
      "op": "DUP2"
    },
    "10428": {
      "op": "DUP2"
    },
    "10429": {
      "op": "GT"
    },
    "10430": {
      "op": "ISZERO"
    },
    "10431": {
      "op": "PUSH2",
      "value": "0x28CA"
    },
    "10434": {
      "op": "JUMPI"
    },
    "10435": {
      "op": "PUSH2",
      "value": "0x28CA"
    },
    "10438": {
      "op": "PUSH2",
      "value": "0x2847"
    },
    "10441": {
      "jump": "i",
      "op": "JUMP"
    },
    "10442": {
      "op": "JUMPDEST"
    },
    "10443": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10445": {
      "op": "MLOAD"
    },
    "10446": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10448": {
      "op": "DUP3"
    },
    "10449": {
      "op": "ADD"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10452": {
      "op": "NOT"
    },
    "10453": {
      "op": "SWAP1"
    },
    "10454": {
      "op": "DUP2"
    },
    "10455": {
      "op": "AND"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10458": {
      "op": "ADD"
    },
    "10459": {
      "op": "AND"
    },
    "10460": {
      "op": "DUP2"
    },
    "10461": {
      "op": "ADD"
    },
    "10462": {
      "op": "SWAP1"
    },
    "10463": {
      "op": "DUP4"
    },
    "10464": {
      "op": "DUP3"
    },
    "10465": {
      "op": "GT"
    },
    "10466": {
      "op": "DUP2"
    },
    "10467": {
      "op": "DUP4"
    },
    "10468": {
      "op": "LT"
    },
    "10469": {
      "op": "OR"
    },
    "10470": {
      "op": "ISZERO"
    },
    "10471": {
      "op": "PUSH2",
      "value": "0x28F2"
    },
    "10474": {
      "op": "JUMPI"
    },
    "10475": {
      "op": "PUSH2",
      "value": "0x28F2"
    },
    "10478": {
      "op": "PUSH2",
      "value": "0x2847"
    },
    "10481": {
      "jump": "i",
      "op": "JUMP"
    },
    "10482": {
      "op": "JUMPDEST"
    },
    "10483": {
      "op": "DUP2"
    },
    "10484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10486": {
      "op": "MSTORE"
    },
    "10487": {
      "op": "DUP3"
    },
    "10488": {
      "op": "DUP2"
    },
    "10489": {
      "op": "MSTORE"
    },
    "10490": {
      "op": "DUP16"
    },
    "10491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10493": {
      "op": "DUP5"
    },
    "10494": {
      "op": "DUP8"
    },
    "10495": {
      "op": "ADD"
    },
    "10496": {
      "op": "ADD"
    },
    "10497": {
      "op": "GT"
    },
    "10498": {
      "op": "ISZERO"
    },
    "10499": {
      "op": "PUSH2",
      "value": "0x290B"
    },
    "10502": {
      "op": "JUMPI"
    },
    "10503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10505": {
      "op": "DUP1"
    },
    "10506": {
      "op": "REVERT"
    },
    "10507": {
      "op": "JUMPDEST"
    },
    "10508": {
      "op": "DUP3"
    },
    "10509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10511": {
      "op": "DUP7"
    },
    "10512": {
      "op": "ADD"
    },
    "10513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10515": {
      "op": "DUP4"
    },
    "10516": {
      "op": "ADD"
    },
    "10517": {
      "op": "CALLDATACOPY"
    },
    "10518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10522": {
      "op": "DUP5"
    },
    "10523": {
      "op": "DUP4"
    },
    "10524": {
      "op": "ADD"
    },
    "10525": {
      "op": "ADD"
    },
    "10526": {
      "op": "MSTORE"
    },
    "10527": {
      "op": "DUP1"
    },
    "10528": {
      "op": "SWAP13"
    },
    "10529": {
      "op": "POP"
    },
    "10530": {
      "op": "POP"
    },
    "10531": {
      "op": "POP"
    },
    "10532": {
      "op": "POP"
    },
    "10533": {
      "op": "POP"
    },
    "10534": {
      "op": "POP"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10537": {
      "op": "DUP11"
    },
    "10538": {
      "op": "ADD"
    },
    "10539": {
      "op": "CALLDATALOAD"
    },
    "10540": {
      "op": "SWAP7"
    },
    "10541": {
      "op": "POP"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10544": {
      "op": "DUP11"
    },
    "10545": {
      "op": "ADD"
    },
    "10546": {
      "op": "CALLDATALOAD"
    },
    "10547": {
      "op": "SWAP6"
    },
    "10548": {
      "op": "POP"
    },
    "10549": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10551": {
      "op": "DUP11"
    },
    "10552": {
      "op": "ADD"
    },
    "10553": {
      "op": "CALLDATALOAD"
    },
    "10554": {
      "op": "SWAP5"
    },
    "10555": {
      "op": "POP"
    },
    "10556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10558": {
      "op": "DUP11"
    },
    "10559": {
      "op": "ADD"
    },
    "10560": {
      "op": "CALLDATALOAD"
    },
    "10561": {
      "op": "SWAP4"
    },
    "10562": {
      "op": "POP"
    },
    "10563": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10565": {
      "op": "DUP11"
    },
    "10566": {
      "op": "ADD"
    },
    "10567": {
      "op": "CALLDATALOAD"
    },
    "10568": {
      "op": "SWAP3"
    },
    "10569": {
      "op": "POP"
    },
    "10570": {
      "op": "PUSH2",
      "value": "0x2955"
    },
    "10573": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10575": {
      "op": "DUP12"
    },
    "10576": {
      "op": "ADD"
    },
    "10577": {
      "op": "PUSH2",
      "value": "0x27B4"
    },
    "10580": {
      "jump": "i",
      "op": "JUMP"
    },
    "10581": {
      "op": "JUMPDEST"
    },
    "10582": {
      "op": "SWAP2"
    },
    "10583": {
      "op": "POP"
    },
    "10584": {
      "op": "PUSH2",
      "value": "0x2964"
    },
    "10587": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10590": {
      "op": "DUP12"
    },
    "10591": {
      "op": "ADD"
    },
    "10592": {
      "op": "PUSH2",
      "value": "0x27B4"
    },
    "10595": {
      "jump": "i",
      "op": "JUMP"
    },
    "10596": {
      "op": "JUMPDEST"
    },
    "10597": {
      "op": "SWAP1"
    },
    "10598": {
      "op": "POP"
    },
    "10599": {
      "op": "SWAP3"
    },
    "10600": {
      "op": "SWAP6"
    },
    "10601": {
      "op": "SWAP9"
    },
    "10602": {
      "op": "POP"
    },
    "10603": {
      "op": "SWAP3"
    },
    "10604": {
      "op": "SWAP6"
    },
    "10605": {
      "op": "SWAP9"
    },
    "10606": {
      "op": "POP"
    },
    "10607": {
      "op": "SWAP3"
    },
    "10608": {
      "op": "SWAP6"
    },
    "10609": {
      "op": "SWAP9"
    },
    "10610": {
      "jump": "o",
      "op": "JUMP"
    },
    "10611": {
      "op": "JUMPDEST"
    },
    "10612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10614": {
      "op": "DUP1"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10617": {
      "op": "DUP4"
    },
    "10618": {
      "op": "DUP6"
    },
    "10619": {
      "op": "SUB"
    },
    "10620": {
      "op": "SLT"
    },
    "10621": {
      "op": "ISZERO"
    },
    "10622": {
      "op": "PUSH2",
      "value": "0x2986"
    },
    "10625": {
      "op": "JUMPI"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10628": {
      "op": "DUP1"
    },
    "10629": {
      "op": "REVERT"
    },
    "10630": {
      "op": "JUMPDEST"
    },
    "10631": {
      "op": "POP"
    },
    "10632": {
      "op": "POP"
    },
    "10633": {
      "op": "DUP1"
    },
    "10634": {
      "op": "CALLDATALOAD"
    },
    "10635": {
      "op": "SWAP3"
    },
    "10636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10638": {
      "op": "SWAP1"
    },
    "10639": {
      "op": "SWAP2"
    },
    "10640": {
      "op": "ADD"
    },
    "10641": {
      "op": "CALLDATALOAD"
    },
    "10642": {
      "op": "SWAP2"
    },
    "10643": {
      "op": "POP"
    },
    "10644": {
      "jump": "o",
      "op": "JUMP"
    },
    "10645": {
      "op": "JUMPDEST"
    },
    "10646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10648": {
      "op": "DUP1"
    },
    "10649": {
      "op": "DUP3"
    },
    "10650": {
      "op": "MSTORE"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10653": {
      "op": "SWAP1"
    },
    "10654": {
      "op": "DUP3"
    },
    "10655": {
      "op": "ADD"
    },
    "10656": {
      "op": "MSTORE"
    },
    "10657": {
      "op": "PUSH17",
      "value": "0x416D6F756E74206973207A65726F202121"
    },
    "10675": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "10677": {
      "op": "SHL"
    },
    "10678": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10680": {
      "op": "DUP3"
    },
    "10681": {
      "op": "ADD"
    },
    "10682": {
      "op": "MSTORE"
    },
    "10683": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10685": {
      "op": "ADD"
    },
    "10686": {
      "op": "SWAP1"
    },
    "10687": {
      "jump": "o",
      "op": "JUMP"
    },
    "10688": {
      "op": "JUMPDEST"
    },
    "10689": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10696": {
      "op": "SHL"
    },
    "10697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10699": {
      "op": "MSTORE"
    },
    "10700": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10702": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10704": {
      "op": "MSTORE"
    },
    "10705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10709": {
      "op": "REVERT"
    },
    "10710": {
      "op": "JUMPDEST"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10713": {
      "op": "DUP3"
    },
    "10714": {
      "op": "NOT"
    },
    "10715": {
      "op": "DUP3"
    },
    "10716": {
      "op": "GT"
    },
    "10717": {
      "op": "ISZERO"
    },
    "10718": {
      "op": "PUSH2",
      "value": "0x29E9"
    },
    "10721": {
      "op": "JUMPI"
    },
    "10722": {
      "op": "PUSH2",
      "value": "0x29E9"
    },
    "10725": {
      "op": "PUSH2",
      "value": "0x29C0"
    },
    "10728": {
      "jump": "i",
      "op": "JUMP"
    },
    "10729": {
      "op": "JUMPDEST"
    },
    "10730": {
      "op": "POP"
    },
    "10731": {
      "op": "ADD"
    },
    "10732": {
      "op": "SWAP1"
    },
    "10733": {
      "jump": "o",
      "op": "JUMP"
    },
    "10734": {
      "op": "JUMPDEST"
    },
    "10735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10737": {
      "op": "DUP2"
    },
    "10738": {
      "op": "DUP2"
    },
    "10739": {
      "op": "SHR"
    },
    "10740": {
      "op": "SWAP1"
    },
    "10741": {
      "op": "DUP3"
    },
    "10742": {
      "op": "AND"
    },
    "10743": {
      "op": "DUP1"
    },
    "10744": {
      "op": "PUSH2",
      "value": "0x2A02"
    },
    "10747": {
      "op": "JUMPI"
    },
    "10748": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10750": {
      "op": "DUP3"
    },
    "10751": {
      "op": "AND"
    },
    "10752": {
      "op": "SWAP2"
    },
    "10753": {
      "op": "POP"
    },
    "10754": {
      "op": "JUMPDEST"
    },
    "10755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10757": {
      "op": "DUP3"
    },
    "10758": {
      "op": "LT"
    },
    "10759": {
      "op": "DUP2"
    },
    "10760": {
      "op": "EQ"
    },
    "10761": {
      "op": "ISZERO"
    },
    "10762": {
      "op": "PUSH2",
      "value": "0x2A23"
    },
    "10765": {
      "op": "JUMPI"
    },
    "10766": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10773": {
      "op": "SHL"
    },
    "10774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10776": {
      "op": "MSTORE"
    },
    "10777": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10779": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10781": {
      "op": "MSTORE"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10786": {
      "op": "REVERT"
    },
    "10787": {
      "op": "JUMPDEST"
    },
    "10788": {
      "op": "POP"
    },
    "10789": {
      "op": "SWAP2"
    },
    "10790": {
      "op": "SWAP1"
    },
    "10791": {
      "op": "POP"
    },
    "10792": {
      "jump": "o",
      "op": "JUMP"
    },
    "10793": {
      "op": "JUMPDEST"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10796": {
      "op": "DUP2"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10799": {
      "op": "NOT"
    },
    "10800": {
      "op": "DIV"
    },
    "10801": {
      "op": "DUP4"
    },
    "10802": {
      "op": "GT"
    },
    "10803": {
      "op": "DUP3"
    },
    "10804": {
      "op": "ISZERO"
    },
    "10805": {
      "op": "ISZERO"
    },
    "10806": {
      "op": "AND"
    },
    "10807": {
      "op": "ISZERO"
    },
    "10808": {
      "op": "PUSH2",
      "value": "0x2A43"
    },
    "10811": {
      "op": "JUMPI"
    },
    "10812": {
      "op": "PUSH2",
      "value": "0x2A43"
    },
    "10815": {
      "op": "PUSH2",
      "value": "0x29C0"
    },
    "10818": {
      "jump": "i",
      "op": "JUMP"
    },
    "10819": {
      "op": "JUMPDEST"
    },
    "10820": {
      "op": "POP"
    },
    "10821": {
      "op": "MUL"
    },
    "10822": {
      "op": "SWAP1"
    },
    "10823": {
      "jump": "o",
      "op": "JUMP"
    },
    "10824": {
      "op": "JUMPDEST"
    },
    "10825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10827": {
      "op": "DUP3"
    },
    "10828": {
      "op": "PUSH2",
      "value": "0x2A65"
    },
    "10831": {
      "op": "JUMPI"
    },
    "10832": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10837": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10839": {
      "op": "SHL"
    },
    "10840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10842": {
      "op": "MSTORE"
    },
    "10843": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10845": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10847": {
      "op": "MSTORE"
    },
    "10848": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10852": {
      "op": "REVERT"
    },
    "10853": {
      "op": "JUMPDEST"
    },
    "10854": {
      "op": "POP"
    },
    "10855": {
      "op": "DIV"
    },
    "10856": {
      "op": "SWAP1"
    },
    "10857": {
      "jump": "o",
      "op": "JUMP"
    },
    "10858": {
      "op": "JUMPDEST"
    },
    "10859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10861": {
      "op": "DUP3"
    },
    "10862": {
      "op": "DUP3"
    },
    "10863": {
      "op": "LT"
    },
    "10864": {
      "op": "ISZERO"
    },
    "10865": {
      "op": "PUSH2",
      "value": "0x2A7C"
    },
    "10868": {
      "op": "JUMPI"
    },
    "10869": {
      "op": "PUSH2",
      "value": "0x2A7C"
    },
    "10872": {
      "op": "PUSH2",
      "value": "0x29C0"
    },
    "10875": {
      "jump": "i",
      "op": "JUMP"
    },
    "10876": {
      "op": "JUMPDEST"
    },
    "10877": {
      "op": "POP"
    },
    "10878": {
      "op": "SUB"
    },
    "10879": {
      "op": "SWAP1"
    },
    "10880": {
      "jump": "o",
      "op": "JUMP"
    },
    "10881": {
      "op": "JUMPDEST"
    },
    "10882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10888": {
      "op": "SHL"
    },
    "10889": {
      "op": "SUB"
    },
    "10890": {
      "op": "SWAP3"
    },
    "10891": {
      "op": "SWAP1"
    },
    "10892": {
      "op": "SWAP3"
    },
    "10893": {
      "op": "AND"
    },
    "10894": {
      "op": "DUP3"
    },
    "10895": {
      "op": "MSTORE"
    },
    "10896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10898": {
      "op": "DUP3"
    },
    "10899": {
      "op": "ADD"
    },
    "10900": {
      "op": "MSTORE"
    },
    "10901": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10903": {
      "op": "ADD"
    },
    "10904": {
      "op": "SWAP1"
    },
    "10905": {
      "jump": "o",
      "op": "JUMP"
    },
    "10906": {
      "op": "JUMPDEST"
    },
    "10907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10911": {
      "op": "DUP3"
    },
    "10912": {
      "op": "DUP5"
    },
    "10913": {
      "op": "SUB"
    },
    "10914": {
      "op": "SLT"
    },
    "10915": {
      "op": "ISZERO"
    },
    "10916": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "10919": {
      "op": "JUMPI"
    },
    "10920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10922": {
      "op": "DUP1"
    },
    "10923": {
      "op": "REVERT"
    },
    "10924": {
      "op": "JUMPDEST"
    },
    "10925": {
      "op": "POP"
    },
    "10926": {
      "op": "MLOAD"
    },
    "10927": {
      "op": "SWAP2"
    },
    "10928": {
      "op": "SWAP1"
    },
    "10929": {
      "op": "POP"
    },
    "10930": {
      "jump": "o",
      "op": "JUMP"
    },
    "10931": {
      "op": "JUMPDEST"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10936": {
      "op": "DUP3"
    },
    "10937": {
      "op": "DUP5"
    },
    "10938": {
      "op": "SUB"
    },
    "10939": {
      "op": "SLT"
    },
    "10940": {
      "op": "ISZERO"
    },
    "10941": {
      "op": "PUSH2",
      "value": "0x2AC5"
    },
    "10944": {
      "op": "JUMPI"
    },
    "10945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10947": {
      "op": "DUP1"
    },
    "10948": {
      "op": "REVERT"
    },
    "10949": {
      "op": "JUMPDEST"
    },
    "10950": {
      "op": "DUP2"
    },
    "10951": {
      "op": "MLOAD"
    },
    "10952": {
      "op": "DUP1"
    },
    "10953": {
      "op": "ISZERO"
    },
    "10954": {
      "op": "ISZERO"
    },
    "10955": {
      "op": "DUP2"
    },
    "10956": {
      "op": "EQ"
    },
    "10957": {
      "op": "PUSH2",
      "value": "0x1841"
    },
    "10960": {
      "op": "JUMPI"
    },
    "10961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10963": {
      "op": "DUP1"
    },
    "10964": {
      "op": "REVERT"
    },
    "10965": {
      "op": "JUMPDEST"
    },
    "10966": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
    },
    "10999": {
      "op": "DUP2"
    },
    "11000": {
      "op": "MSTORE"
    },
    "11001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11003": {
      "op": "DUP4"
    },
    "11004": {
      "op": "MLOAD"
    },
    "11005": {
      "op": "PUSH2",
      "value": "0x2B0D"
    },
    "11008": {
      "op": "DUP2"
    },
    "11009": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "11011": {
      "op": "DUP6"
    },
    "11012": {
      "op": "ADD"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11015": {
      "op": "DUP9"
    },
    "11016": {
      "op": "ADD"
    },
    "11017": {
      "op": "PUSH2",
      "value": "0x2740"
    },
    "11020": {
      "jump": "i",
      "op": "JUMP"
    },
    "11021": {
      "op": "JUMPDEST"
    },
    "11022": {
      "op": "PUSH17",
      "value": "0x1034B99036B4B9B9B4B733903937B6329"
    },
    "11040": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "11042": {
      "op": "SHL"
    },
    "11043": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "11045": {
      "op": "SWAP2"
    },
    "11046": {
      "op": "DUP5"
    },
    "11047": {
      "op": "ADD"
    },
    "11048": {
      "op": "SWAP2"
    },
    "11049": {
      "op": "DUP3"
    },
    "11050": {
      "op": "ADD"
    },
    "11051": {
      "op": "MSTORE"
    },
    "11052": {
      "op": "DUP4"
    },
    "11053": {
      "op": "MLOAD"
    },
    "11054": {
      "op": "PUSH2",
      "value": "0x2B3E"
    },
    "11057": {
      "op": "DUP2"
    },
    "11058": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11060": {
      "op": "DUP5"
    },
    "11061": {
      "op": "ADD"
    },
    "11062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11064": {
      "op": "DUP9"
    },
    "11065": {
      "op": "ADD"
    },
    "11066": {
      "op": "PUSH2",
      "value": "0x2740"
    },
    "11069": {
      "jump": "i",
      "op": "JUMP"
    },
    "11070": {
      "op": "JUMPDEST"
    },
    "11071": {
      "op": "ADD"
    },
    "11072": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11074": {
      "op": "ADD"
    },
    "11075": {
      "op": "SWAP5"
    },
    "11076": {
      "op": "SWAP4"
    },
    "11077": {
      "op": "POP"
    },
    "11078": {
      "op": "POP"
    },
    "11079": {
      "op": "POP"
    },
    "11080": {
      "op": "POP"
    },
    "11081": {
      "jump": "o",
      "op": "JUMP"
    },
    "11082": {
      "op": "JUMPDEST"
    },
    "11083": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11088": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11090": {
      "op": "SHL"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11093": {
      "op": "MSTORE"
    },
    "11094": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11098": {
      "op": "MSTORE"
    },
    "11099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11103": {
      "op": "REVERT"
    },
    "11104": {
      "op": "JUMPDEST"
    },
    "11105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11107": {
      "op": "DUP2"
    },
    "11108": {
      "op": "PUSH2",
      "value": "0x2B6F"
    },
    "11111": {
      "op": "JUMPI"
    },
    "11112": {
      "op": "PUSH2",
      "value": "0x2B6F"
    },
    "11115": {
      "op": "PUSH2",
      "value": "0x29C0"
    },
    "11118": {
      "jump": "i",
      "op": "JUMP"
    },
    "11119": {
      "op": "JUMPDEST"
    },
    "11120": {
      "op": "POP"
    },
    "11121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11123": {
      "op": "NOT"
    },
    "11124": {
      "op": "ADD"
    },
    "11125": {
      "op": "SWAP1"
    },
    "11126": {
      "jump": "o",
      "op": "JUMP"
    },
    "11127": {
      "op": "JUMPDEST"
    },
    "11128": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11133": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11135": {
      "op": "SHL"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11138": {
      "op": "MSTORE"
    },
    "11139": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11141": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11143": {
      "op": "MSTORE"
    },
    "11144": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11148": {
      "op": "REVERT"
    },
    "11149": {
      "op": "JUMPDEST"
    },
    "11150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11152": {
      "op": "DUP3"
    },
    "11153": {
      "op": "MLOAD"
    },
    "11154": {
      "op": "PUSH2",
      "value": "0x2B9F"
    },
    "11157": {
      "op": "DUP2"
    },
    "11158": {
      "op": "DUP5"
    },
    "11159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11161": {
      "op": "DUP8"
    },
    "11162": {
      "op": "ADD"
    },
    "11163": {
      "op": "PUSH2",
      "value": "0x2740"
    },
    "11166": {
      "jump": "i",
      "op": "JUMP"
    },
    "11167": {
      "op": "JUMPDEST"
    },
    "11168": {
      "op": "SWAP2"
    },
    "11169": {
      "op": "SWAP1"
    },
    "11170": {
      "op": "SWAP2"
    },
    "11171": {
      "op": "ADD"
    },
    "11172": {
      "op": "SWAP3"
    },
    "11173": {
      "op": "SWAP2"
    },
    "11174": {
      "op": "POP"
    },
    "11175": {
      "op": "POP"
    },
    "11176": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6f6844c8ec27d0fe12f72a3a5dcfa7f7f60ed9f7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./BankStorage.sol\";\nimport \"../interfaces/ITellor.sol\";\nimport \"../interfaces/IERC20.sol\";\nimport \"./SafeERC20.sol\";\nimport \"./Initializable.sol\";\nimport \"./AccessControlEnumerable.sol\";\n\n/**\n * @title Bank\n * This contract allows the owner to deposit reserves(debt token), earn interest and\n * origination fees from users that borrow against their collateral.\n * The oracle for Bank is Tellor.\n */\ncontract BankOld is BankStorage, AccessControlEnumerable, Initializable {\n    using SafeERC20 for IERC20;\n\n    address private _bankFactoryOwner;\n\n    /*Events*/\n    event ReserveDeposit(uint256 amount);\n    event ReserveWithdraw(address token, uint256 amount);\n    event VaultDeposit(address owner, uint256 amount);\n    event VaultBorrow(address borrower, uint256 amount);\n    event VaultRepay(address borrower, uint256 amount);\n    event VaultWithdraw(address borrower, uint256 amount);\n    event PriceUpdate(address token, uint256 price);\n    event Liquidation(address borrower, uint256 debtAmount);\n\n    /*Constructor*/\n    constructor(address payable oracleContract) {\n        reserve.oracleContract = oracleContract;\n    }\n\n    /*Modifiers*/\n    modifier onlyOwner() {\n        require(_owner == msg.sender, \"IS NOT OWNER\");\n        _;\n    }\n\n    /*Functions*/\n    /**\n     * @dev Returns the owner of the bank\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     * NOTE: Override this to add changing the\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _owner = newOwner;\n    }\n\n    /**\n     * @dev This function sets the fundamental parameters for the bank\n     *      and assigns the first admin\n     */\n    function init(\n        address creator,\n        string memory bankName,\n        uint256 interestRate,\n        uint256 originationFee,\n        uint256 collateralizationRatio,\n        uint256 liquidationPenalty,\n        uint256 period,\n        address bankFactoryOwner,\n        address payable oracleContract\n    ) public initializer {\n        //set up as admin / owner\n        _setupRole(DEFAULT_ADMIN_ROLE, creator);\n        reserve.interestRate = interestRate;\n        reserve.originationFee = originationFee;\n        reserve.collateralizationRatio = collateralizationRatio;\n        reserve.oracleContract = oracleContract;\n        reserve.liquidationPenalty = liquidationPenalty;\n        reserve.period = period;\n        _bankFactoryOwner = bankFactoryOwner;\n        name = bankName;\n    }\n\n    /**\n     * @dev This function sets the collateral token properties, only callable one time\n     */\n    function setCollateral(\n        address collateralToken,\n        uint256 collateralTokenTellorRequestId,\n        uint256 collateralTokenPriceGranularity,\n        uint256 collateralTokenPrice\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(\n            collateral.tokenAddress == address(0) &&\n                collateralToken != address(0),\n            \"!setable\"\n        );\n        collateral.tokenAddress = collateralToken;\n        collateral.price = collateralTokenPrice;\n        collateral.priceGranularity = collateralTokenPriceGranularity;\n        collateral.tellorRequestId = collateralTokenTellorRequestId;\n    }\n\n    /**\n     * @dev This function sets the debt token properties, only callable one time\n     */\n    function setDebt(\n        address debtToken,\n        uint256 debtTokenTellorRequestId,\n        uint256 debtTokenPriceGranularity,\n        uint256 debtTokenPrice\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(\n            debt.tokenAddress == address(0) && debtToken != address(0),\n            \"!setable\"\n        );\n        debt.tokenAddress = debtToken;\n        debt.price = debtTokenPrice;\n        debt.priceGranularity = debtTokenPriceGranularity;\n        debt.tellorRequestId = debtTokenTellorRequestId;\n    }\n\n    /**\n     * @dev This function allows the Bank owner to deposit the reserve (debt tokens)\n     * @param amount is the amount to deposit\n     */\n    function reserveDeposit(uint256 amount)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(amount > 0, \"Amount is zero !!\");\n        reserve.debtBalance += amount;\n        IERC20(debt.tokenAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            amount\n        );\n        emit ReserveDeposit(amount);\n    }\n\n    /**\n     * @dev This function allows the Bank owner to withdraw the reserve (debt tokens)\n     *      Withdraws incur a 0.5% fee paid to the bankFactoryOwner\n     * @param amount is the amount to withdraw\n     */\n    function reserveWithdraw(uint256 amount)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(\n            IERC20(debt.tokenAddress).balanceOf(address(this)) >= amount,\n            \"NOT ENOUGH DEBT TOKENS IN RESERVE\"\n        );\n        uint256 feeAmount = amount / 200; // Bank Factory collects 0.5% fee\n        reserve.debtBalance -= amount;\n        IERC20(debt.tokenAddress).safeTransfer(msg.sender, amount - feeAmount);\n        IERC20(debt.tokenAddress).safeTransfer(_bankFactoryOwner, feeAmount);\n        emit ReserveWithdraw(debt.tokenAddress, amount);\n    }\n\n    /**\n  * @dev This function allows the user to withdraw their collateral\n         Withdraws incur a 0.5% fee paid to the bankFactoryOwner\n  * @param amount is the amount to withdraw\n  */\n    function reserveWithdrawCollateral(uint256 amount)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(\n            reserve.collateralBalance >= amount,\n            \"NOT ENOUGH COLLATERAL IN RESERVE\"\n        );\n        uint256 feeAmount = amount / 200; // Bank Factory collects 0.5% fee\n        reserve.collateralBalance -= amount;\n        emit ReserveWithdraw(collateral.tokenAddress, amount);\n        IERC20(collateral.tokenAddress).safeTransfer(\n            msg.sender,\n            amount - feeAmount\n        );\n        IERC20(collateral.tokenAddress).safeTransfer(\n            _bankFactoryOwner,\n            feeAmount\n        );\n    }\n\n    /**\n     * @dev Use this function to get and update the price for the collateral token\n     * using the Tellor Oracle.\n     */\n    function updateCollateralPrice() external {\n        require(\n            hasRole(REPORTER_ROLE, msg.sender) ||\n                hasRole(DEFAULT_ADMIN_ROLE, msg.sender),\n            \"not price updater or admin\"\n        );\n        (, collateral.price, collateral.lastUpdatedAt) = getCurrentValue(\n            collateral.tellorRequestId\n        ); //,now - 1 hours);\n        emit PriceUpdate(collateral.tokenAddress, collateral.price);\n    }\n\n    /**\n     * @dev Use this function to get and update the price for the debt token\n     * using the Tellor Oracle.\n     */\n    function updateDebtPrice() external {\n        require(\n            hasRole(REPORTER_ROLE, msg.sender) ||\n                hasRole(DEFAULT_ADMIN_ROLE, msg.sender),\n            \"not price updater or admin\"\n        );\n        (, debt.price, debt.lastUpdatedAt) = getCurrentValue(\n            debt.tellorRequestId\n        ); //,now - 1 hours);\n        emit PriceUpdate(debt.tokenAddress, debt.price);\n    }\n\n    /**\n     * @dev Only keepers or admins can use this function to liquidate a vault's debt,\n     * the bank admins gets the collateral liquidated, liquidated collateral\n     * is charged a 10% fee which gets paid to the bankFactoryOwner\n     * @param vaultOwner is the user the bank admins wants to liquidate\n     */\n    function liquidate(address vaultOwner) external {\n        require(\n            hasRole(KEEPER_ROLE, msg.sender) ||\n                hasRole(DEFAULT_ADMIN_ROLE, msg.sender),\n            \"not keeper or admin\"\n        );\n        // Require undercollateralization\n        require(\n            getVaultCollateralizationRatio(vaultOwner) <\n                reserve.collateralizationRatio * 100,\n            \"VAULT NOT UNDERCOLLATERALIZED\"\n        );\n        uint256 debtOwned = vaults[vaultOwner].debtAmount +\n            ((vaults[vaultOwner].debtAmount *\n                100 *\n                reserve.liquidationPenalty) /\n                100 /\n                100);\n        uint256 collateralToLiquidate = (debtOwned * debt.price) /\n            collateral.price;\n\n        if (collateralToLiquidate > vaults[vaultOwner].collateralAmount) {\n            collateralToLiquidate = vaults[vaultOwner].collateralAmount;\n        }\n\n        uint256 feeAmount = collateralToLiquidate / 10; // Bank Factory collects 10% fee\n        reserve.collateralBalance += collateralToLiquidate - feeAmount;\n        vaults[vaultOwner].collateralAmount -= collateralToLiquidate;\n        vaults[vaultOwner].debtAmount = 0;\n        IERC20(collateral.tokenAddress).safeTransfer(\n            _bankFactoryOwner,\n            feeAmount\n        );\n        emit Liquidation(vaultOwner, debtOwned);\n    }\n\n    /**\n     * @dev Use this function to allow users to deposit collateral to the vault\n     * @param amount is the collateral amount\n     */\n    function vaultDeposit(uint256 amount) external {\n        require(amount > 0, \"Amount is zero !!\");\n        vaults[msg.sender].collateralAmount += amount;\n        reserve.collateralBalance += amount;\n        IERC20(collateral.tokenAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            amount\n        );\n        emit VaultDeposit(msg.sender, amount);\n    }\n\n    /**\n     * @dev Use this function to allow users to borrow against their collateral\n     * @param amount to borrow\n     */\n    function vaultBorrow(uint256 amount) external {\n        if (vaults[msg.sender].debtAmount != 0) {\n            vaults[msg.sender].debtAmount = getVaultRepayAmount();\n        }\n        uint256 maxBorrow = ((vaults[msg.sender].collateralAmount *\n            collateral.price) /\n            debt.price /\n            reserve.collateralizationRatio) * 100;\n        maxBorrow *= debt.priceGranularity;\n        maxBorrow /= collateral.priceGranularity;\n        maxBorrow -= vaults[msg.sender].debtAmount;\n        vaults[msg.sender].debtAmount +=\n            amount +\n            ((amount * reserve.originationFee) / 10000);\n        require(\n            vaults[msg.sender].debtAmount < maxBorrow,\n            \"NOT ENOUGH COLLATERAL\"\n        );\n        require(\n            amount <= IERC20(debt.tokenAddress).balanceOf(address(this)),\n            \"NOT ENOUGH RESERVES\"\n        );\n        if (block.timestamp - vaults[msg.sender].createdAt > reserve.period) {\n            // Only adjust if more than 1 interest rate period has past\n            vaults[msg.sender].createdAt = block.timestamp;\n        }\n        reserve.debtBalance -= amount;\n        IERC20(debt.tokenAddress).safeTransfer(msg.sender, amount);\n        emit VaultBorrow(msg.sender, amount);\n    }\n\n    /**\n     * @dev This function allows users to pay the interest and origination fee to the\n     *  vault before being able to withdraw\n     * @param amount owed\n     */\n    function vaultRepay(uint256 amount) external {\n        require(amount > 0, \"Amount is zero !!\");\n        vaults[msg.sender].debtAmount = getVaultRepayAmount();\n        require(\n            amount <= vaults[msg.sender].debtAmount,\n            \"CANNOT REPAY MORE THAN OWED\"\n        );\n        vaults[msg.sender].debtAmount -= amount;\n        reserve.debtBalance += amount;\n        uint256 periodsElapsed = (block.timestamp / reserve.period) -\n            (vaults[msg.sender].createdAt / reserve.period);\n        vaults[msg.sender].createdAt += periodsElapsed * reserve.period;\n        IERC20(debt.tokenAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            amount\n        );\n        emit VaultRepay(msg.sender, amount);\n    }\n\n    /**\n     * @dev Allows users to withdraw their collateral from the vault\n     * @param amount withdrawn\n     */\n    function vaultWithdraw(uint256 amount) external {\n        require(\n            amount <= vaults[msg.sender].collateralAmount,\n            \"CANNOT WITHDRAW MORE COLLATERAL\"\n        );\n\n        uint256 maxBorrowAfterWithdraw = (((vaults[msg.sender]\n            .collateralAmount - amount) * collateral.price) /\n            debt.price /\n            reserve.collateralizationRatio) * 100;\n        maxBorrowAfterWithdraw *= debt.priceGranularity;\n        maxBorrowAfterWithdraw /= collateral.priceGranularity;\n        require(\n            vaults[msg.sender].debtAmount <= maxBorrowAfterWithdraw,\n            \"CANNOT UNDERCOLLATERALIZE VAULT\"\n        );\n        vaults[msg.sender].collateralAmount -= amount;\n        reserve.collateralBalance -= amount;\n        IERC20(collateral.tokenAddress).safeTransfer(msg.sender, amount);\n        emit VaultWithdraw(msg.sender, amount);\n    }\n\n    function getBankFactoryOwner() public view returns (address) {\n        return _bankFactoryOwner;\n    }\n\n    function setBankFactoryOwner(address newOwner) external {\n        require(_bankFactoryOwner == msg.sender, \"IS NOT BANK FACTORY OWNER\");\n        _bankFactoryOwner = newOwner;\n    }\n\n    function getCurrentValue(uint256 _requestId)\n        public\n        view\n        returns (\n            bool ifRetrieve,\n            uint256 value,\n            uint256 _timestampRetrieved\n        )\n    {\n        ITellor oracle = ITellor(reserve.oracleContract);\n        uint256 _count = oracle.getNewValueCountbyRequestId(_requestId);\n        uint256 _time = oracle.getTimestampbyRequestIDandIndex(\n            _requestId,\n            _count - 1\n        );\n        uint256 _value = oracle.retrieveData(_requestId, _time);\n        if (_value > 0) return (true, _value, _time);\n        return (false, 0, _time);\n    }\n\n    /**\n     * @dev Allows admin to add address to keeper role\n     * @param keeper address of new keeper\n     */\n    function addKeeper(address keeper) external {\n        require(keeper != address(0), \"operation not allowed\");\n        grantRole(KEEPER_ROLE, keeper);\n    }\n\n    /**\n     * @dev Allows admin to remove address from keeper role\n     * @param oldKeeper address of old keeper\n     */\n    function revokeKeeper(address oldKeeper) external {\n        revokeRole(KEEPER_ROLE, oldKeeper);\n    }\n\n    /**\n     * @dev Allows admin to add address to price updater role\n     * @param updater address of new price updater\n     */\n    function addReporter(address updater) external {\n        require(updater != address(0), \"operation not allowed\");\n        grantRole(REPORTER_ROLE, updater);\n    }\n\n    /**\n     * @dev Allows admin to remove address from price updater role\n     * @param oldUpdater address of old price updater\n     */\n    function revokeReporter(address oldUpdater) external {\n        revokeRole(REPORTER_ROLE, oldUpdater);\n    }\n}",
  "sourceMap": "464:14388:3:-:0;;;1092:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1146:22;:39;;-1:-1:-1;;;;;;1146:39:3;-1:-1:-1;;;;;1146:39:3;;;;;;;;;;464:14388;;14:298:17;92:6;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;187:16;;-1:-1:-1;;;;;232:31:17;;222:42;;212:70;;278:1;275;268:12;212:70;301:5;14:298;-1:-1:-1;;;14:298:17:o;:::-;464:14388:3;;;;;;",
  "sourcePath": "contracts/BankOld.sol",
  "type": "contract"
}