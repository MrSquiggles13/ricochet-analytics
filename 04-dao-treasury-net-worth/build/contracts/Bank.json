{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "oracleContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "debtAmount",
          "type": "uint256"
        }
      ],
      "name": "Liquidation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PriceUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReserveDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReserveWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultRepay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "VaultWithdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "KEEPER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REPORTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "keeper",
          "type": "address"
        }
      ],
      "name": "addKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "updater",
          "type": "address"
        }
      ],
      "name": "addReporter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBankFactoryOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralTokenLastUpdatedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralTokenPriceGranularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollateralizationRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getCurrentValue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ifRetrieve",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDebtTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDebtTokenLastUpdatedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDebtTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDebtTokenPriceGranularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLiquidationPenalty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOriginationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserveCollateralBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultCollateralAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "getVaultCollateralizationRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultDebtAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultRepayAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "bankName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "originationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralizationRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationPenalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "bankFactoryOwner",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "oracleContract",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "reserveDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "reserveWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "reserveWithdrawCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldKeeper",
          "type": "address"
        }
      ],
      "name": "revokeKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldUpdater",
          "type": "address"
        }
      ],
      "name": "revokeReporter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setBankFactoryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenTellorRequestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenPriceGranularity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenPrice",
          "type": "uint256"
        }
      ],
      "name": "setCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "debtToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "debtTokenTellorRequestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtTokenPriceGranularity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtTokenPrice",
          "type": "uint256"
        }
      ],
      "name": "setDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateCollateralPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateDebtPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vaultBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vaultDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vaultRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vaultWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaults",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/AccessControl.sol",
    "1": "contracts/AccessControlEnumerable.sol",
    "19": "contracts/Initializable.sol",
    "2": "contracts/Address.sol",
    "3": "contracts/Bank.sol",
    "30": "contracts/SafeERC20.sol",
    "44": "interfaces/IAccessControl.sol",
    "45": "interfaces/IAccessControlEnumerable.sol",
    "47": "interfaces/IERC165.sol",
    "49": "interfaces/IERC20.sol",
    "5": "contracts/BankStorage.sol",
    "64": "interfaces/ITellor.sol",
    "8": "contracts/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Bank.sol",
    "exportedSymbols": {
      "AccessControl": [
        322
      ],
      "AccessControlEnumerable": [
        447
      ],
      "Address": [
        742
      ],
      "Bank": [
        1956
      ],
      "BankStorage": [
        2432
      ],
      "Context": [
        2557
      ],
      "ERC165": [
        3043
      ],
      "EnumerableSet": [
        4466
      ],
      "IAccessControl": [
        16844
      ],
      "IAccessControlEnumerable": [
        16870
      ],
      "IERC165": [
        17453
      ],
      "IERC20": [
        16948
      ],
      "ITellor": [
        17441
      ],
      "Initializable": [
        4748
      ],
      "Ownable": [
        4962
      ],
      "SafeERC20": [
        11710
      ],
      "Strings": [
        12289
      ]
    },
    "id": 1957,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 744,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "contracts/BankStorage.sol",
        "file": "./BankStorage.sol",
        "id": 745,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1957,
        "sourceUnit": 2433,
        "src": "57:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ITellor.sol",
        "file": "../interfaces/ITellor.sol",
        "id": 746,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1957,
        "sourceUnit": 17442,
        "src": "85:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 747,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1957,
        "sourceUnit": 16949,
        "src": "121:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 748,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1957,
        "sourceUnit": 11711,
        "src": "156:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 749,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1957,
        "sourceUnit": 4749,
        "src": "182:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AccessControlEnumerable.sol",
        "file": "./AccessControlEnumerable.sol",
        "id": 750,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1957,
        "sourceUnit": 448,
        "src": "212:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 752,
              "name": "BankStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2432,
              "src": "481:11:3"
            },
            "id": 753,
            "nodeType": "InheritanceSpecifier",
            "src": "481:11:3"
          },
          {
            "baseName": {
              "id": 754,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 447,
              "src": "494:23:3"
            },
            "id": 755,
            "nodeType": "InheritanceSpecifier",
            "src": "494:23:3"
          },
          {
            "baseName": {
              "id": 756,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4748,
              "src": "519:13:3"
            },
            "id": 757,
            "nodeType": "InheritanceSpecifier",
            "src": "519:13:3"
          }
        ],
        "canonicalName": "Bank",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 751,
          "nodeType": "StructuredDocumentation",
          "src": "253:210:3",
          "text": " @title Bank\n This contract allows the owner to deposit reserves(debt token), earn interest and\n origination fees from users that borrow against their collateral.\n The oracle for Bank is Tellor."
        },
        "fullyImplemented": true,
        "id": 1956,
        "linearizedBaseContracts": [
          1956,
          4748,
          447,
          322,
          17453,
          16870,
          16844,
          2557,
          2432
        ],
        "name": "Bank",
        "nameLocation": "473:4:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 761,
            "libraryName": {
              "id": 758,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11710,
              "src": "545:9:3"
            },
            "nodeType": "UsingForDirective",
            "src": "539:27:3",
            "typeName": {
              "id": 760,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 759,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16948,
                "src": "559:6:3"
              },
              "referencedDeclaration": 16948,
              "src": "559:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$16948",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 763,
            "mutability": "mutable",
            "name": "_bankFactoryOwner",
            "nameLocation": "588:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 1956,
            "src": "572:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 762,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 767,
            "name": "ReserveDeposit",
            "nameLocation": "633:14:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "656:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 767,
                  "src": "648:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "647:16:3"
            },
            "src": "627:37:3"
          },
          {
            "anonymous": false,
            "id": 773,
            "name": "ReserveWithdraw",
            "nameLocation": "675:15:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "707:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "691:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 771,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "722:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "714:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "690:39:3"
            },
            "src": "669:61:3"
          },
          {
            "anonymous": false,
            "id": 779,
            "name": "VaultDeposit",
            "nameLocation": "741:12:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "770:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "754:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 777,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "785:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "777:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:39:3"
            },
            "src": "735:58:3"
          },
          {
            "anonymous": false,
            "id": 785,
            "name": "VaultBorrow",
            "nameLocation": "804:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "832:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "816:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 783,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "850:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "842:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "815:42:3"
            },
            "src": "798:60:3"
          },
          {
            "anonymous": false,
            "id": 791,
            "name": "VaultRepay",
            "nameLocation": "869:10:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "896:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 791,
                  "src": "880:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "914:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 791,
                  "src": "906:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "879:42:3"
            },
            "src": "863:59:3"
          },
          {
            "anonymous": false,
            "id": 797,
            "name": "VaultWithdraw",
            "nameLocation": "933:13:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 793,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "963:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "947:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "981:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "973:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "946:42:3"
            },
            "src": "927:62:3"
          },
          {
            "anonymous": false,
            "id": 803,
            "name": "PriceUpdate",
            "nameLocation": "1000:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1028:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1012:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1043:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1035:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:38:3"
            },
            "src": "994:56:3"
          },
          {
            "anonymous": false,
            "id": 809,
            "name": "Liquidation",
            "nameLocation": "1061:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "1089:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "1073:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 807,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "debtAmount",
                  "nameLocation": "1107:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "1099:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:46:3"
            },
            "src": "1055:64:3"
          },
          {
            "body": {
              "id": 820,
              "nodeType": "Block",
              "src": "1189:56:3",
              "statements": [
                {
                  "expression": {
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 814,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "1199:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "oracleContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2114,
                      "src": "1199:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 817,
                      "name": "oracleContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "1224:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1199:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "1199:39:3"
                }
              ]
            },
            "id": 821,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "oracleContract",
                  "nameLocation": "1173:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 821,
                  "src": "1157:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:32:3"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:0:3"
            },
            "scope": 1956,
            "src": "1145:100:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 832,
              "nodeType": "Block",
              "src": "1290:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 824,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2088,
                          "src": "1308:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 825,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1318:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1318:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1308:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4953204e4f54204f574e4552",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1330:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75f12d78ab7b0d8b36290227d7209106a2553fc949ffbe4443c7be6f23459db7",
                          "typeString": "literal_string \"IS NOT OWNER\""
                        },
                        "value": "IS NOT OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75f12d78ab7b0d8b36290227d7209106a2553fc949ffbe4443c7be6f23459db7",
                          "typeString": "literal_string \"IS NOT OWNER\""
                        }
                      ],
                      "id": 823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1300:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1300:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "1300:45:3"
                },
                {
                  "id": 831,
                  "nodeType": "PlaceholderStatement",
                  "src": "1355:1:3"
                }
              ]
            },
            "id": 833,
            "name": "onlyOwner",
            "nameLocation": "1278:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:2:3"
            },
            "src": "1269:94:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 841,
              "nodeType": "Block",
              "src": "1492:30:3",
              "statements": [
                {
                  "expression": {
                    "id": 839,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2088,
                    "src": "1509:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 838,
                  "id": 840,
                  "nodeType": "Return",
                  "src": "1502:13:3"
                }
              ]
            },
            "documentation": {
              "id": 834,
              "nodeType": "StructuredDocumentation",
              "src": "1387:53:3",
              "text": " @dev Returns the owner of the bank"
            },
            "functionSelector": "8da5cb5b",
            "id": 842,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "1454:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:2:3"
            },
            "returnParameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "1483:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1482:9:3"
            },
            "scope": 1956,
            "src": "1445:77:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 854,
              "nodeType": "Block",
              "src": "1780:34:3",
              "statements": [
                {
                  "expression": {
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 850,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2088,
                      "src": "1790:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 851,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 845,
                      "src": "1799:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1790:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:17:3"
                }
              ]
            },
            "documentation": {
              "id": 843,
              "nodeType": "StructuredDocumentation",
              "src": "1528:185:3",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner.\n NOTE: Override this to add changing the"
            },
            "functionSelector": "f2fde38b",
            "id": 855,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 848,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 847,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 833,
                  "src": "1770:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1770:9:3"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "1727:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1753:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "1745:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1745:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1744:18:3"
            },
            "returnParameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1780:0:3"
            },
            "scope": 1956,
            "src": "1718:96:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "2279:459:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 880,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "2334:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 881,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 858,
                        "src": "2354:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 879,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "2323:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2323:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "2323:39:3"
                },
                {
                  "expression": {
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 884,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "2372:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "interestRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2106,
                      "src": "2372:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 887,
                      "name": "interestRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "2395:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2372:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "2372:35:3"
                },
                {
                  "expression": {
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 890,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "2417:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 892,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "originationFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2108,
                      "src": "2417:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 893,
                      "name": "originationFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "2442:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2417:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:39:3"
                },
                {
                  "expression": {
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 896,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "2466:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralizationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2110,
                      "src": "2466:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 899,
                      "name": "collateralizationRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "2499:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2466:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:55:3"
                },
                {
                  "expression": {
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 902,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "2531:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "oracleContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2114,
                      "src": "2531:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 905,
                      "name": "oracleContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "2556:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2531:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "2531:39:3"
                },
                {
                  "expression": {
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 908,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "2580:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "liquidationPenalty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2112,
                      "src": "2580:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 911,
                      "name": "liquidationPenalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 868,
                      "src": "2609:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2580:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:47:3"
                },
                {
                  "expression": {
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 914,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "2637:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "period",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2116,
                      "src": "2637:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 917,
                      "name": "period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "2654:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2637:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "2637:23:3"
                },
                {
                  "expression": {
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 920,
                      "name": "_bankFactoryOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "2670:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 921,
                      "name": "bankFactoryOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "2690:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2670:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "2670:36:3"
                },
                {
                  "expression": {
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 924,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2090,
                      "src": "2716:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 925,
                      "name": "bankName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "2723:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2716:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "2716:15:3"
                }
              ]
            },
            "documentation": {
              "id": 856,
              "nodeType": "StructuredDocumentation",
              "src": "1820:122:3",
              "text": " @dev This function sets the fundamental parameters for the bank\n      and assigns the first admin"
            },
            "functionSelector": "70c12f1e",
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 877,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 876,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4721,
                  "src": "2267:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2267:11:3"
              }
            ],
            "name": "init",
            "nameLocation": "1956:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1978:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "1970:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 860,
                  "mutability": "mutable",
                  "name": "bankName",
                  "nameLocation": "2009:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "1995:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "interestRate",
                  "nameLocation": "2035:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "2027:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2027:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "originationFee",
                  "nameLocation": "2065:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "2057:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "collateralizationRatio",
                  "nameLocation": "2097:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "2089:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "liquidationPenalty",
                  "nameLocation": "2137:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "2129:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "2173:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "2165:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "bankFactoryOwner",
                  "nameLocation": "2197:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "2189:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "oracleContract",
                  "nameLocation": "2239:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "2223:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1960:299:3"
            },
            "returnParameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2279:0:3"
            },
            "scope": 1956,
            "src": "1947:791:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 986,
              "nodeType": "Block",
              "src": "3080:398:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 945,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2148,
                              "src": "3111:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 946,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "3111:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3146:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3138:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 947,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3138:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3138:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3111:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 952,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "3168:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3195:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3187:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 953,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3187:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3187:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3168:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3111:86:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173657461626c65",
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3211:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed5ca93dae053307ca4bbbc1b722e6711a23f5f33dc9226f5e7451b308d5ac49",
                          "typeString": "literal_string \"!setable\""
                        },
                        "value": "!setable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed5ca93dae053307ca4bbbc1b722e6711a23f5f33dc9226f5e7451b308d5ac49",
                          "typeString": "literal_string \"!setable\""
                        }
                      ],
                      "id": 944,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3090:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3090:141:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 961,
                  "nodeType": "ExpressionStatement",
                  "src": "3090:141:3"
                },
                {
                  "expression": {
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 962,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "3241:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 964,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2119,
                      "src": "3241:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 965,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 932,
                      "src": "3267:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3241:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "3241:41:3"
                },
                {
                  "expression": {
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 968,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "3292:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 970,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2121,
                      "src": "3292:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 971,
                      "name": "collateralTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "3311:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3292:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 973,
                  "nodeType": "ExpressionStatement",
                  "src": "3292:39:3"
                },
                {
                  "expression": {
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 974,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "3341:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 976,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2123,
                      "src": "3341:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 977,
                      "name": "collateralTokenPriceGranularity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "3371:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3341:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "3341:61:3"
                },
                {
                  "expression": {
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 980,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "3412:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tellorRequestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2125,
                      "src": "3412:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 983,
                      "name": "collateralTokenTellorRequestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "3441:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3412:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "3412:59:3"
                }
              ]
            },
            "documentation": {
              "id": 930,
              "nodeType": "StructuredDocumentation",
              "src": "2744:98:3",
              "text": " @dev This function sets the collateral token properties, only callable one time"
            },
            "functionSelector": "38507ff5",
            "id": 987,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 941,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "3060:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 942,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 940,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "3051:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3051:28:3"
              }
            ],
            "name": "setCollateral",
            "nameLocation": "2856:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "collateralToken",
                  "nameLocation": "2887:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "2879:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "collateralTokenTellorRequestId",
                  "nameLocation": "2920:30:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "2912:38:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "collateralTokenPriceGranularity",
                  "nameLocation": "2968:31:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "2960:39:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "mutability": "mutable",
                  "name": "collateralTokenPrice",
                  "nameLocation": "3017:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "3009:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3009:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2869:174:3"
            },
            "returnParameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3080:0:3"
            },
            "scope": 1956,
            "src": "2847:631:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1044,
              "nodeType": "Block",
              "src": "3784:322:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1003,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "3815:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1004,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "3815:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3844:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3836:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1005,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3836:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3836:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3815:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1010,
                            "name": "debtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "3850:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3871:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3863:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1011,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3863:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3863:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3850:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3815:58:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2173657461626c65",
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3887:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed5ca93dae053307ca4bbbc1b722e6711a23f5f33dc9226f5e7451b308d5ac49",
                          "typeString": "literal_string \"!setable\""
                        },
                        "value": "!setable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed5ca93dae053307ca4bbbc1b722e6711a23f5f33dc9226f5e7451b308d5ac49",
                          "typeString": "literal_string \"!setable\""
                        }
                      ],
                      "id": 1002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3794:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3794:113:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "3794:113:3"
                },
                {
                  "expression": {
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1020,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2145,
                        "src": "3917:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2119,
                      "src": "3917:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1023,
                      "name": "debtToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "3937:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3917:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "3917:29:3"
                },
                {
                  "expression": {
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1026,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2145,
                        "src": "3956:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2121,
                      "src": "3956:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1029,
                      "name": "debtTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "3969:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3956:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "3956:27:3"
                },
                {
                  "expression": {
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1032,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2145,
                        "src": "3993:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2123,
                      "src": "3993:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1035,
                      "name": "debtTokenPriceGranularity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 994,
                      "src": "4017:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3993:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "3993:49:3"
                },
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1038,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2145,
                        "src": "4052:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1040,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tellorRequestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2125,
                      "src": "4052:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1041,
                      "name": "debtTokenTellorRequestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 992,
                      "src": "4075:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4052:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:47:3"
                }
              ]
            },
            "documentation": {
              "id": 988,
              "nodeType": "StructuredDocumentation",
              "src": "3484:92:3",
              "text": " @dev This function sets the debt token properties, only callable one time"
            },
            "functionSelector": "c14d0454",
            "id": 1045,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 999,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "3764:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1000,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 998,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "3755:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3755:28:3"
              }
            ],
            "name": "setDebt",
            "nameLocation": "3590:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "debtToken",
                  "nameLocation": "3615:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "3607:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 992,
                  "mutability": "mutable",
                  "name": "debtTokenTellorRequestId",
                  "nameLocation": "3642:24:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "3634:32:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3634:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "debtTokenPriceGranularity",
                  "nameLocation": "3684:25:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "3676:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3676:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "debtTokenPrice",
                  "nameLocation": "3727:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "3719:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3719:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3597:150:3"
            },
            "returnParameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3784:0:3"
            },
            "scope": 1956,
            "src": "3581:525:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1085,
              "nodeType": "Block",
              "src": "4357:266:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1055,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "4375:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4384:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4375:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206973207a65726f202121",
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4387:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        },
                        "value": "Amount is zero !!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        }
                      ],
                      "id": 1054,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4367:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4367:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1060,
                  "nodeType": "ExpressionStatement",
                  "src": "4367:40:3"
                },
                {
                  "expression": {
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1061,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "4417:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2104,
                      "src": "4417:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1064,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "4440:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4417:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:29:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1072,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4512:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4512:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1076,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4544:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Bank_$1956",
                              "typeString": "contract Bank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Bank_$1956",
                              "typeString": "contract Bank"
                            }
                          ],
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4536:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1074,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4536:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4536:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1078,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "4563:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1068,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "4463:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1069,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "4463:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1067,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "4456:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4456:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11543,
                      "src": "4456:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4456:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1080,
                  "nodeType": "ExpressionStatement",
                  "src": "4456:123:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1082,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "4609:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1081,
                      "name": "ReserveDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "4594:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4594:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1084,
                  "nodeType": "EmitStatement",
                  "src": "4589:27:3"
                }
              ]
            },
            "documentation": {
              "id": 1046,
              "nodeType": "StructuredDocumentation",
              "src": "4112:142:3",
              "text": " @dev This function allows the Bank owner to deposit the reserve (debt tokens)\n @param amount is the amount to deposit"
            },
            "functionSelector": "0091a446",
            "id": 1086,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1051,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "4333:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1052,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1050,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "4324:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4324:28:3"
              }
            ],
            "name": "reserveDeposit",
            "nameLocation": "4268:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1048,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4291:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "4283:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4283:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4282:16:3"
            },
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4357:0:3"
            },
            "scope": 1956,
            "src": "4259:364:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1150,
              "nodeType": "Block",
              "src": "4945:487:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1103,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5020:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Bank_$1956",
                                    "typeString": "contract Bank"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Bank_$1956",
                                    "typeString": "contract Bank"
                                  }
                                ],
                                "id": 1102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5012:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1101,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5012:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5012:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1097,
                                    "name": "debt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2145,
                                    "src": "4983:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Token_$2130_storage",
                                      "typeString": "struct BankStorage.Token storage ref"
                                    }
                                  },
                                  "id": 1098,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2119,
                                  "src": "4983:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1096,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16948,
                                "src": "4976:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4976:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$16948",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16887,
                            "src": "4976:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4976:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1106,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1089,
                          "src": "5030:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4976:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5420454e4f554748204445425420544f4b454e5320494e2052455345525645",
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5050:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e03cb6c80e5ce49db8c0c22c3892ad79a9e29a6e4479ebf962906922fabf641",
                          "typeString": "literal_string \"NOT ENOUGH DEBT TOKENS IN RESERVE\""
                        },
                        "value": "NOT ENOUGH DEBT TOKENS IN RESERVE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e03cb6c80e5ce49db8c0c22c3892ad79a9e29a6e4479ebf962906922fabf641",
                          "typeString": "literal_string \"NOT ENOUGH DEBT TOKENS IN RESERVE\""
                        }
                      ],
                      "id": 1095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4955:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4955:140:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1110,
                  "nodeType": "ExpressionStatement",
                  "src": "4955:140:3"
                },
                {
                  "assignments": [
                    1112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1112,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "5113:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1150,
                      "src": "5105:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1111,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5105:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1116,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1113,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "5125:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5134:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "5125:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5105:32:3"
                },
                {
                  "expression": {
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1117,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "5181:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2104,
                      "src": "5181:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1120,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "5204:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5181:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "5181:29:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1128,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5259:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5259:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1130,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1089,
                          "src": "5271:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1131,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "5280:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5271:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1124,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "5227:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "5227:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1123,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "5220:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5220:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11517,
                      "src": "5220:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5220:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "5220:70:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1140,
                        "name": "_bankFactoryOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "5339:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1141,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "5358:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1136,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "5307:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "5307:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1135,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "5300:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5300:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11517,
                      "src": "5300:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5300:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "5300:68:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1145,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2145,
                          "src": "5399:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$2130_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2119,
                        "src": "5399:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1147,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1089,
                        "src": "5418:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1144,
                      "name": "ReserveWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "5383:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5383:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1149,
                  "nodeType": "EmitStatement",
                  "src": "5378:47:3"
                }
              ]
            },
            "documentation": {
              "id": 1087,
              "nodeType": "StructuredDocumentation",
              "src": "4629:212:3",
              "text": " @dev This function allows the Bank owner to withdraw the reserve (debt tokens)\n      Withdraws incur a 0.5% fee paid to the bankFactoryOwner\n @param amount is the amount to withdraw"
            },
            "functionSelector": "ec5e5e7d",
            "id": 1151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1092,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "4921:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1093,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1091,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "4912:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4912:28:3"
              }
            ],
            "name": "reserveWithdraw",
            "nameLocation": "4855:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4879:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "4871:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4871:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4870:16:3"
            },
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4945:0:3"
            },
            "scope": 1956,
            "src": "4846:586:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1207,
              "nodeType": "Block",
              "src": "5737:553:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1161,
                            "name": "reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2151,
                            "src": "5768:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                              "typeString": "struct BankStorage.Reserve storage ref"
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateralBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2102,
                          "src": "5768:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1163,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1154,
                          "src": "5797:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5768:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5420454e4f55474820434f4c4c41544552414c20494e2052455345525645",
                        "id": 1165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5817:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a272d29cbd7d18d5833f66fcfc646982955092e127d4be5a978c59aedcaabcd",
                          "typeString": "literal_string \"NOT ENOUGH COLLATERAL IN RESERVE\""
                        },
                        "value": "NOT ENOUGH COLLATERAL IN RESERVE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a272d29cbd7d18d5833f66fcfc646982955092e127d4be5a978c59aedcaabcd",
                          "typeString": "literal_string \"NOT ENOUGH COLLATERAL IN RESERVE\""
                        }
                      ],
                      "id": 1160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5747:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5747:114:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "5747:114:3"
                },
                {
                  "assignments": [
                    1169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1169,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "5879:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1207,
                      "src": "5871:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5871:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1173,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1170,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "5891:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5900:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "5891:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5871:32:3"
                },
                {
                  "expression": {
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1174,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "5947:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2102,
                      "src": "5947:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1177,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "5976:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5947:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "5947:35:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1181,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2148,
                          "src": "6013:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$2130_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2119,
                        "src": "6013:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1183,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "6038:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1180,
                      "name": "ReserveWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "5997:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5997:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1185,
                  "nodeType": "EmitStatement",
                  "src": "5992:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6113:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6113:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1193,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1154,
                          "src": "6137:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1194,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1169,
                          "src": "6146:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6137:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1187,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2148,
                              "src": "6062:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "6062:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1186,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "6055:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6055:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11517,
                      "src": "6055:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6055:110:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "6055:110:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1203,
                        "name": "_bankFactoryOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "6233:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1204,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "6264:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1199,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2148,
                              "src": "6182:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1200,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "6182:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1198,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "6175:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6175:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11517,
                      "src": "6175:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6175:108:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "6175:108:3"
                }
              ]
            },
            "documentation": {
              "id": 1152,
              "nodeType": "StructuredDocumentation",
              "src": "5438:185:3",
              "text": " @dev This function allows the user to withdraw their collateral\nWithdraws incur a 0.5% fee paid to the bankFactoryOwner\n @param amount is the amount to withdraw"
            },
            "functionSelector": "435726c4",
            "id": 1208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1157,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "5713:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1156,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "5704:8:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "5704:28:3"
              }
            ],
            "name": "reserveWithdrawCollateral",
            "nameLocation": "5637:25:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5671:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1208,
                  "src": "5663:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5663:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5662:16:3"
            },
            "returnParameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5737:0:3"
            },
            "scope": 1956,
            "src": "5628:662:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1246,
              "nodeType": "Block",
              "src": "6469:395:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1214,
                              "name": "REPORTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2100,
                              "src": "6508:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1215,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6523:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6523:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1213,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "6500:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6500:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1219,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "6562:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1220,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6582:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6582:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1218,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "6554:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6554:39:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6500:93:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742070726963652075706461746572206f722061646d696e",
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6607:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cee0e6d2b8318b7f5e1cc5b25d4f6478fbaad399edb0aea89a45f06da5330389",
                          "typeString": "literal_string \"not price updater or admin\""
                        },
                        "value": "not price updater or admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cee0e6d2b8318b7f5e1cc5b25d4f6478fbaad399edb0aea89a45f06da5330389",
                          "typeString": "literal_string \"not price updater or admin\""
                        }
                      ],
                      "id": 1212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6479:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6479:166:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1226,
                  "nodeType": "ExpressionStatement",
                  "src": "6479:166:3"
                },
                {
                  "expression": {
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 1227,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2148,
                            "src": "6658:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$2130_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2121,
                          "src": "6658:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1230,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2148,
                            "src": "6676:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$2130_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "lastUpdatedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2129,
                          "src": "6676:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1232,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6655:46:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1234,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2148,
                            "src": "6733:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$2130_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tellorRequestId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2125,
                          "src": "6733:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1233,
                        "name": "getCurrentValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1887,
                        "src": "6704:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 1236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6704:65:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "6655:114:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1238,
                  "nodeType": "ExpressionStatement",
                  "src": "6655:114:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1240,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2148,
                          "src": "6815:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$2130_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2119,
                        "src": "6815:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1242,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2148,
                          "src": "6840:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$2130_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2121,
                        "src": "6840:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1239,
                      "name": "PriceUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "6803:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6803:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "EmitStatement",
                  "src": "6798:59:3"
                }
              ]
            },
            "documentation": {
              "id": 1209,
              "nodeType": "StructuredDocumentation",
              "src": "6296:126:3",
              "text": " @dev Use this function to get and update the price for the collateral token\n using the Tellor Oracle."
            },
            "functionSelector": "85b4e543",
            "id": 1247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCollateralPrice",
            "nameLocation": "6436:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6457:2:3"
            },
            "returnParameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6469:0:3"
            },
            "scope": 1956,
            "src": "6427:437:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1285,
              "nodeType": "Block",
              "src": "7031:365:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1253,
                              "name": "REPORTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2100,
                              "src": "7070:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1254,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7085:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7085:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1252,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "7062:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7062:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1258,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "7124:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1259,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7144:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7144:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1257,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "7116:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7116:39:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7062:93:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742070726963652075706461746572206f722061646d696e",
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7169:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cee0e6d2b8318b7f5e1cc5b25d4f6478fbaad399edb0aea89a45f06da5330389",
                          "typeString": "literal_string \"not price updater or admin\""
                        },
                        "value": "not price updater or admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cee0e6d2b8318b7f5e1cc5b25d4f6478fbaad399edb0aea89a45f06da5330389",
                          "typeString": "literal_string \"not price updater or admin\""
                        }
                      ],
                      "id": 1251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7041:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7041:166:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "7041:166:3"
                },
                {
                  "expression": {
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 1266,
                            "name": "debt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2145,
                            "src": "7220:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$2130_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2121,
                          "src": "7220:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1269,
                            "name": "debt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2145,
                            "src": "7232:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$2130_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "lastUpdatedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2129,
                          "src": "7232:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1271,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7217:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1273,
                            "name": "debt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2145,
                            "src": "7283:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$2130_storage",
                              "typeString": "struct BankStorage.Token storage ref"
                            }
                          },
                          "id": 1274,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tellorRequestId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2125,
                          "src": "7283:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1272,
                        "name": "getCurrentValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1887,
                        "src": "7254:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 1275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7254:59:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "7217:96:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "7217:96:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1279,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2145,
                          "src": "7359:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$2130_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 1280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2119,
                        "src": "7359:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1281,
                          "name": "debt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2145,
                          "src": "7378:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$2130_storage",
                            "typeString": "struct BankStorage.Token storage ref"
                          }
                        },
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2121,
                        "src": "7378:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1278,
                      "name": "PriceUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "7347:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7347:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "EmitStatement",
                  "src": "7342:47:3"
                }
              ]
            },
            "documentation": {
              "id": 1248,
              "nodeType": "StructuredDocumentation",
              "src": "6870:120:3",
              "text": " @dev Use this function to get and update the price for the debt token\n using the Tellor Oracle."
            },
            "functionSelector": "45fd80e4",
            "id": 1286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateDebtPrice",
            "nameLocation": "7004:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7019:2:3"
            },
            "returnParameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7031:0:3"
            },
            "scope": 1956,
            "src": "6995:401:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1410,
              "nodeType": "Block",
              "src": "7769:1315:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1294,
                              "name": "KEEPER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2095,
                              "src": "7808:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1295,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7821:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7821:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1293,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "7800:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7800:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1299,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "7860:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1300,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7880:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7880:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1298,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "7852:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7852:39:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7800:91:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206b6565706572206f722061646d696e",
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7905:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_333662fb0e622d795112bdaf9a79bb6b33524f61c4e2bb5a4f67658d5f7ffc28",
                          "typeString": "literal_string \"not keeper or admin\""
                        },
                        "value": "not keeper or admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_333662fb0e622d795112bdaf9a79bb6b33524f61c4e2bb5a4f67658d5f7ffc28",
                          "typeString": "literal_string \"not keeper or admin\""
                        }
                      ],
                      "id": 1292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7779:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7779:157:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1306,
                  "nodeType": "ExpressionStatement",
                  "src": "7779:157:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1309,
                              "name": "vaultOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1289,
                              "src": "8040:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1308,
                            "name": "getVaultCollateralizationRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2431,
                            "src": "8009:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8009:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1311,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "8070:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 1312,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateralizationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2110,
                            "src": "8070:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8103:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "8070:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8009:97:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5641554c54204e4f5420554e444552434f4c4c41544552414c495a4544",
                        "id": 1316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8120:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d36ddf16622c100f22040facbb6e2be29a7e8ef1feaaef6d4e5c9fa8c585649",
                          "typeString": "literal_string \"VAULT NOT UNDERCOLLATERALIZED\""
                        },
                        "value": "VAULT NOT UNDERCOLLATERALIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d36ddf16622c100f22040facbb6e2be29a7e8ef1feaaef6d4e5c9fa8c585649",
                          "typeString": "literal_string \"VAULT NOT UNDERCOLLATERALIZED\""
                        }
                      ],
                      "id": 1307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7988:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7988:173:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1318,
                  "nodeType": "ExpressionStatement",
                  "src": "7988:173:3"
                },
                {
                  "assignments": [
                    1320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1320,
                      "mutability": "mutable",
                      "name": "debtOwned",
                      "nameLocation": "8179:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1410,
                      "src": "8171:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8171:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1341,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1321,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "8191:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1323,
                        "indexExpression": {
                          "id": 1322,
                          "name": "vaultOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1289,
                          "src": "8198:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8191:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2134,
                      "src": "8191:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1333,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1325,
                                          "name": "vaults",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2142,
                                          "src": "8237:6:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                          }
                                        },
                                        "id": 1327,
                                        "indexExpression": {
                                          "id": 1326,
                                          "name": "vaultOwner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1289,
                                          "src": "8244:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8237:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                                          "typeString": "struct BankStorage.Vault storage ref"
                                        }
                                      },
                                      "id": 1328,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "debtAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2134,
                                      "src": "8237:29:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "313030",
                                      "id": 1329,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8285:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    },
                                    "src": "8237:51:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1331,
                                      "name": "reserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2151,
                                      "src": "8307:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                                        "typeString": "struct BankStorage.Reserve storage ref"
                                      }
                                    },
                                    "id": 1332,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "liquidationPenalty",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2112,
                                    "src": "8307:26:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8237:96:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1334,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8236:98:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 1335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8353:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "8236:120:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8375:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "8236:142:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1339,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8235:144:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8191:188:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8171:208:3"
                },
                {
                  "assignments": [
                    1343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1343,
                      "mutability": "mutable",
                      "name": "collateralToLiquidate",
                      "nameLocation": "8397:21:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1410,
                      "src": "8389:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8389:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1352,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1344,
                            "name": "debtOwned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "8422:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 1345,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "8434:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1346,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2121,
                            "src": "8434:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8422:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1348,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8421:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 1349,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "8460:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1350,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2121,
                      "src": "8460:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8421:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8389:87:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1353,
                      "name": "collateralToLiquidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "8491:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1354,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "8515:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1356,
                        "indexExpression": {
                          "id": 1355,
                          "name": "vaultOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1289,
                          "src": "8522:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8515:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2132,
                      "src": "8515:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8491:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1367,
                  "nodeType": "IfStatement",
                  "src": "8487:149:3",
                  "trueBody": {
                    "id": 1366,
                    "nodeType": "Block",
                    "src": "8552:84:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1359,
                            "name": "collateralToLiquidate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "8566:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1360,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2142,
                                "src": "8590:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                  "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                }
                              },
                              "id": 1362,
                              "indexExpression": {
                                "id": 1361,
                                "name": "vaultOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1289,
                                "src": "8597:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8590:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$2137_storage",
                                "typeString": "struct BankStorage.Vault storage ref"
                              }
                            },
                            "id": 1363,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateralAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2132,
                            "src": "8590:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8566:59:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1365,
                        "nodeType": "ExpressionStatement",
                        "src": "8566:59:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1369,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "8654:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1410,
                      "src": "8646:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1368,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8646:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1373,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1370,
                      "name": "collateralToLiquidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "8666:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 1371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8690:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "8666:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8646:46:3"
                },
                {
                  "expression": {
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1374,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "8735:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2102,
                      "src": "8735:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1377,
                        "name": "collateralToLiquidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "8764:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1378,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1369,
                        "src": "8788:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8764:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8735:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1381,
                  "nodeType": "ExpressionStatement",
                  "src": "8735:62:3"
                },
                {
                  "expression": {
                    "id": 1387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1382,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "8807:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1384,
                        "indexExpression": {
                          "id": 1383,
                          "name": "vaultOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1289,
                          "src": "8814:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8807:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1385,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2132,
                      "src": "8807:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1386,
                      "name": "collateralToLiquidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "8846:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8807:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1388,
                  "nodeType": "ExpressionStatement",
                  "src": "8807:60:3"
                },
                {
                  "expression": {
                    "id": 1394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1389,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "8877:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1391,
                        "indexExpression": {
                          "id": 1390,
                          "name": "vaultOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1289,
                          "src": "8884:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8877:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1392,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2134,
                      "src": "8877:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8909:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8877:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1395,
                  "nodeType": "ExpressionStatement",
                  "src": "8877:33:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1401,
                        "name": "_bankFactoryOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "8978:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1402,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1369,
                        "src": "9009:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1397,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2148,
                              "src": "8927:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1398,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "8927:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1396,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "8920:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8920:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11517,
                      "src": "8920:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8920:108:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1404,
                  "nodeType": "ExpressionStatement",
                  "src": "8920:108:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1406,
                        "name": "vaultOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "9055:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1407,
                        "name": "debtOwned",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1320,
                        "src": "9067:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1405,
                      "name": "Liquidation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 809,
                      "src": "9043:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9043:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1409,
                  "nodeType": "EmitStatement",
                  "src": "9038:39:3"
                }
              ]
            },
            "documentation": {
              "id": 1287,
              "nodeType": "StructuredDocumentation",
              "src": "7402:314:3",
              "text": " @dev Only keepers or admins can use this function to liquidate a vault's debt,\n the bank admins gets the collateral liquidated, liquidated collateral\n is charged a 10% fee which gets paid to the bankFactoryOwner\n @param vaultOwner is the user the bank admins wants to liquidate"
            },
            "functionSelector": "2f865568",
            "id": 1411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidate",
            "nameLocation": "7730:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "mutability": "mutable",
                  "name": "vaultOwner",
                  "nameLocation": "7748:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "7740:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7740:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7739:20:3"
            },
            "returnParameters": {
              "id": 1291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7769:0:3"
            },
            "scope": 1956,
            "src": "7721:1363:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1458,
              "nodeType": "Block",
              "src": "9279:343:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1418,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1414,
                          "src": "9297:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9306:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9297:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206973207a65726f202121",
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9309:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        },
                        "value": "Amount is zero !!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        }
                      ],
                      "id": 1417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9289:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9289:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1423,
                  "nodeType": "ExpressionStatement",
                  "src": "9289:40:3"
                },
                {
                  "expression": {
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1424,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "9339:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1427,
                        "indexExpression": {
                          "expression": {
                            "id": 1425,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9346:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9346:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9339:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1428,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2132,
                      "src": "9339:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1429,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1414,
                      "src": "9378:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9339:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1431,
                  "nodeType": "ExpressionStatement",
                  "src": "9339:45:3"
                },
                {
                  "expression": {
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1432,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "9394:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1434,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2102,
                      "src": "9394:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1435,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1414,
                      "src": "9423:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9394:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1437,
                  "nodeType": "ExpressionStatement",
                  "src": "9394:35:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1443,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9501:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9501:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1447,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9533:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Bank_$1956",
                              "typeString": "contract Bank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Bank_$1956",
                              "typeString": "contract Bank"
                            }
                          ],
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9525:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1445,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9525:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9525:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1449,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1414,
                        "src": "9552:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1439,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2148,
                              "src": "9446:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1440,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "9446:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1438,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "9439:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9439:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11543,
                      "src": "9439:48:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9439:129:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "9439:129:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1453,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9596:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9596:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1455,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1414,
                        "src": "9608:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1452,
                      "name": "VaultDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "9583:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9583:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1457,
                  "nodeType": "EmitStatement",
                  "src": "9578:37:3"
                }
              ]
            },
            "documentation": {
              "id": 1412,
              "nodeType": "StructuredDocumentation",
              "src": "9090:137:3",
              "text": " @dev Use this function to allow users to deposit collateral to the vault\n @param amount is the collateral amount"
            },
            "functionSelector": "5729b394",
            "id": 1459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultDeposit",
            "nameLocation": "9241:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1414,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9262:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1459,
                  "src": "9254:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9254:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9253:16:3"
            },
            "returnParameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9279:0:3"
            },
            "scope": 1956,
            "src": "9232:390:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1610,
              "nodeType": "Block",
              "src": "9801:1204:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1465,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "9815:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1468,
                        "indexExpression": {
                          "expression": {
                            "id": 1466,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9822:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9822:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9815:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1469,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2134,
                      "src": "9815:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9848:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9815:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1482,
                  "nodeType": "IfStatement",
                  "src": "9811:118:3",
                  "trueBody": {
                    "id": 1481,
                    "nodeType": "Block",
                    "src": "9851:78:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1472,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2142,
                                "src": "9865:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                  "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                }
                              },
                              "id": 1475,
                              "indexExpression": {
                                "expression": {
                                  "id": 1473,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9872:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9872:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9865:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$2137_storage",
                                "typeString": "struct BankStorage.Vault storage ref"
                              }
                            },
                            "id": 1476,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "debtAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2134,
                            "src": "9865:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1477,
                              "name": "getVaultRepayAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2382,
                              "src": "9897:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9897:21:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9865:53:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1480,
                        "nodeType": "ExpressionStatement",
                        "src": "9865:53:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "maxBorrow",
                      "nameLocation": "9946:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1610,
                      "src": "9938:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9938:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1503,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1485,
                                        "name": "vaults",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2142,
                                        "src": "9960:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                          "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                        }
                                      },
                                      "id": 1488,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 1486,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "9967:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1487,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "9967:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9960:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$2137_storage",
                                        "typeString": "struct BankStorage.Vault storage ref"
                                      }
                                    },
                                    "id": 1489,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "collateralAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2132,
                                    "src": "9960:35:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1490,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2148,
                                      "src": "10010:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$2130_storage",
                                        "typeString": "struct BankStorage.Token storage ref"
                                      }
                                    },
                                    "id": 1491,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2121,
                                    "src": "10010:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9960:66:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1493,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9959:68:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "expression": {
                                "id": 1494,
                                "name": "debt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2145,
                                "src": "10042:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$2130_storage",
                                  "typeString": "struct BankStorage.Token storage ref"
                                }
                              },
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2121,
                              "src": "10042:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9959:93:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 1497,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "10067:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 1498,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateralizationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2110,
                            "src": "10067:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9959:138:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1500,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9958:140:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10101:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "9958:146:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9938:166:3"
                },
                {
                  "expression": {
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1504,
                      "name": "maxBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "10114:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "*=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1505,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2145,
                        "src": "10127:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2123,
                      "src": "10127:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10114:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "10114:34:3"
                },
                {
                  "expression": {
                    "id": 1512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1509,
                      "name": "maxBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "10158:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1510,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "10171:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1511,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2123,
                      "src": "10171:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10158:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1513,
                  "nodeType": "ExpressionStatement",
                  "src": "10158:40:3"
                },
                {
                  "expression": {
                    "id": 1520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1514,
                      "name": "maxBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "10208:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1515,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "10221:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1518,
                        "indexExpression": {
                          "expression": {
                            "id": 1516,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10228:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10228:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10221:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1519,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2134,
                      "src": "10221:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10208:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1521,
                  "nodeType": "ExpressionStatement",
                  "src": "10208:42:3"
                },
                {
                  "expression": {
                    "id": 1537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1522,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "10260:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1525,
                        "indexExpression": {
                          "expression": {
                            "id": 1523,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10267:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10267:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10260:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1526,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2134,
                      "src": "10260:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1527,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "10305:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1528,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1462,
                                    "src": "10328:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1529,
                                      "name": "reserve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2151,
                                      "src": "10337:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                                        "typeString": "struct BankStorage.Reserve storage ref"
                                      }
                                    },
                                    "id": 1530,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "originationFee",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2108,
                                    "src": "10337:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10328:31:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1532,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10327:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10363:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "10327:41:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1535,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10326:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10305:64:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10260:109:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1538,
                  "nodeType": "ExpressionStatement",
                  "src": "10260:109:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1540,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "10400:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                              }
                            },
                            "id": 1543,
                            "indexExpression": {
                              "expression": {
                                "id": 1541,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10407:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10407:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10400:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$2137_storage",
                              "typeString": "struct BankStorage.Vault storage ref"
                            }
                          },
                          "id": 1544,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "debtAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2134,
                          "src": "10400:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1545,
                          "name": "maxBorrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1484,
                          "src": "10432:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10400:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5420454e4f55474820434f4c4c41544552414c",
                        "id": 1547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10455:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78890d606af0638f634052a7201aaa5d60427f63b560762edfabf64f943b9dec",
                          "typeString": "literal_string \"NOT ENOUGH COLLATERAL\""
                        },
                        "value": "NOT ENOUGH COLLATERAL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78890d606af0638f634052a7201aaa5d60427f63b560762edfabf64f943b9dec",
                          "typeString": "literal_string \"NOT ENOUGH COLLATERAL\""
                        }
                      ],
                      "id": 1539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10379:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10379:109:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1549,
                  "nodeType": "ExpressionStatement",
                  "src": "10379:109:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1551,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1462,
                          "src": "10519:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1559,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10573:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Bank_$1956",
                                    "typeString": "contract Bank"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Bank_$1956",
                                    "typeString": "contract Bank"
                                  }
                                ],
                                "id": 1558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10565:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1557,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10565:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10565:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1553,
                                    "name": "debt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2145,
                                    "src": "10536:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Token_$2130_storage",
                                      "typeString": "struct BankStorage.Token storage ref"
                                    }
                                  },
                                  "id": 1554,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2119,
                                  "src": "10536:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1552,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16948,
                                "src": "10529:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10529:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$16948",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16887,
                            "src": "10529:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10529:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10519:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5420454e4f554748205245534552564553",
                        "id": 1563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10593:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15ac4af35daa41823349e5a9373fbbe2c5ebc28eda0e57970a7b3df10399ec95",
                          "typeString": "literal_string \"NOT ENOUGH RESERVES\""
                        },
                        "value": "NOT ENOUGH RESERVES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15ac4af35daa41823349e5a9373fbbe2c5ebc28eda0e57970a7b3df10399ec95",
                          "typeString": "literal_string \"NOT ENOUGH RESERVES\""
                        }
                      ],
                      "id": 1550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10498:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10498:126:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "10498:126:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1566,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10638:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "10638:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1568,
                            "name": "vaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2142,
                            "src": "10656:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                              "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                            }
                          },
                          "id": 1571,
                          "indexExpression": {
                            "expression": {
                              "id": 1569,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10663:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10663:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10656:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$2137_storage",
                            "typeString": "struct BankStorage.Vault storage ref"
                          }
                        },
                        "id": 1572,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createdAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2136,
                        "src": "10656:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10638:46:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 1574,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "10687:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "period",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2116,
                      "src": "10687:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10638:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1587,
                  "nodeType": "IfStatement",
                  "src": "10634:212:3",
                  "trueBody": {
                    "id": 1586,
                    "nodeType": "Block",
                    "src": "10703:143:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1577,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2142,
                                "src": "10789:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                  "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                }
                              },
                              "id": 1580,
                              "indexExpression": {
                                "expression": {
                                  "id": 1578,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10796:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10796:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10789:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$2137_storage",
                                "typeString": "struct BankStorage.Vault storage ref"
                              }
                            },
                            "id": 1581,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "createdAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2136,
                            "src": "10789:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1582,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10820:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10820:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10789:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1585,
                        "nodeType": "ExpressionStatement",
                        "src": "10789:46:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1588,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "10855:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1590,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2104,
                      "src": "10855:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1591,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1462,
                      "src": "10878:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10855:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "10855:29:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1599,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10933:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10933:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1601,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "10945:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1595,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "10901:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1596,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "10901:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1594,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "10894:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10894:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11517,
                      "src": "10894:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10894:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1603,
                  "nodeType": "ExpressionStatement",
                  "src": "10894:58:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1605,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10979:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10979:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1607,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "10991:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1604,
                      "name": "VaultBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "10967:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10967:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1609,
                  "nodeType": "EmitStatement",
                  "src": "10962:36:3"
                }
              ]
            },
            "documentation": {
              "id": 1460,
              "nodeType": "StructuredDocumentation",
              "src": "9628:122:3",
              "text": " @dev Use this function to allow users to borrow against their collateral\n @param amount to borrow"
            },
            "functionSelector": "4fd88951",
            "id": 1611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultBorrow",
            "nameLocation": "9764:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1462,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9784:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1611,
                  "src": "9776:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9776:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9775:16:3"
            },
            "returnParameters": {
              "id": 1464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9801:0:3"
            },
            "scope": 1956,
            "src": "9755:1250:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1708,
              "nodeType": "Block",
              "src": "11228:713:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1618,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1614,
                          "src": "11246:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11255:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11246:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206973207a65726f202121",
                        "id": 1621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11258:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        },
                        "value": "Amount is zero !!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b68b61f7e38395a74aefd01a03770f842168a10b81512348bc99d4901c75d01",
                          "typeString": "literal_string \"Amount is zero !!\""
                        }
                      ],
                      "id": 1617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11238:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11238:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1623,
                  "nodeType": "ExpressionStatement",
                  "src": "11238:40:3"
                },
                {
                  "expression": {
                    "id": 1631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1624,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "11288:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1627,
                        "indexExpression": {
                          "expression": {
                            "id": 1625,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11295:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11295:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11288:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2134,
                      "src": "11288:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1629,
                        "name": "getVaultRepayAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2382,
                        "src": "11320:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11320:21:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11288:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1632,
                  "nodeType": "ExpressionStatement",
                  "src": "11288:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1634,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1614,
                          "src": "11372:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1635,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "11382:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                              }
                            },
                            "id": 1638,
                            "indexExpression": {
                              "expression": {
                                "id": 1636,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11389:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11389:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11382:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$2137_storage",
                              "typeString": "struct BankStorage.Vault storage ref"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "debtAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2134,
                          "src": "11382:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11372:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43414e4e4f54205245504159204d4f5245205448414e204f574544",
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11425:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2cfc59baf4b2b9bb4955cb23c173c10eb7c01a8b0357bee386170368eff21f42",
                          "typeString": "literal_string \"CANNOT REPAY MORE THAN OWED\""
                        },
                        "value": "CANNOT REPAY MORE THAN OWED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2cfc59baf4b2b9bb4955cb23c173c10eb7c01a8b0357bee386170368eff21f42",
                          "typeString": "literal_string \"CANNOT REPAY MORE THAN OWED\""
                        }
                      ],
                      "id": 1633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11351:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11351:113:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1643,
                  "nodeType": "ExpressionStatement",
                  "src": "11351:113:3"
                },
                {
                  "expression": {
                    "id": 1650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1644,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "11474:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1647,
                        "indexExpression": {
                          "expression": {
                            "id": 1645,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11481:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11481:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11474:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1648,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2134,
                      "src": "11474:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1649,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1614,
                      "src": "11507:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11474:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1651,
                  "nodeType": "ExpressionStatement",
                  "src": "11474:39:3"
                },
                {
                  "expression": {
                    "id": 1656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1652,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "11523:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1654,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2104,
                      "src": "11523:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1655,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1614,
                      "src": "11546:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11523:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1657,
                  "nodeType": "ExpressionStatement",
                  "src": "11523:29:3"
                },
                {
                  "assignments": [
                    1659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1659,
                      "mutability": "mutable",
                      "name": "periodsElapsed",
                      "nameLocation": "11570:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1708,
                      "src": "11562:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1658,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11562:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1676,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1660,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11588:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11588:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 1662,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "11606:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "period",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2116,
                            "src": "11606:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11588:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1665,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11587:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1666,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2142,
                                "src": "11637:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                  "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                }
                              },
                              "id": 1669,
                              "indexExpression": {
                                "expression": {
                                  "id": 1667,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "11644:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "11644:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11637:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$2137_storage",
                                "typeString": "struct BankStorage.Vault storage ref"
                              }
                            },
                            "id": 1670,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createdAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2136,
                            "src": "11637:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 1671,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "11668:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 1672,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "period",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2116,
                            "src": "11668:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11637:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1674,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11636:47:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11587:96:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11562:121:3"
                },
                {
                  "expression": {
                    "id": 1686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1677,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "11693:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1680,
                        "indexExpression": {
                          "expression": {
                            "id": 1678,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11700:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11700:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11693:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1681,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "createdAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2136,
                      "src": "11693:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1682,
                        "name": "periodsElapsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1659,
                        "src": "11725:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "id": 1683,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2151,
                          "src": "11742:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                            "typeString": "struct BankStorage.Reserve storage ref"
                          }
                        },
                        "id": 1684,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "period",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2116,
                        "src": "11742:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11725:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11693:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1687,
                  "nodeType": "ExpressionStatement",
                  "src": "11693:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1693,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11822:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11822:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1697,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11854:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Bank_$1956",
                              "typeString": "contract Bank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Bank_$1956",
                              "typeString": "contract Bank"
                            }
                          ],
                          "id": 1696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11846:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1695,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11846:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11846:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1699,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "11873:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1689,
                              "name": "debt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "11773:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1690,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "11773:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1688,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "11766:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11766:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11543,
                      "src": "11766:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11766:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1701,
                  "nodeType": "ExpressionStatement",
                  "src": "11766:123:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1703,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11915:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11915:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1705,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "11927:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1702,
                      "name": "VaultRepay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "11904:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11904:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1707,
                  "nodeType": "EmitStatement",
                  "src": "11899:35:3"
                }
              ]
            },
            "documentation": {
              "id": 1612,
              "nodeType": "StructuredDocumentation",
              "src": "11011:167:3",
              "text": " @dev This function allows users to pay the interest and origination fee to the\n  vault before being able to withdraw\n @param amount owed"
            },
            "functionSelector": "7649b938",
            "id": 1709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultRepay",
            "nameLocation": "11192:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1614,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11211:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "11203:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11203:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11202:16:3"
            },
            "returnParameters": {
              "id": 1616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11228:0:3"
            },
            "scope": 1956,
            "src": "11183:758:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1801,
              "nodeType": "Block",
              "src": "12111:827:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1716,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1712,
                          "src": "12142:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1717,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "12152:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                              }
                            },
                            "id": 1720,
                            "indexExpression": {
                              "expression": {
                                "id": 1718,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12159:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12159:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12152:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$2137_storage",
                              "typeString": "struct BankStorage.Vault storage ref"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateralAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2132,
                          "src": "12152:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12142:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43414e4e4f54205749544844524157204d4f524520434f4c4c41544552414c",
                        "id": 1723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12201:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e2445773ad362b40b93d011b4fb26bc93ed4142109f15da07b4722e214348eb",
                          "typeString": "literal_string \"CANNOT WITHDRAW MORE COLLATERAL\""
                        },
                        "value": "CANNOT WITHDRAW MORE COLLATERAL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e2445773ad362b40b93d011b4fb26bc93ed4142109f15da07b4722e214348eb",
                          "typeString": "literal_string \"CANNOT WITHDRAW MORE COLLATERAL\""
                        }
                      ],
                      "id": 1715,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12121:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12121:123:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1725,
                  "nodeType": "ExpressionStatement",
                  "src": "12121:123:3"
                },
                {
                  "assignments": [
                    1727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1727,
                      "mutability": "mutable",
                      "name": "maxBorrowAfterWithdraw",
                      "nameLocation": "12263:22:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1801,
                      "src": "12255:30:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12255:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1749,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1738,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1734,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1728,
                                              "name": "vaults",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2142,
                                              "src": "12291:6:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                                              }
                                            },
                                            "id": 1731,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 1729,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "12298:3:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 1730,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "12298:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12291:18:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Vault_$2137_storage",
                                              "typeString": "struct BankStorage.Vault storage ref"
                                            }
                                          },
                                          "id": 1732,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "collateralAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2132,
                                          "src": "12291:48:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1733,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1712,
                                          "src": "12342:6:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12291:57:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1735,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "12290:59:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1736,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2148,
                                      "src": "12352:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Token_$2130_storage",
                                        "typeString": "struct BankStorage.Token storage ref"
                                      }
                                    },
                                    "id": 1737,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2121,
                                    "src": "12352:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12290:78:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1739,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12289:80:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "expression": {
                                "id": 1740,
                                "name": "debt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2145,
                                "src": "12384:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$2130_storage",
                                  "typeString": "struct BankStorage.Token storage ref"
                                }
                              },
                              "id": 1741,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2121,
                              "src": "12384:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12289:105:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 1743,
                              "name": "reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "12409:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                                "typeString": "struct BankStorage.Reserve storage ref"
                              }
                            },
                            "id": 1744,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateralizationRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2110,
                            "src": "12409:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12289:150:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1746,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12288:152:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12443:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "12288:158:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12255:191:3"
                },
                {
                  "expression": {
                    "id": 1753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1750,
                      "name": "maxBorrowAfterWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "12456:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "*=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1751,
                        "name": "debt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2145,
                        "src": "12482:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2123,
                      "src": "12482:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12456:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1754,
                  "nodeType": "ExpressionStatement",
                  "src": "12456:47:3"
                },
                {
                  "expression": {
                    "id": 1758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1755,
                      "name": "maxBorrowAfterWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "12513:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1756,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "12539:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$2130_storage",
                          "typeString": "struct BankStorage.Token storage ref"
                        }
                      },
                      "id": 1757,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "priceGranularity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2123,
                      "src": "12539:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12513:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1759,
                  "nodeType": "ExpressionStatement",
                  "src": "12513:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1761,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2142,
                              "src": "12597:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                                "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                              }
                            },
                            "id": 1764,
                            "indexExpression": {
                              "expression": {
                                "id": 1762,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12604:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12604:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12597:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$2137_storage",
                              "typeString": "struct BankStorage.Vault storage ref"
                            }
                          },
                          "id": 1765,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "debtAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2134,
                          "src": "12597:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1766,
                          "name": "maxBorrowAfterWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1727,
                          "src": "12630:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12597:55:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43414e4e4f5420554e444552434f4c4c41544552414c495a45205641554c54",
                        "id": 1768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12666:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dc7fc6d003308cc1673b004d726fa99539763a587396ec31db97410e33baeec",
                          "typeString": "literal_string \"CANNOT UNDERCOLLATERALIZE VAULT\""
                        },
                        "value": "CANNOT UNDERCOLLATERALIZE VAULT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dc7fc6d003308cc1673b004d726fa99539763a587396ec31db97410e33baeec",
                          "typeString": "literal_string \"CANNOT UNDERCOLLATERALIZE VAULT\""
                        }
                      ],
                      "id": 1760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12576:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12576:133:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1770,
                  "nodeType": "ExpressionStatement",
                  "src": "12576:133:3"
                },
                {
                  "expression": {
                    "id": 1777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1771,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2142,
                          "src": "12719:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$2137_storage_$",
                            "typeString": "mapping(address => struct BankStorage.Vault storage ref)"
                          }
                        },
                        "id": 1774,
                        "indexExpression": {
                          "expression": {
                            "id": 1772,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12726:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12726:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12719:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$2137_storage",
                          "typeString": "struct BankStorage.Vault storage ref"
                        }
                      },
                      "id": 1775,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2132,
                      "src": "12719:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1776,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1712,
                      "src": "12758:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12719:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1778,
                  "nodeType": "ExpressionStatement",
                  "src": "12719:45:3"
                },
                {
                  "expression": {
                    "id": 1783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1779,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "12774:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                          "typeString": "struct BankStorage.Reserve storage ref"
                        }
                      },
                      "id": 1781,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2102,
                      "src": "12774:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1782,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1712,
                      "src": "12803:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12774:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1784,
                  "nodeType": "ExpressionStatement",
                  "src": "12774:35:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1790,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12864:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12864:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1792,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "12876:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1786,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2148,
                              "src": "12826:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$2130_storage",
                                "typeString": "struct BankStorage.Token storage ref"
                              }
                            },
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2119,
                            "src": "12826:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1785,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16948,
                          "src": "12819:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$16948_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12819:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$16948",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11517,
                      "src": "12819:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$16948_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$16948_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12819:64:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1794,
                  "nodeType": "ExpressionStatement",
                  "src": "12819:64:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1796,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12912:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12912:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1798,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1712,
                        "src": "12924:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1795,
                      "name": "VaultWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 797,
                      "src": "12898:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12898:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1800,
                  "nodeType": "EmitStatement",
                  "src": "12893:38:3"
                }
              ]
            },
            "documentation": {
              "id": 1710,
              "nodeType": "StructuredDocumentation",
              "src": "11947:111:3",
              "text": " @dev Allows users to withdraw their collateral from the vault\n @param amount withdrawn"
            },
            "functionSelector": "fb839dda",
            "id": 1802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultWithdraw",
            "nameLocation": "12072:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12094:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1802,
                  "src": "12086:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12086:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12085:16:3"
            },
            "returnParameters": {
              "id": 1714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12111:0:3"
            },
            "scope": 1956,
            "src": "12063:875:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1809,
              "nodeType": "Block",
              "src": "13005:41:3",
              "statements": [
                {
                  "expression": {
                    "id": 1807,
                    "name": "_bankFactoryOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 763,
                    "src": "13022:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1806,
                  "id": 1808,
                  "nodeType": "Return",
                  "src": "13015:24:3"
                }
              ]
            },
            "functionSelector": "3149cb14",
            "id": 1810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBankFactoryOwner",
            "nameLocation": "12953:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12972:2:3"
            },
            "returnParameters": {
              "id": 1806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "12996:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12996:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12995:9:3"
            },
            "scope": 1956,
            "src": "12944:102:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1827,
              "nodeType": "Block",
              "src": "13108:124:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1816,
                          "name": "_bankFactoryOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 763,
                          "src": "13126:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1817,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13147:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13147:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13126:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4953204e4f542042414e4b20464143544f5259204f574e4552",
                        "id": 1820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13159:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6138f18a3aeca7b222fc8e69e5564df56649a041afaa9995c118dcc249d4ccd9",
                          "typeString": "literal_string \"IS NOT BANK FACTORY OWNER\""
                        },
                        "value": "IS NOT BANK FACTORY OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6138f18a3aeca7b222fc8e69e5564df56649a041afaa9995c118dcc249d4ccd9",
                          "typeString": "literal_string \"IS NOT BANK FACTORY OWNER\""
                        }
                      ],
                      "id": 1815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13118:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13118:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1822,
                  "nodeType": "ExpressionStatement",
                  "src": "13118:69:3"
                },
                {
                  "expression": {
                    "id": 1825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1823,
                      "name": "_bankFactoryOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "13197:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1824,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1812,
                      "src": "13217:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13197:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1826,
                  "nodeType": "ExpressionStatement",
                  "src": "13197:28:3"
                }
              ]
            },
            "functionSelector": "4b272d9a",
            "id": 1828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBankFactoryOwner",
            "nameLocation": "13061:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1812,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "13089:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "13081:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13081:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13080:18:3"
            },
            "returnParameters": {
              "id": 1814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13108:0:3"
            },
            "scope": 1956,
            "src": "13052:180:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1886,
              "nodeType": "Block",
              "src": "13439:413:3",
              "statements": [
                {
                  "assignments": [
                    1841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1841,
                      "mutability": "mutable",
                      "name": "oracle",
                      "nameLocation": "13457:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1886,
                      "src": "13449:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITellor_$17441",
                        "typeString": "contract ITellor"
                      },
                      "typeName": {
                        "id": 1840,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1839,
                          "name": "ITellor",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17441,
                          "src": "13449:7:3"
                        },
                        "referencedDeclaration": 17441,
                        "src": "13449:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITellor_$17441",
                          "typeString": "contract ITellor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1846,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1843,
                          "name": "reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2151,
                          "src": "13474:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Reserve_$2117_storage",
                            "typeString": "struct BankStorage.Reserve storage ref"
                          }
                        },
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "oracleContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2114,
                        "src": "13474:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1842,
                      "name": "ITellor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17441,
                      "src": "13466:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ITellor_$17441_$",
                        "typeString": "type(contract ITellor)"
                      }
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13466:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITellor_$17441",
                      "typeString": "contract ITellor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13449:48:3"
                },
                {
                  "assignments": [
                    1848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1848,
                      "mutability": "mutable",
                      "name": "_count",
                      "nameLocation": "13515:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1886,
                      "src": "13507:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1847,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13507:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1853,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1851,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "13559:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1849,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1841,
                        "src": "13524:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITellor_$17441",
                          "typeString": "contract ITellor"
                        }
                      },
                      "id": 1850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNewValueCountbyRequestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17304,
                      "src": "13524:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13524:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13507:63:3"
                },
                {
                  "assignments": [
                    1855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1855,
                      "mutability": "mutable",
                      "name": "_time",
                      "nameLocation": "13588:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1886,
                      "src": "13580:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1854,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13580:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1863,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1858,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "13648:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1859,
                          "name": "_count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1848,
                          "src": "13672:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13681:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13672:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1856,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1841,
                        "src": "13596:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITellor_$17441",
                          "typeString": "contract ITellor"
                        }
                      },
                      "id": 1857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimestampbyRequestIDandIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17396,
                      "src": "13596:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13596:96:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13580:112:3"
                },
                {
                  "assignments": [
                    1865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1865,
                      "mutability": "mutable",
                      "name": "_value",
                      "nameLocation": "13710:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1886,
                      "src": "13702:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1864,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13702:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1871,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1868,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "13739:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1869,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1855,
                        "src": "13751:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1866,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1841,
                        "src": "13719:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITellor_$17441",
                          "typeString": "contract ITellor"
                        }
                      },
                      "id": 1867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retrieveData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17434,
                      "src": "13719:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13719:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13702:55:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1872,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1865,
                      "src": "13771:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13780:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13771:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1880,
                  "nodeType": "IfStatement",
                  "src": "13767:44:3",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "74727565",
                          "id": 1875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13791:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 1876,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1865,
                          "src": "13797:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1877,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "13805:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1878,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13790:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "functionReturnParameters": 1838,
                    "id": 1879,
                    "nodeType": "Return",
                    "src": "13783:28:3"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13829:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 1882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13836:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1883,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1855,
                        "src": "13839:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1884,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "13828:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_uint256_$",
                      "typeString": "tuple(bool,int_const 0,uint256)"
                    }
                  },
                  "functionReturnParameters": 1838,
                  "id": 1885,
                  "nodeType": "Return",
                  "src": "13821:24:3"
                }
              ]
            },
            "functionSelector": "3fcad964",
            "id": 1887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentValue",
            "nameLocation": "13247:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1830,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "13271:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1887,
                  "src": "13263:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13263:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13262:20:3"
            },
            "returnParameters": {
              "id": 1838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "ifRetrieve",
                  "nameLocation": "13346:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1887,
                  "src": "13341:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13341:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "13378:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1887,
                  "src": "13370:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13370:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1837,
                  "mutability": "mutable",
                  "name": "_timestampRetrieved",
                  "nameLocation": "13405:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1887,
                  "src": "13397:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13397:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13327:107:3"
            },
            "scope": 1956,
            "src": "13238:614:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1908,
              "nodeType": "Block",
              "src": "14016:111:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1894,
                          "name": "keeper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1890,
                          "src": "14034:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14052:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14044:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1895,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14044:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14044:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14034:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f7065726174696f6e206e6f7420616c6c6f776564",
                        "id": 1900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14056:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60a0f15b3532903e39edb01f9d141c956db9da91449f57624c99b7605966d373",
                          "typeString": "literal_string \"operation not allowed\""
                        },
                        "value": "operation not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60a0f15b3532903e39edb01f9d141c956db9da91449f57624c99b7605966d373",
                          "typeString": "literal_string \"operation not allowed\""
                        }
                      ],
                      "id": 1893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14026:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14026:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1902,
                  "nodeType": "ExpressionStatement",
                  "src": "14026:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1904,
                        "name": "KEEPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2095,
                        "src": "14100:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1905,
                        "name": "keeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1890,
                        "src": "14113:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1903,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "14090:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14090:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1907,
                  "nodeType": "ExpressionStatement",
                  "src": "14090:30:3"
                }
              ]
            },
            "documentation": {
              "id": 1888,
              "nodeType": "StructuredDocumentation",
              "src": "13858:109:3",
              "text": " @dev Allows admin to add address to keeper role\n @param keeper address of new keeper"
            },
            "functionSelector": "4032b72b",
            "id": 1909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addKeeper",
            "nameLocation": "13981:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1890,
                  "mutability": "mutable",
                  "name": "keeper",
                  "nameLocation": "13999:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "13991:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13991:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13990:16:3"
            },
            "returnParameters": {
              "id": 1892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14016:0:3"
            },
            "scope": 1956,
            "src": "13972:155:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1920,
              "nodeType": "Block",
              "src": "14305:51:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1916,
                        "name": "KEEPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2095,
                        "src": "14326:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1917,
                        "name": "oldKeeper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "14339:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1915,
                      "name": "revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "14315:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14315:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1919,
                  "nodeType": "ExpressionStatement",
                  "src": "14315:34:3"
                }
              ]
            },
            "documentation": {
              "id": 1910,
              "nodeType": "StructuredDocumentation",
              "src": "14133:117:3",
              "text": " @dev Allows admin to remove address from keeper role\n @param oldKeeper address of old keeper"
            },
            "functionSelector": "494f4188",
            "id": 1921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeKeeper",
            "nameLocation": "14264:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "oldKeeper",
                  "nameLocation": "14285:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1921,
                  "src": "14277:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14277:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14276:19:3"
            },
            "returnParameters": {
              "id": 1914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14305:0:3"
            },
            "scope": 1956,
            "src": "14255:101:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1942,
              "nodeType": "Block",
              "src": "14538:115:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1928,
                          "name": "updater",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1924,
                          "src": "14556:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14575:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14567:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1929,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14567:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14567:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14556:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f7065726174696f6e206e6f7420616c6c6f776564",
                        "id": 1934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14579:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60a0f15b3532903e39edb01f9d141c956db9da91449f57624c99b7605966d373",
                          "typeString": "literal_string \"operation not allowed\""
                        },
                        "value": "operation not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60a0f15b3532903e39edb01f9d141c956db9da91449f57624c99b7605966d373",
                          "typeString": "literal_string \"operation not allowed\""
                        }
                      ],
                      "id": 1927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14548:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14548:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1936,
                  "nodeType": "ExpressionStatement",
                  "src": "14548:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1938,
                        "name": "REPORTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2100,
                        "src": "14623:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1939,
                        "name": "updater",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "14638:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1937,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "14613:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14613:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1941,
                  "nodeType": "ExpressionStatement",
                  "src": "14613:33:3"
                }
              ]
            },
            "documentation": {
              "id": 1922,
              "nodeType": "StructuredDocumentation",
              "src": "14362:124:3",
              "text": " @dev Allows admin to add address to price updater role\n @param updater address of new price updater"
            },
            "functionSelector": "dd8755f2",
            "id": 1943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addReporter",
            "nameLocation": "14500:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1924,
                  "mutability": "mutable",
                  "name": "updater",
                  "nameLocation": "14520:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "14512:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14512:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14511:17:3"
            },
            "returnParameters": {
              "id": 1926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14538:0:3"
            },
            "scope": 1956,
            "src": "14491:162:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1954,
              "nodeType": "Block",
              "src": "14849:54:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1950,
                        "name": "REPORTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2100,
                        "src": "14870:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1951,
                        "name": "oldUpdater",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "14885:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1949,
                      "name": "revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "14859:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14859:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1953,
                  "nodeType": "ExpressionStatement",
                  "src": "14859:37:3"
                }
              ]
            },
            "documentation": {
              "id": 1944,
              "nodeType": "StructuredDocumentation",
              "src": "14659:132:3",
              "text": " @dev Allows admin to remove address from price updater role\n @param oldUpdater address of old price updater"
            },
            "functionSelector": "8cdcc955",
            "id": 1955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeReporter",
            "nameLocation": "14805:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "oldUpdater",
                  "nameLocation": "14828:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1955,
                  "src": "14820:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14820:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14819:20:3"
            },
            "returnParameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14849:0:3"
            },
            "scope": 1956,
            "src": "14796:107:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1957,
        "src": "464:14441:3",
        "usedErrors": []
      }
    ],
    "src": "32:14874:3"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162002cb338038062002cb383398101604081905262000034916200005a565b601580546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b612c17806200009c6000396000f3fe608060405234801561001057600080fd5b50600436106103265760003560e01c8063685a5808116101b8578063b71d7a6e11610104578063dd8755f2116100a2578063f327e3241161007c578063f327e324146106dc578063f91614eb146106e4578063fb839dda146106ec578063fc2e39a6146106ff57600080fd5b8063dd8755f2146106a3578063ec5e5e7d146106b6578063f2fde38b146106c957600080fd5b8063ca15c873116100de578063ca15c87314610664578063cb765c1d14610677578063d267974c1461067f578063d547741f1461069057600080fd5b8063b71d7a6e14610641578063c14d045414610649578063c969ac061461065c57600080fd5b80638cdcc9551161017157806391d148541161014b57806391d14854146105c8578063a217fddf146105db578063a622ee7c146105e3578063a860988c1461062c57600080fd5b80638cdcc955146105915780638da5cb5b146105a45780639010d07c146105b557600080fd5b8063685a5808146105325780636d483fe61461054a57806370c12f1e1461055b5780637649b9381461056e57806385b4e5431461058157806386ef57381461058957600080fd5b806336568abe1161027757806345fd80e4116102305780634fd889511161020a5780634fd88951146104fc5780635257b5661461050f57806353388f44146105175780635729b3941461051f57600080fd5b806345fd80e4146104ce578063494f4188146104d65780634b272d9a146104e957600080fd5b806336568abe1461043d57806338507ff5146104505780633f60d799146104635780633fcad964146104785780634032b72b146104a8578063435726c4146104bb57600080fd5b80631e522b29116102e45780632f865568116102be5780632f865568146103e85780633149cb14146103fb578063317c9e4214610420578063364bc15a1461042857600080fd5b80631e522b29146103aa578063248a9ca3146103b25780632f2ff15d146103d557600080fd5b806291a4461461032b57806301ffc9a71461034057806308dcd7c614610368578063151439501461037a57806317d7de7c146103825780631b9084b414610397575b600080fd5b61033e61033936600461270e565b610707565b005b61035361034e366004612727565b6107a4565b60405190151581526020015b60405180910390f35b6005545b60405190815260200161035f565b600a5461036c565b61038a6107cf565b60405161035f919061277d565b61036c6103a53660046127d0565b610861565b60145461036c565b61036c6103c036600461270e565b60009081526018602052604090206001015490565b61033e6103e33660046127ed565b61090d565b61033e6103f63660046127d0565b610937565b604d546001600160a01b03165b6040516001600160a01b03909116815260200161035f565b600b5461036c565b61036c600080516020612bc283398151915281565b61033e61044b3660046127ed565b610bb1565b61033e61045e36600461281d565b610c2f565b61036c600080516020612ba283398151915281565b61048b61048636600461270e565b610cc5565b60408051931515845260208401929092529082015260600161035f565b61033e6104b63660046127d0565b610e61565b61033e6104c936600461270e565b610eca565b61033e610fd0565b61033e6104e43660046127d0565b61109d565b61033e6104f73660046127d0565b6110b5565b61033e61050a36600461270e565b611131565b60115461036c565b600e5461036c565b61033e61052d36600461270e565b6113ec565b3360009081526002602052604090206001015461036c565b6009546001600160a01b0316610408565b61033e61056936600461286e565b61149a565b61033e61057c36600461270e565b6115c8565b61033e61174e565b60135461036c565b61033e61059f3660046127d0565b611815565b6000546001600160a01b0316610408565b6104086105c3366004612984565b61182d565b6103536105d63660046127ed565b61184c565b61036c600081565b6106116105f13660046127d0565b600260208190526000918252604090912080546001820154919092015483565b6040805193845260208401929092529082015260600161035f565b3360009081526002602052604090205461036c565b61036c611877565b61033e61065736600461281d565b611920565b60045461036c565b61036c61067236600461270e565b6119b6565b60105461036c565b6003546001600160a01b0316610408565b61033e61069e3660046127ed565b6119cd565b61033e6106b13660046127d0565b6119f2565b61033e6106c436600461270e565b611a58565b61033e6106d73660046127d0565b611bd6565b60085461036c565b600f5461036c565b61033e6106fa36600461270e565b611c41565b60125461036c565b600061071281611dfe565b6000821161073b5760405162461bcd60e51b8152600401610732906129a6565b60405180910390fd5b81600f600101600082825461075091906129e7565b909155505060035461076d906001600160a01b0316333085611e08565b6040518281527f71eb3e5df75ef293b81b4c7b38db51f7a6cec007d12529cb74d4eafb7fa532229060200160405180910390a15050565b60006001600160e01b03198216635a05180f60e01b14806107c957506107c982611e79565b92915050565b6060600180546107de906129ff565b80601f016020809104026020016040519081016040528092919081815260200182805461080a906129ff565b80156108575780601f1061082c57610100808354040283529160200191610857565b820191906000526020600020905b81548152906001019060200180831161083a57829003601f168201915b5050505050905090565b6001600160a01b03811660009081526002602052604081206001015461088957506000919050565b6005546004546001600160a01b0384166000908152600260205260409020600101546108b59190612a3a565b6108bf9190612a59565b600b54600a546001600160a01b0385166000908152600260205260409020546108e89190612a3a565b6108f29190612a59565b6108fe90612710612a3a565b6107c99190612a59565b919050565b60008281526018602052604090206001015461092881611dfe565b6109328383611f0b565b505050565b61094f600080516020612bc28339815191523361184c565b80610960575061096060003361184c565b6109a25760405162461bcd60e51b81526020600482015260136024820152723737ba1035b2b2b832b91037b91030b236b4b760691b6044820152606401610732565b6013546109b0906064612a3a565b6109b982610861565b10610a065760405162461bcd60e51b815260206004820152601d60248201527f5641554c54204e4f5420554e444552434f4c4c41544552414c495a45440000006044820152606401610732565b6014546001600160a01b0382166000908152600260205260408120600101549091606491829190610a379083612a3a565b610a419190612a3a565b610a4b9190612a59565b610a559190612a59565b6001600160a01b038316600090815260026020526040902060010154610a7b91906129e7565b600a54600454919250600091610a919084612a3a565b610a9b9190612a59565b6001600160a01b038416600090815260026020526040902054909150811115610ad957506001600160a01b0382166000908152600260205260409020545b6000610ae6600a83612a59565b9050610af28183612a7b565b600f8054600090610b049084906129e7565b90915550506001600160a01b03841660009081526002602052604081208054849290610b31908490612a7b565b90915550506001600160a01b03808516600090815260026020526040812060010155604d54600954610b6892908116911683611f2d565b836001600160a01b03167f6dd29d11f8d1bcdbd79da21bf92895417dcc2f8886b3db11c8a4ce00b73de9d084604051610ba391815260200190565b60405180910390a250505050565b6001600160a01b0381163314610c215760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610732565b610c2b8282611f5d565b5050565b6000610c3a81611dfe565b6009546001600160a01b0316158015610c5b57506001600160a01b03851615155b610c925760405162461bcd60e51b81526020600482015260086024820152672173657461626c6560c01b6044820152606401610732565b50600980546001600160a01b0319166001600160a01b039590951694909417909355600a92909255600b91909155600c55565b6015546040516311bbb87160e21b815260048101839052600091829182916001600160a01b031690829082906346eee1c490602401602060405180830381865afa158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190612a92565b905060006001600160a01b0383166377fbb66388610d5a600186612a7b565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015610d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbf9190612a92565b6040516393fa491560e01b815260048101899052602481018290529091506000906001600160a01b038516906393fa491590604401602060405180830381865afa158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e359190612a92565b90508015610e4d576001965094509250610e5a915050565b5060009550859450925050505b9193909250565b6001600160a01b038116610eaf5760405162461bcd60e51b81526020600482015260156024820152741bdc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b6044820152606401610732565b610ec7600080516020612bc28339815191528261090d565b50565b6000610ed581611dfe565b600f54821115610f275760405162461bcd60e51b815260206004820181905260248201527f4e4f5420454e4f55474820434f4c4c41544552414c20494e20524553455256456044820152606401610732565b6000610f3460c884612a59565b905082600f6000016000828254610f4b9190612a7b565b90915550506009546040518481526001600160a01b03909116907f0529afc4538720fe0b3eadc40486369ab962002d72fead1387b300c66073e7bf9060200160405180910390a2610fb333610fa08386612a7b565b6009546001600160a01b03169190611f2d565b604d54600954610932916001600160a01b03918216911683611f2d565b610fe8600080516020612ba28339815191523361184c565b80610ff95750610ff960003361184c565b6110455760405162461bcd60e51b815260206004820152601a60248201527f6e6f742070726963652075706461746572206f722061646d696e0000000000006044820152606401610732565b60065461105190610cc5565b60085560048190556003546040519182526001600160a01b031691507f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c906020015b60405180910390a2565b610ec7600080516020612bc2833981519152826119cd565b604d546001600160a01b0316331461110f5760405162461bcd60e51b815260206004820152601960248201527f4953204e4f542042414e4b20464143544f5259204f574e4552000000000000006044820152606401610732565b604d80546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600260205260409020600101541561116557611151611877565b336000908152600260205260409020600101555b601354600454600a54336000908152600260205260408120549093929161118b91612a3a565b6111959190612a59565b61119f9190612a59565b6111aa906064612a3a565b6005549091506111ba9082612a3a565b600b549091506111ca9082612a59565b336000908152600260205260409020600101549091506111ea9082612a7b565b601254909150612710906111fe9084612a3a565b6112089190612a59565b61121290836129e7565b33600090815260026020526040812060010180549091906112349084906129e7565b90915550503360009081526002602052604090206001015481116112925760405162461bcd60e51b81526020600482015260156024820152741393d508115393d551d20810d3d313105511549053605a1b6044820152606401610732565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fe9190612a92565b8211156113435760405162461bcd60e51b81526020600482015260136024820152724e4f5420454e4f55474820524553455256455360681b6044820152606401610732565b60165433600090815260026020819052604090912001546113649042612a7b565b111561138157336000908152600260208190526040909120429101555b81600f60010160008282546113969190612a7b565b90915550506003546113b2906001600160a01b03163384611f2d565b60405182815233907f0232862a021d33ea4a70f5d509b754f0f6986aaa0ffdd5c7db4910422afc768a906020015b60405180910390a25050565b6000811161140c5760405162461bcd60e51b8152600401610732906129a6565b336000908152600260205260408120805483929061142b9084906129e7565b9091555050600f80548291906000906114459084906129e7565b9091555050600954611462906001600160a01b0316333084611e08565b60405181815233907f89d28cf06bdb2ee1b92cd046d58450042ad113e9f4cdabfc4d43e7c5557758d79060200160405180910390a250565b601a54610100900460ff16806114af5750303b155b806114bd5750601a5460ff16155b6115205760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610732565b601a54610100900460ff1615801561154257601a805461ffff19166101011790555b61154d60008b611f7f565b601188905560128790556013869055601580546001600160a01b038085166001600160a01b03199283161790925560148790556016869055604d80549286169290911691909117905588516115a99060019060208c0190612675565b5080156115bc57601a805461ff00191690555b50505050505050505050565b600081116115e85760405162461bcd60e51b8152600401610732906129a6565b6115f0611877565b3360009081526002602052604090206001018190558111156116545760405162461bcd60e51b815260206004820152601b60248201527f43414e4e4f54205245504159204d4f5245205448414e204f57454400000000006044820152606401610732565b3360009081526002602052604081206001018054839290611676908490612a7b565b9091555050601080548291906000906116909084906129e7565b90915550506016543360009081526002602081905260408220015490916116b691612a59565b6016546116c39042612a59565b6116cd9190612a7b565b6016549091506116dd9082612a3a565b33600090815260026020819052604082200180549091906116ff9084906129e7565b909155505060035461171c906001600160a01b0316333085611e08565b60405182815233907f34d657cd4dec79d6716ce5ac15b81de5751705030cbef01b43b15eae44cbc112906020016113e0565b611766600080516020612ba28339815191523361184c565b80611777575061177760003361184c565b6117c35760405162461bcd60e51b815260206004820152601a60248201527f6e6f742070726963652075706461746572206f722061646d696e0000000000006044820152606401610732565b600c546117cf90610cc5565b600e55600a8190556009546040519182526001600160a01b031691507f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c90602001611093565b610ec7600080516020612ba2833981519152826119cd565b60008281526019602052604081206118459083611f89565b9392505050565b60009182526018602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3360009081526002602052604081206001015460165490919061189e906301e13380612a59565b60165433600090815260026020819052604082200154929350916118c29190612a59565b6016546118cf9042612a59565b6118d99190612a7b565b90508082612710600f60020154866118f19190612a3a565b6118fb9190612a59565b6119059190612a59565b61190f9190612a3a565b61191990846129e7565b9250505090565b600061192b81611dfe565b6003546001600160a01b031615801561194c57506001600160a01b03851615155b6119835760405162461bcd60e51b81526020600482015260086024820152672173657461626c6560c01b6044820152606401610732565b50600380546001600160a01b0319166001600160a01b039590951694909417909355600492909255600591909155600655565b60008181526019602052604081206107c990611f95565b6000828152601860205260409020600101546119e881611dfe565b6109328383611f5d565b6001600160a01b038116611a405760405162461bcd60e51b81526020600482015260156024820152741bdc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b6044820152606401610732565b610ec7600080516020612ba28339815191528261090d565b6000611a6381611dfe565b6003546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015611aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acf9190612a92565b1015611b275760405162461bcd60e51b815260206004820152602160248201527f4e4f5420454e4f554748204445425420544f4b454e5320494e205245534552566044820152604560f81b6064820152608401610732565b6000611b3460c884612a59565b905082600f6001016000828254611b4b9190612a7b565b90915550611b72905033611b5f8386612a7b565b6003546001600160a01b03169190611f2d565b604d54600354611b8f916001600160a01b03918216911683611f2d565b6003546040518481526001600160a01b03909116907f0529afc4538720fe0b3eadc40486369ab962002d72fead1387b300c66073e7bf9060200160405180910390a2505050565b6000546001600160a01b03163314611c1f5760405162461bcd60e51b815260206004820152600c60248201526b24a9902727aa1027aba722a960a11b6044820152606401610732565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260026020526040902054811115611ca05760405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f54205749544844524157204d4f524520434f4c4c41544552414c006044820152606401610732565b601354600454600a54336000908152600260205260408120549093929190611cc9908690612a7b565b611cd39190612a3a565b611cdd9190612a59565b611ce79190612a59565b611cf2906064612a3a565b600554909150611d029082612a3a565b600b54909150611d129082612a59565b33600090815260026020526040902060010154909150811015611d775760405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f5420554e444552434f4c4c41544552414c495a45205641554c54006044820152606401610732565b3360009081526002602052604081208054849290611d96908490612a7b565b9091555050600f8054839190600090611db0908490612a7b565b9091555050600954611dcc906001600160a01b03163384611f2d565b60405182815233907f0ac60fbf53b67f5a6a0c8031dd9d1610a06f01669b1a8b9af98f3a6a477e8d7c906020016113e0565b610ec78133611f9f565b6040516001600160a01b0380851660248301528316604482015260648101829052611e739085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612003565b50505050565b60006001600160e01b03198216637965db0b60e01b14806107c957506017546040516301ffc9a760e01b81526001600160e01b0319841660048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa158015611ee7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190612aab565b611f1582826120d5565b6000828152601960205260409020610932908261215b565b6040516001600160a01b03831660248201526044810182905261093290849063a9059cbb60e01b90606401611e3c565b611f678282612170565b600082815260196020526040902061093290826121d7565b610c2b8282611f0b565b600061184583836121ec565b60006107c9825490565b611fa9828261184c565b610c2b57611fc1816001600160a01b03166014612216565b611fcc836020612216565b604051602001611fdd929190612acd565b60408051601f198184030181529082905262461bcd60e51b82526107329160040161277d565b6000612058826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123b29092919063ffffffff16565b80519091501561093257808060200190518101906120769190612aab565b6109325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610732565b6120df828261184c565b610c2b5760008281526018602090815260408083206001600160a01b03851684529091529020805460ff191660011790556121173390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611845836001600160a01b0384166123c9565b61217a828261184c565b15610c2b5760008281526018602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611845836001600160a01b038416612418565b600082600001828154811061220357612203612b42565b9060005260206000200154905092915050565b60606000612225836002612a3a565b6122309060026129e7565b67ffffffffffffffff81111561224857612248612858565b6040519080825280601f01601f191660200182016040528015612272576020820181803683370190505b509050600360fc1b8160008151811061228d5761228d612b42565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106122bc576122bc612b42565b60200101906001600160f81b031916908160001a90535060006122e0846002612a3a565b6122eb9060016129e7565b90505b6001811115612363576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061231f5761231f612b42565b1a60f81b82828151811061233557612335612b42565b60200101906001600160f81b031916908160001a90535060049490941c9361235c81612b58565b90506122ee565b5083156118455760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610732565b60606123c1848460008561250b565b949350505050565b6000818152600183016020526040812054612410575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107c9565b5060006107c9565b6000818152600183016020526040812054801561250157600061243c600183612a7b565b855490915060009061245090600190612a7b565b90508181146124b557600086600001828154811061247057612470612b42565b906000526020600020015490508087600001848154811061249357612493612b42565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806124c6576124c6612b6f565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107c9565b60009150506107c9565b60608247101561256c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610732565b6001600160a01b0385163b6125c35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610732565b600080866001600160a01b031685876040516125df9190612b85565b60006040518083038185875af1925050503d806000811461261c576040519150601f19603f3d011682016040523d82523d6000602084013e612621565b606091505b509150915061263182828661263c565b979650505050505050565b6060831561264b575081611845565b82511561265b5782518084602001fd5b8160405162461bcd60e51b8152600401610732919061277d565b828054612681906129ff565b90600052602060002090601f0160209004810192826126a357600085556126e9565b82601f106126bc57805160ff19168380011785556126e9565b828001600101855582156126e9579182015b828111156126e95782518255916020019190600101906126ce565b506126f59291506126f9565b5090565b5b808211156126f557600081556001016126fa565b60006020828403121561272057600080fd5b5035919050565b60006020828403121561273957600080fd5b81356001600160e01b03198116811461184557600080fd5b60005b8381101561276c578181015183820152602001612754565b83811115611e735750506000910152565b602081526000825180602084015261279c816040850160208701612751565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610ec757600080fd5b8035610908816127b0565b6000602082840312156127e257600080fd5b8135611845816127b0565b6000806040838503121561280057600080fd5b823591506020830135612812816127b0565b809150509250929050565b6000806000806080858703121561283357600080fd5b843561283e816127b0565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060008060006101208a8c03121561288d57600080fd5b8935612898816127b0565b985060208a013567ffffffffffffffff808211156128b557600080fd5b818c0191508c601f8301126128c957600080fd5b8135818111156128db576128db612858565b604051601f8201601f19908116603f0116810190838211818310171561290357612903612858565b816040528281528f602084870101111561291c57600080fd5b82602086016020830137600060208483010152809c50505050505060408a0135965060608a0135955060808a0135945060a08a0135935060c08a0135925061296660e08b016127c5565b91506129756101008b016127c5565b90509295985092959850929598565b6000806040838503121561299757600080fd5b50508035926020909101359150565b602080825260119082015270416d6f756e74206973207a65726f20212160781b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156129fa576129fa6129d1565b500190565b600181811c90821680612a1357607f821691505b60208210811415612a3457634e487b7160e01b600052602260045260246000fd5b50919050565b6000816000190483118215151615612a5457612a546129d1565b500290565b600082612a7657634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612a8d57612a8d6129d1565b500390565b600060208284031215612aa457600080fd5b5051919050565b600060208284031215612abd57600080fd5b8151801515811461184557600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612b05816017850160208801612751565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612b36816028840160208801612751565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b600081612b6757612b676129d1565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251612b97818460208701612751565b919091019291505056fe3204c940063673962b481a0395619b3dbbd137589c419e993978c1c71bcf68ecfc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4faba2646970667358221220f9cd8c4539ba932717cc38ecfc72370a208ae591330c39e46dfb320304dcdba964736f6c634300080b0033",
  "bytecodeSha1": "67a271b07e7c4bd8015cee9ddc48c04f14802f13",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Bank",
  "coverageMap": {
    "branches": {
      "0": {
        "AccessControl._checkRole": {
          "175": [
            3809,
            3831,
            false
          ]
        },
        "AccessControl._grantRole": {
          "176": [
            7330,
            7352,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "177": [
            7688,
            7710,
            false
          ]
        },
        "AccessControl.renounceRole": {
          "174": [
            5885,
            5908,
            true
          ]
        }
      },
      "1": {},
      "19": {
        "Bank.init": {
          "181": [
            1048,
            1060,
            true
          ]
        },
        "Initializable.isConstructor": {
          "182": [
            1084,
            1095,
            true
          ]
        }
      },
      "2": {
        "Address.functionCallWithValue": {
          "178": [
            5130,
            5160,
            true
          ]
        },
        "Address.verifyCallResult": {
          "179": [
            7720,
            7727,
            false
          ],
          "180": [
            7861,
            7882,
            false
          ]
        }
      },
      "3": {
        "Bank.addKeeper": {
          "154": [
            14034,
            14054,
            true
          ]
        },
        "Bank.addReporter": {
          "170": [
            14556,
            14577,
            true
          ]
        },
        "Bank.getCurrentValue": {
          "153": [
            13771,
            13781,
            false
          ]
        },
        "Bank.liquidate": {
          "147": [
            7800,
            7832,
            true
          ],
          "148": [
            7852,
            7891,
            true
          ],
          "149": [
            8009,
            8106,
            true
          ],
          "150": [
            8491,
            8550,
            false
          ]
        },
        "Bank.reserveDeposit": {
          "146": [
            4375,
            4385,
            true
          ]
        },
        "Bank.reserveWithdraw": {
          "171": [
            4976,
            5036,
            true
          ]
        },
        "Bank.reserveWithdrawCollateral": {
          "155": [
            5768,
            5803,
            true
          ]
        },
        "Bank.setBankFactoryOwner": {
          "158": [
            13126,
            13157,
            true
          ]
        },
        "Bank.setCollateral": {
          "151": [
            3111,
            3148,
            false
          ],
          "152": [
            3168,
            3197,
            true
          ]
        },
        "Bank.setDebt": {
          "168": [
            3815,
            3846,
            false
          ],
          "169": [
            3850,
            3873,
            true
          ]
        },
        "Bank.updateCollateralPrice": {
          "166": [
            6500,
            6534,
            true
          ],
          "167": [
            6554,
            6593,
            true
          ]
        },
        "Bank.updateDebtPrice": {
          "156": [
            7062,
            7096,
            true
          ],
          "157": [
            7116,
            7155,
            true
          ]
        },
        "Bank.vaultBorrow": {
          "159": [
            9815,
            9849,
            false
          ],
          "160": [
            10400,
            10441,
            true
          ],
          "161": [
            10519,
            10579,
            true
          ],
          "162": [
            10638,
            10701,
            false
          ]
        },
        "Bank.vaultDeposit": {
          "163": [
            9297,
            9307,
            true
          ]
        },
        "Bank.vaultRepay": {
          "164": [
            11246,
            11256,
            true
          ],
          "165": [
            11372,
            11411,
            true
          ]
        },
        "Bank.vaultWithdraw": {
          "172": [
            12142,
            12187,
            true
          ],
          "173": [
            12597,
            12652,
            true
          ]
        }
      },
      "30": {
        "SafeERC20._callOptionalReturn": {
          "183": [
            3733,
            3754,
            false
          ],
          "184": [
            3817,
            3847,
            true
          ]
        }
      },
      "44": {},
      "45": {},
      "47": {},
      "49": {},
      "5": {},
      "64": {},
      "8": {}
    },
    "statements": {
      "0": {
        "AccessControl._checkRole": {
          "124": [
            3403,
            3433
          ],
          "133": [
            3847,
            4196
          ]
        },
        "AccessControl._grantRole": {
          "135": [
            7368,
            7404
          ],
          "136": [
            7418,
            7463
          ]
        },
        "AccessControl._revokeRole": {
          "137": [
            7726,
            7763
          ],
          "138": [
            7777,
            7822
          ]
        },
        "AccessControl._setupRole": {
          "132": [
            6721,
            6746
          ]
        },
        "AccessControl.getRoleAdmin": {
          "3": [
            4487,
            4516
          ]
        },
        "AccessControl.grantRole": {
          "27": [
            4886,
            4911
          ]
        },
        "AccessControl.hasRole": {
          "98": [
            3000,
            3036
          ]
        },
        "AccessControl.renounceRole": {
          "36": [
            5877,
            5960
          ],
          "38": [
            5971,
            5997
          ]
        },
        "AccessControl.revokeRole": {
          "107": [
            5266,
            5292
          ]
        },
        "AccessControl.supportsInterface": {
          "126": [
            2700,
            2804
          ]
        }
      },
      "1": {
        "AccessControlEnumerable._grantRole": {
          "127": [
            2047,
            2078
          ],
          "128": [
            2088,
            2119
          ]
        },
        "AccessControlEnumerable._revokeRole": {
          "130": [
            2303,
            2335
          ],
          "131": [
            2345,
            2379
          ]
        },
        "AccessControlEnumerable.getRoleMember": {
          "97": [
            1522,
            1557
          ]
        },
        "AccessControlEnumerable.getRoleMemberCount": {
          "106": [
            1831,
            1865
          ]
        },
        "AccessControlEnumerable.supportsInterface": {
          "23": [
            717,
            821
          ]
        }
      },
      "19": {
        "Initializable.isConstructor": {
          "75": [
            1912,
            1926
          ]
        }
      },
      "2": {
        "Address.functionCall": {
          "139": [
            4003,
            4062
          ]
        },
        "Address.functionCallWithValue": {
          "140": [
            5122,
            5203
          ],
          "142": [
            5213,
            5273
          ],
          "143": [
            5367,
            5425
          ]
        },
        "Address.isContract": {
          "141": [
            1443,
            1473
          ]
        },
        "Address.verifyCallResult": {
          "144": [
            7743,
            7760
          ],
          "145": [
            8187,
            8207
          ]
        }
      },
      "3": {
        "Bank.addKeeper": {
          "46": [
            14026,
            14080
          ],
          "47": [
            14090,
            14120
          ]
        },
        "Bank.addReporter": {
          "108": [
            14548,
            14603
          ],
          "109": [
            14613,
            14646
          ]
        },
        "Bank.getBankFactoryOwner": {
          "4": [
            13015,
            13039
          ]
        },
        "Bank.getCurrentValue": {
          "44": [
            13783,
            13811
          ],
          "45": [
            13821,
            13845
          ]
        },
        "Bank.init": {
          "76": [
            2323,
            2362
          ],
          "77": [
            2372,
            2407
          ],
          "78": [
            2417,
            2456
          ],
          "79": [
            2466,
            2521
          ],
          "80": [
            2531,
            2570
          ],
          "81": [
            2580,
            2627
          ],
          "82": [
            2637,
            2660
          ],
          "83": [
            2670,
            2706
          ],
          "84": [
            2716,
            2731
          ]
        },
        "Bank.liquidate": {
          "28": [
            7779,
            7936
          ],
          "29": [
            7988,
            8161
          ],
          "30": [
            8566,
            8625
          ],
          "31": [
            8735,
            8797
          ],
          "32": [
            8807,
            8867
          ],
          "33": [
            8877,
            8910
          ],
          "34": [
            8920,
            9028
          ],
          "35": [
            9038,
            9077
          ]
        },
        "Bank.owner": {
          "11": [
            1502,
            1515
          ]
        },
        "Bank.reserveDeposit": {
          "19": [
            4367,
            4407
          ],
          "20": [
            4417,
            4446
          ],
          "21": [
            4456,
            4579
          ],
          "22": [
            4589,
            4616
          ]
        },
        "Bank.reserveWithdraw": {
          "110": [
            4955,
            5095
          ],
          "111": [
            5181,
            5210
          ],
          "112": [
            5220,
            5290
          ],
          "113": [
            5300,
            5368
          ],
          "114": [
            5378,
            5425
          ]
        },
        "Bank.reserveWithdrawCollateral": {
          "48": [
            5747,
            5861
          ],
          "49": [
            5947,
            5982
          ],
          "50": [
            5992,
            6045
          ],
          "51": [
            6055,
            6165
          ],
          "52": [
            6175,
            6283
          ]
        },
        "Bank.revokeKeeper": {
          "56": [
            14315,
            14349
          ]
        },
        "Bank.revokeReporter": {
          "96": [
            14859,
            14896
          ]
        },
        "Bank.setBankFactoryOwner": {
          "57": [
            13118,
            13187
          ],
          "58": [
            13197,
            13225
          ]
        },
        "Bank.setCollateral": {
          "39": [
            3090,
            3231
          ],
          "40": [
            3241,
            3282
          ],
          "41": [
            3292,
            3331
          ],
          "42": [
            3341,
            3402
          ],
          "43": [
            3412,
            3471
          ]
        },
        "Bank.setDebt": {
          "101": [
            3794,
            3907
          ],
          "102": [
            3917,
            3946
          ],
          "103": [
            3956,
            3983
          ],
          "104": [
            3993,
            4042
          ],
          "105": [
            4052,
            4099
          ]
        },
        "Bank.transferOwnership": {
          "115": [
            1790,
            1807
          ]
        },
        "Bank.updateCollateralPrice": {
          "93": [
            6479,
            6645
          ],
          "94": [
            6655,
            6769
          ],
          "95": [
            6798,
            6857
          ]
        },
        "Bank.updateDebtPrice": {
          "53": [
            7041,
            7207
          ],
          "54": [
            7217,
            7313
          ],
          "55": [
            7342,
            7389
          ]
        },
        "Bank.vaultBorrow": {
          "59": [
            9865,
            9918
          ],
          "60": [
            10114,
            10148
          ],
          "61": [
            10158,
            10198
          ],
          "62": [
            10208,
            10250
          ],
          "63": [
            10260,
            10369
          ],
          "64": [
            10379,
            10488
          ],
          "65": [
            10498,
            10624
          ],
          "66": [
            10789,
            10835
          ],
          "67": [
            10855,
            10884
          ],
          "68": [
            10894,
            10952
          ],
          "69": [
            10962,
            10998
          ]
        },
        "Bank.vaultDeposit": {
          "70": [
            9289,
            9329
          ],
          "71": [
            9339,
            9384
          ],
          "72": [
            9394,
            9429
          ],
          "73": [
            9439,
            9568
          ],
          "74": [
            9578,
            9615
          ]
        },
        "Bank.vaultRepay": {
          "85": [
            11238,
            11278
          ],
          "86": [
            11288,
            11341
          ],
          "87": [
            11351,
            11464
          ],
          "88": [
            11474,
            11513
          ],
          "89": [
            11523,
            11552
          ],
          "90": [
            11693,
            11756
          ],
          "91": [
            11766,
            11889
          ],
          "92": [
            11899,
            11934
          ]
        },
        "Bank.vaultWithdraw": {
          "116": [
            12121,
            12244
          ],
          "117": [
            12456,
            12503
          ],
          "118": [
            12513,
            12566
          ],
          "119": [
            12576,
            12709
          ],
          "120": [
            12719,
            12764
          ],
          "121": [
            12774,
            12809
          ],
          "122": [
            12819,
            12883
          ],
          "123": [
            12893,
            12931
          ]
        }
      },
      "30": {
        "SafeERC20._callOptionalReturn": {
          "134": [
            3809,
            3894
          ]
        },
        "SafeERC20.safeTransfer": {
          "129": [
            811,
            897
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "125": [
            1048,
            1144
          ]
        }
      },
      "44": {},
      "45": {},
      "47": {},
      "49": {},
      "5": {
        "BankStorage.getCollateralTokenAddress": {
          "9": [
            3424,
            3454
          ]
        },
        "BankStorage.getCollateralTokenLastUpdatedAt": {
          "7": [
            4207,
            4238
          ]
        },
        "BankStorage.getCollateralTokenPrice": {
          "1": [
            3655,
            3678
          ]
        },
        "BankStorage.getCollateralTokenPriceGranularity": {
          "5": [
            3942,
            3976
          ]
        },
        "BankStorage.getCollateralizationRatio": {
          "10": [
            2072,
            2109
          ]
        },
        "BankStorage.getDebtTokenAddress": {
          "15": [
            2518,
            2542
          ]
        },
        "BankStorage.getDebtTokenLastUpdatedAt": {
          "16": [
            3210,
            3235
          ]
        },
        "BankStorage.getDebtTokenPrice": {
          "13": [
            2734,
            2751
          ]
        },
        "BankStorage.getDebtTokenPriceGranularity": {
          "0": [
            2969,
            2997
          ]
        },
        "BankStorage.getInterestRate": {
          "6": [
            1622,
            1649
          ]
        },
        "BankStorage.getLiquidationPenalty": {
          "2": [
            2302,
            2335
          ]
        },
        "BankStorage.getName": {
          "24": [
            1428,
            1439
          ]
        },
        "BankStorage.getOriginationFee": {
          "18": [
            1830,
            1859
          ]
        },
        "BankStorage.getReserveBalance": {
          "14": [
            4436,
            4462
          ]
        },
        "BankStorage.getReserveCollateralBalance": {
          "17": [
            4680,
            4712
          ]
        },
        "BankStorage.getVaultCollateralAmount": {
          "12": [
            4917,
            4959
          ]
        },
        "BankStorage.getVaultCollateralizationRatio": {
          "25": [
            6127,
            6135
          ],
          "26": [
            6166,
            6416
          ]
        },
        "BankStorage.getVaultDebtAmount": {
          "8": [
            5146,
            5182
          ]
        },
        "BankStorage.getVaultRepayAmount": {
          "99": [
            5460,
            5501
          ],
          "100": [
            5702,
            5817
          ]
        }
      },
      "64": {},
      "8": {
        "Context._msgSender": {
          "37": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "AccessControl",
    "AccessControlEnumerable",
    "Address",
    "BankStorage",
    "Context",
    "IAccessControl",
    "IAccessControlEnumerable",
    "IERC165",
    "IERC20",
    "ITellor",
    "Initializable",
    "SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106103265760003560e01c8063685a5808116101b8578063b71d7a6e11610104578063dd8755f2116100a2578063f327e3241161007c578063f327e324146106dc578063f91614eb146106e4578063fb839dda146106ec578063fc2e39a6146106ff57600080fd5b8063dd8755f2146106a3578063ec5e5e7d146106b6578063f2fde38b146106c957600080fd5b8063ca15c873116100de578063ca15c87314610664578063cb765c1d14610677578063d267974c1461067f578063d547741f1461069057600080fd5b8063b71d7a6e14610641578063c14d045414610649578063c969ac061461065c57600080fd5b80638cdcc9551161017157806391d148541161014b57806391d14854146105c8578063a217fddf146105db578063a622ee7c146105e3578063a860988c1461062c57600080fd5b80638cdcc955146105915780638da5cb5b146105a45780639010d07c146105b557600080fd5b8063685a5808146105325780636d483fe61461054a57806370c12f1e1461055b5780637649b9381461056e57806385b4e5431461058157806386ef57381461058957600080fd5b806336568abe1161027757806345fd80e4116102305780634fd889511161020a5780634fd88951146104fc5780635257b5661461050f57806353388f44146105175780635729b3941461051f57600080fd5b806345fd80e4146104ce578063494f4188146104d65780634b272d9a146104e957600080fd5b806336568abe1461043d57806338507ff5146104505780633f60d799146104635780633fcad964146104785780634032b72b146104a8578063435726c4146104bb57600080fd5b80631e522b29116102e45780632f865568116102be5780632f865568146103e85780633149cb14146103fb578063317c9e4214610420578063364bc15a1461042857600080fd5b80631e522b29146103aa578063248a9ca3146103b25780632f2ff15d146103d557600080fd5b806291a4461461032b57806301ffc9a71461034057806308dcd7c614610368578063151439501461037a57806317d7de7c146103825780631b9084b414610397575b600080fd5b61033e61033936600461270e565b610707565b005b61035361034e366004612727565b6107a4565b60405190151581526020015b60405180910390f35b6005545b60405190815260200161035f565b600a5461036c565b61038a6107cf565b60405161035f919061277d565b61036c6103a53660046127d0565b610861565b60145461036c565b61036c6103c036600461270e565b60009081526018602052604090206001015490565b61033e6103e33660046127ed565b61090d565b61033e6103f63660046127d0565b610937565b604d546001600160a01b03165b6040516001600160a01b03909116815260200161035f565b600b5461036c565b61036c600080516020612bc283398151915281565b61033e61044b3660046127ed565b610bb1565b61033e61045e36600461281d565b610c2f565b61036c600080516020612ba283398151915281565b61048b61048636600461270e565b610cc5565b60408051931515845260208401929092529082015260600161035f565b61033e6104b63660046127d0565b610e61565b61033e6104c936600461270e565b610eca565b61033e610fd0565b61033e6104e43660046127d0565b61109d565b61033e6104f73660046127d0565b6110b5565b61033e61050a36600461270e565b611131565b60115461036c565b600e5461036c565b61033e61052d36600461270e565b6113ec565b3360009081526002602052604090206001015461036c565b6009546001600160a01b0316610408565b61033e61056936600461286e565b61149a565b61033e61057c36600461270e565b6115c8565b61033e61174e565b60135461036c565b61033e61059f3660046127d0565b611815565b6000546001600160a01b0316610408565b6104086105c3366004612984565b61182d565b6103536105d63660046127ed565b61184c565b61036c600081565b6106116105f13660046127d0565b600260208190526000918252604090912080546001820154919092015483565b6040805193845260208401929092529082015260600161035f565b3360009081526002602052604090205461036c565b61036c611877565b61033e61065736600461281d565b611920565b60045461036c565b61036c61067236600461270e565b6119b6565b60105461036c565b6003546001600160a01b0316610408565b61033e61069e3660046127ed565b6119cd565b61033e6106b13660046127d0565b6119f2565b61033e6106c436600461270e565b611a58565b61033e6106d73660046127d0565b611bd6565b60085461036c565b600f5461036c565b61033e6106fa36600461270e565b611c41565b60125461036c565b600061071281611dfe565b6000821161073b5760405162461bcd60e51b8152600401610732906129a6565b60405180910390fd5b81600f600101600082825461075091906129e7565b909155505060035461076d906001600160a01b0316333085611e08565b6040518281527f71eb3e5df75ef293b81b4c7b38db51f7a6cec007d12529cb74d4eafb7fa532229060200160405180910390a15050565b60006001600160e01b03198216635a05180f60e01b14806107c957506107c982611e79565b92915050565b6060600180546107de906129ff565b80601f016020809104026020016040519081016040528092919081815260200182805461080a906129ff565b80156108575780601f1061082c57610100808354040283529160200191610857565b820191906000526020600020905b81548152906001019060200180831161083a57829003601f168201915b5050505050905090565b6001600160a01b03811660009081526002602052604081206001015461088957506000919050565b6005546004546001600160a01b0384166000908152600260205260409020600101546108b59190612a3a565b6108bf9190612a59565b600b54600a546001600160a01b0385166000908152600260205260409020546108e89190612a3a565b6108f29190612a59565b6108fe90612710612a3a565b6107c99190612a59565b919050565b60008281526018602052604090206001015461092881611dfe565b6109328383611f0b565b505050565b61094f600080516020612bc28339815191523361184c565b80610960575061096060003361184c565b6109a25760405162461bcd60e51b81526020600482015260136024820152723737ba1035b2b2b832b91037b91030b236b4b760691b6044820152606401610732565b6013546109b0906064612a3a565b6109b982610861565b10610a065760405162461bcd60e51b815260206004820152601d60248201527f5641554c54204e4f5420554e444552434f4c4c41544552414c495a45440000006044820152606401610732565b6014546001600160a01b0382166000908152600260205260408120600101549091606491829190610a379083612a3a565b610a419190612a3a565b610a4b9190612a59565b610a559190612a59565b6001600160a01b038316600090815260026020526040902060010154610a7b91906129e7565b600a54600454919250600091610a919084612a3a565b610a9b9190612a59565b6001600160a01b038416600090815260026020526040902054909150811115610ad957506001600160a01b0382166000908152600260205260409020545b6000610ae6600a83612a59565b9050610af28183612a7b565b600f8054600090610b049084906129e7565b90915550506001600160a01b03841660009081526002602052604081208054849290610b31908490612a7b565b90915550506001600160a01b03808516600090815260026020526040812060010155604d54600954610b6892908116911683611f2d565b836001600160a01b03167f6dd29d11f8d1bcdbd79da21bf92895417dcc2f8886b3db11c8a4ce00b73de9d084604051610ba391815260200190565b60405180910390a250505050565b6001600160a01b0381163314610c215760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610732565b610c2b8282611f5d565b5050565b6000610c3a81611dfe565b6009546001600160a01b0316158015610c5b57506001600160a01b03851615155b610c925760405162461bcd60e51b81526020600482015260086024820152672173657461626c6560c01b6044820152606401610732565b50600980546001600160a01b0319166001600160a01b039590951694909417909355600a92909255600b91909155600c55565b6015546040516311bbb87160e21b815260048101839052600091829182916001600160a01b031690829082906346eee1c490602401602060405180830381865afa158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190612a92565b905060006001600160a01b0383166377fbb66388610d5a600186612a7b565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015610d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbf9190612a92565b6040516393fa491560e01b815260048101899052602481018290529091506000906001600160a01b038516906393fa491590604401602060405180830381865afa158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e359190612a92565b90508015610e4d576001965094509250610e5a915050565b5060009550859450925050505b9193909250565b6001600160a01b038116610eaf5760405162461bcd60e51b81526020600482015260156024820152741bdc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b6044820152606401610732565b610ec7600080516020612bc28339815191528261090d565b50565b6000610ed581611dfe565b600f54821115610f275760405162461bcd60e51b815260206004820181905260248201527f4e4f5420454e4f55474820434f4c4c41544552414c20494e20524553455256456044820152606401610732565b6000610f3460c884612a59565b905082600f6000016000828254610f4b9190612a7b565b90915550506009546040518481526001600160a01b03909116907f0529afc4538720fe0b3eadc40486369ab962002d72fead1387b300c66073e7bf9060200160405180910390a2610fb333610fa08386612a7b565b6009546001600160a01b03169190611f2d565b604d54600954610932916001600160a01b03918216911683611f2d565b610fe8600080516020612ba28339815191523361184c565b80610ff95750610ff960003361184c565b6110455760405162461bcd60e51b815260206004820152601a60248201527f6e6f742070726963652075706461746572206f722061646d696e0000000000006044820152606401610732565b60065461105190610cc5565b60085560048190556003546040519182526001600160a01b031691507f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c906020015b60405180910390a2565b610ec7600080516020612bc2833981519152826119cd565b604d546001600160a01b0316331461110f5760405162461bcd60e51b815260206004820152601960248201527f4953204e4f542042414e4b20464143544f5259204f574e4552000000000000006044820152606401610732565b604d80546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600260205260409020600101541561116557611151611877565b336000908152600260205260409020600101555b601354600454600a54336000908152600260205260408120549093929161118b91612a3a565b6111959190612a59565b61119f9190612a59565b6111aa906064612a3a565b6005549091506111ba9082612a3a565b600b549091506111ca9082612a59565b336000908152600260205260409020600101549091506111ea9082612a7b565b601254909150612710906111fe9084612a3a565b6112089190612a59565b61121290836129e7565b33600090815260026020526040812060010180549091906112349084906129e7565b90915550503360009081526002602052604090206001015481116112925760405162461bcd60e51b81526020600482015260156024820152741393d508115393d551d20810d3d313105511549053605a1b6044820152606401610732565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fe9190612a92565b8211156113435760405162461bcd60e51b81526020600482015260136024820152724e4f5420454e4f55474820524553455256455360681b6044820152606401610732565b60165433600090815260026020819052604090912001546113649042612a7b565b111561138157336000908152600260208190526040909120429101555b81600f60010160008282546113969190612a7b565b90915550506003546113b2906001600160a01b03163384611f2d565b60405182815233907f0232862a021d33ea4a70f5d509b754f0f6986aaa0ffdd5c7db4910422afc768a906020015b60405180910390a25050565b6000811161140c5760405162461bcd60e51b8152600401610732906129a6565b336000908152600260205260408120805483929061142b9084906129e7565b9091555050600f80548291906000906114459084906129e7565b9091555050600954611462906001600160a01b0316333084611e08565b60405181815233907f89d28cf06bdb2ee1b92cd046d58450042ad113e9f4cdabfc4d43e7c5557758d79060200160405180910390a250565b601a54610100900460ff16806114af5750303b155b806114bd5750601a5460ff16155b6115205760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610732565b601a54610100900460ff1615801561154257601a805461ffff19166101011790555b61154d60008b611f7f565b601188905560128790556013869055601580546001600160a01b038085166001600160a01b03199283161790925560148790556016869055604d80549286169290911691909117905588516115a99060019060208c0190612675565b5080156115bc57601a805461ff00191690555b50505050505050505050565b600081116115e85760405162461bcd60e51b8152600401610732906129a6565b6115f0611877565b3360009081526002602052604090206001018190558111156116545760405162461bcd60e51b815260206004820152601b60248201527f43414e4e4f54205245504159204d4f5245205448414e204f57454400000000006044820152606401610732565b3360009081526002602052604081206001018054839290611676908490612a7b565b9091555050601080548291906000906116909084906129e7565b90915550506016543360009081526002602081905260408220015490916116b691612a59565b6016546116c39042612a59565b6116cd9190612a7b565b6016549091506116dd9082612a3a565b33600090815260026020819052604082200180549091906116ff9084906129e7565b909155505060035461171c906001600160a01b0316333085611e08565b60405182815233907f34d657cd4dec79d6716ce5ac15b81de5751705030cbef01b43b15eae44cbc112906020016113e0565b611766600080516020612ba28339815191523361184c565b80611777575061177760003361184c565b6117c35760405162461bcd60e51b815260206004820152601a60248201527f6e6f742070726963652075706461746572206f722061646d696e0000000000006044820152606401610732565b600c546117cf90610cc5565b600e55600a8190556009546040519182526001600160a01b031691507f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c90602001611093565b610ec7600080516020612ba2833981519152826119cd565b60008281526019602052604081206118459083611f89565b9392505050565b60009182526018602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3360009081526002602052604081206001015460165490919061189e906301e13380612a59565b60165433600090815260026020819052604082200154929350916118c29190612a59565b6016546118cf9042612a59565b6118d99190612a7b565b90508082612710600f60020154866118f19190612a3a565b6118fb9190612a59565b6119059190612a59565b61190f9190612a3a565b61191990846129e7565b9250505090565b600061192b81611dfe565b6003546001600160a01b031615801561194c57506001600160a01b03851615155b6119835760405162461bcd60e51b81526020600482015260086024820152672173657461626c6560c01b6044820152606401610732565b50600380546001600160a01b0319166001600160a01b039590951694909417909355600492909255600591909155600655565b60008181526019602052604081206107c990611f95565b6000828152601860205260409020600101546119e881611dfe565b6109328383611f5d565b6001600160a01b038116611a405760405162461bcd60e51b81526020600482015260156024820152741bdc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b6044820152606401610732565b610ec7600080516020612ba28339815191528261090d565b6000611a6381611dfe565b6003546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015611aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acf9190612a92565b1015611b275760405162461bcd60e51b815260206004820152602160248201527f4e4f5420454e4f554748204445425420544f4b454e5320494e205245534552566044820152604560f81b6064820152608401610732565b6000611b3460c884612a59565b905082600f6001016000828254611b4b9190612a7b565b90915550611b72905033611b5f8386612a7b565b6003546001600160a01b03169190611f2d565b604d54600354611b8f916001600160a01b03918216911683611f2d565b6003546040518481526001600160a01b03909116907f0529afc4538720fe0b3eadc40486369ab962002d72fead1387b300c66073e7bf9060200160405180910390a2505050565b6000546001600160a01b03163314611c1f5760405162461bcd60e51b815260206004820152600c60248201526b24a9902727aa1027aba722a960a11b6044820152606401610732565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260026020526040902054811115611ca05760405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f54205749544844524157204d4f524520434f4c4c41544552414c006044820152606401610732565b601354600454600a54336000908152600260205260408120549093929190611cc9908690612a7b565b611cd39190612a3a565b611cdd9190612a59565b611ce79190612a59565b611cf2906064612a3a565b600554909150611d029082612a3a565b600b54909150611d129082612a59565b33600090815260026020526040902060010154909150811015611d775760405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f5420554e444552434f4c4c41544552414c495a45205641554c54006044820152606401610732565b3360009081526002602052604081208054849290611d96908490612a7b565b9091555050600f8054839190600090611db0908490612a7b565b9091555050600954611dcc906001600160a01b03163384611f2d565b60405182815233907f0ac60fbf53b67f5a6a0c8031dd9d1610a06f01669b1a8b9af98f3a6a477e8d7c906020016113e0565b610ec78133611f9f565b6040516001600160a01b0380851660248301528316604482015260648101829052611e739085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612003565b50505050565b60006001600160e01b03198216637965db0b60e01b14806107c957506017546040516301ffc9a760e01b81526001600160e01b0319841660048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa158015611ee7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190612aab565b611f1582826120d5565b6000828152601960205260409020610932908261215b565b6040516001600160a01b03831660248201526044810182905261093290849063a9059cbb60e01b90606401611e3c565b611f678282612170565b600082815260196020526040902061093290826121d7565b610c2b8282611f0b565b600061184583836121ec565b60006107c9825490565b611fa9828261184c565b610c2b57611fc1816001600160a01b03166014612216565b611fcc836020612216565b604051602001611fdd929190612acd565b60408051601f198184030181529082905262461bcd60e51b82526107329160040161277d565b6000612058826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123b29092919063ffffffff16565b80519091501561093257808060200190518101906120769190612aab565b6109325760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610732565b6120df828261184c565b610c2b5760008281526018602090815260408083206001600160a01b03851684529091529020805460ff191660011790556121173390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611845836001600160a01b0384166123c9565b61217a828261184c565b15610c2b5760008281526018602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611845836001600160a01b038416612418565b600082600001828154811061220357612203612b42565b9060005260206000200154905092915050565b60606000612225836002612a3a565b6122309060026129e7565b67ffffffffffffffff81111561224857612248612858565b6040519080825280601f01601f191660200182016040528015612272576020820181803683370190505b509050600360fc1b8160008151811061228d5761228d612b42565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106122bc576122bc612b42565b60200101906001600160f81b031916908160001a90535060006122e0846002612a3a565b6122eb9060016129e7565b90505b6001811115612363576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061231f5761231f612b42565b1a60f81b82828151811061233557612335612b42565b60200101906001600160f81b031916908160001a90535060049490941c9361235c81612b58565b90506122ee565b5083156118455760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610732565b60606123c1848460008561250b565b949350505050565b6000818152600183016020526040812054612410575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107c9565b5060006107c9565b6000818152600183016020526040812054801561250157600061243c600183612a7b565b855490915060009061245090600190612a7b565b90508181146124b557600086600001828154811061247057612470612b42565b906000526020600020015490508087600001848154811061249357612493612b42565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806124c6576124c6612b6f565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107c9565b60009150506107c9565b60608247101561256c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610732565b6001600160a01b0385163b6125c35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610732565b600080866001600160a01b031685876040516125df9190612b85565b60006040518083038185875af1925050503d806000811461261c576040519150601f19603f3d011682016040523d82523d6000602084013e612621565b606091505b509150915061263182828661263c565b979650505050505050565b6060831561264b575081611845565b82511561265b5782518084602001fd5b8160405162461bcd60e51b8152600401610732919061277d565b828054612681906129ff565b90600052602060002090601f0160209004810192826126a357600085556126e9565b82601f106126bc57805160ff19168380011785556126e9565b828001600101855582156126e9579182015b828111156126e95782518255916020019190600101906126ce565b506126f59291506126f9565b5090565b5b808211156126f557600081556001016126fa565b60006020828403121561272057600080fd5b5035919050565b60006020828403121561273957600080fd5b81356001600160e01b03198116811461184557600080fd5b60005b8381101561276c578181015183820152602001612754565b83811115611e735750506000910152565b602081526000825180602084015261279c816040850160208701612751565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610ec757600080fd5b8035610908816127b0565b6000602082840312156127e257600080fd5b8135611845816127b0565b6000806040838503121561280057600080fd5b823591506020830135612812816127b0565b809150509250929050565b6000806000806080858703121561283357600080fd5b843561283e816127b0565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060008060006101208a8c03121561288d57600080fd5b8935612898816127b0565b985060208a013567ffffffffffffffff808211156128b557600080fd5b818c0191508c601f8301126128c957600080fd5b8135818111156128db576128db612858565b604051601f8201601f19908116603f0116810190838211818310171561290357612903612858565b816040528281528f602084870101111561291c57600080fd5b82602086016020830137600060208483010152809c50505050505060408a0135965060608a0135955060808a0135945060a08a0135935060c08a0135925061296660e08b016127c5565b91506129756101008b016127c5565b90509295985092959850929598565b6000806040838503121561299757600080fd5b50508035926020909101359150565b602080825260119082015270416d6f756e74206973207a65726f20212160781b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156129fa576129fa6129d1565b500190565b600181811c90821680612a1357607f821691505b60208210811415612a3457634e487b7160e01b600052602260045260246000fd5b50919050565b6000816000190483118215151615612a5457612a546129d1565b500290565b600082612a7657634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612a8d57612a8d6129d1565b500390565b600060208284031215612aa457600080fd5b5051919050565b600060208284031215612abd57600080fd5b8151801515811461184557600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612b05816017850160208801612751565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612b36816028840160208801612751565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b600081612b6757612b676129d1565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251612b97818460208701612751565b919091019291505056fe3204c940063673962b481a0395619b3dbbd137589c419e993978c1c71bcf68ecfc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4faba2646970667358221220f9cd8c4539ba932717cc38ecfc72370a208ae591330c39e46dfb320304dcdba964736f6c634300080b0033",
  "deployedSourceMap": "464:14441:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4259:364;;;;;;:::i;:::-;;:::i;:::-;;616:212:1;;;;;;:::i;:::-;;:::i;:::-;;;655:14:68;;648:22;630:41;;618:2;603:18;616:212:1;;;;;;;;2889:115:5;2976:21;;2889:115;;;828:25:68;;;816:2;801:18;2889:115:5;682:177:68;3580:105:5;3662:16;;3580:105;;1363:83;;;:::i;:::-;;;;;;;:::i;5945:488::-;;;;;;:::i;:::-;;:::i;2229:113::-;2309:26;;2229:113;;4394:129:0;;;;;;:::i;:::-;4468:7;4494:12;;;:6;:12;;;;;:22;;;;4394:129;4773:145;;;;;;:::i;:::-;;:::i;7721:1363:3:-;;;;;;:::i;:::-;;:::i;12944:102::-;13022:17;;-1:-1:-1;;;;;13022:17:3;12944:102;;;-1:-1:-1;;;;;2893:32:68;;;2875:51;;2863:2;2848:18;12944:102:3;2729:203:68;3828:155:5;3949:27;;3828:155;;379:62;;-1:-1:-1;;;;;;;;;;;379:62:5;;5790:214:0;;;;;;:::i;:::-;;:::i;2847:631:3:-;;;;;;:::i;:::-;;:::i;488:66:5:-;;-1:-1:-1;;;;;;;;;;;488:66:5;;13238:614:3;;;;;;:::i;:::-;;:::i;:::-;;;;3615:14:68;;3608:22;3590:41;;3662:2;3647:18;;3640:34;;;;3690:18;;;3683:34;3578:2;3563:18;13238:614:3;3394:329:68;13972:155:3;;;;;;:::i;:::-;;:::i;5628:662::-;;;;;;:::i;:::-;;:::i;6995:401::-;;;:::i;14255:101::-;;;;;;:::i;:::-;;:::i;13052:180::-;;;;;;:::i;:::-;;:::i;9755:1250::-;;;;;;:::i;:::-;;:::i;1555:101:5:-;1629:20;;1555:101;;4124:121;4214:24;;4124:121;;9232:390:3;;;;;;:::i;:::-;;:::i;5076:113:5:-;5160:10;5127:7;5153:18;;;:6;:18;;;;;:29;;;5076:113;;3347:114;3431:10;:23;-1:-1:-1;;;;;3431:23:5;3347:114;;1947:791:3;;;;;;:::i;:::-;;:::i;11183:758::-;;;;;;:::i;:::-;;:::i;6427:437::-;;;:::i;1995:121:5:-;2079:30;;1995:121;;14796:107:3;;;;;;:::i;:::-;;:::i;1445:77::-;1483:7;1509:6;-1:-1:-1;;;;;1509:6:3;1445:77;;1413:151:1;;;;;;:::i;:::-;;:::i;2898:145:0:-;;;;;;:::i;:::-;;:::i;2020:49::-;;2065:4;2020:49;;1171:39:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5879:25:68;;;5935:2;5920:18;;5913:34;;;;5963:18;;;5956:34;5867:2;5852:18;1171:39:5;5677:319:68;4841:125:5;4931:10;4898:7;4924:18;;;:6;:18;;;;;:35;4841:125;;5379:445;;;:::i;3581:525:3:-;;;;;;:::i;:::-;;:::i;2665:93:5:-;2741:10;;2665:93;;1732:140:1;;;;;;:::i;:::-;;:::i;4367:102:5:-;4443:19;;4367:102;;2447;2525:4;:17;-1:-1:-1;;;;;2525:17:5;2447:102;;5152:147:0;;;;;;:::i;:::-;;:::i;14491:162:3:-;;;;;;:::i;:::-;;:::i;4846:586::-;;;;;;:::i;:::-;;:::i;1718:96::-;;;;;;:::i;:::-;;:::i;3133:109:5:-;3217:18;;3133:109;;4601:118;4687:7;:25;4601:118;;12063:875:3;;;;;;:::i;:::-;;:::i;1761:105:5:-;1837:22;;1761:105;;4259:364:3;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;4384:1:3::1;4375:6;:10;4367:40;;;;-1:-1:-1::0;;;4367:40:3::1;;;;;;;:::i;:::-;;;;;;;;;4440:6;4417:7;:19;;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4463:4:3::1;:17:::0;4456:123:::1;::::0;-1:-1:-1;;;;;4463:17:3::1;4512:10;4544:4;4563:6:::0;4456:42:::1;:123::i;:::-;4594:22;::::0;828:25:68;;;4594:22:3::1;::::0;816:2:68;801:18;4594:22:3::1;;;;;;;4259:364:::0;;:::o;616:212:1:-;701:4;-1:-1:-1;;;;;;724:57:1;;-1:-1:-1;;;724:57:1;;:97;;;785:36;809:11;785:23;:36::i;:::-;717:104;616:212;-1:-1:-1;;616:212:1:o;1363:83:5:-;1403:13;1435:4;1428:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1363:83;:::o;5945:488::-;-1:-1:-1;;;;;6077:18:5;;6050:7;6077:18;;;:6;:18;;;;;:29;;;6073:354;;-1:-1:-1;6134:1:5;;5945:488;-1:-1:-1;5945:488:5:o;6073:354::-;6394:21;;6360:10;;-1:-1:-1;;;;;6328:18:5;;;;;;6394:21;6328:18;;;;;6360:10;6328:29;;:42;;6360:10;6328:42;:::i;:::-;6327:88;;;;:::i;:::-;6270:27;;6230:16;;-1:-1:-1;;;;;6192:18:5;;;;;;6270:27;6192:18;;;;;:35;:54;;6230:16;6192:54;:::i;:::-;6191:106;;;;:::i;:::-;6190:116;;6301:5;6190:116;:::i;:::-;6189:227;;;;:::i;6073:354::-;5945:488;;;:::o;4773:145:0:-;4468:7;4494:12;;;:6;:12;;;;;:22;;;2498:16;2509:4;2498:10;:16::i;:::-;4886:25:::1;4897:4;4903:7;4886:10;:25::i;:::-;4773:145:::0;;;:::o;7721:1363:3:-;7800:32;-1:-1:-1;;;;;;;;;;;7821:10:3;7800:7;:32::i;:::-;:91;;;-1:-1:-1;7852:39:3;2065:4:0;7880:10:3;7852:7;:39::i;:::-;7779:157;;;;-1:-1:-1;;;7779:157:3;;7594:2:68;7779:157:3;;;7576:21:68;7633:2;7613:18;;;7606:30;-1:-1:-1;;;7652:18:68;;;7645:49;7711:18;;7779:157:3;7392:343:68;7779:157:3;8070:30;;:36;;8103:3;8070:36;:::i;:::-;8009:42;8040:10;8009:30;:42::i;:::-;:97;7988:173;;;;-1:-1:-1;;;7988:173:3;;7942:2:68;7988:173:3;;;7924:21:68;7981:2;7961:18;;;7954:30;8020:31;8000:18;;;7993:59;8069:18;;7988:173:3;7740:353:68;7988:173:3;8307:26;;-1:-1:-1;;;;;8237:18:3;;8171:17;8237:18;;;:6;:18;;;;;:29;;;8171:17;;8375:3;;;;8307:26;8237:51;;8375:3;8237:51;:::i;:::-;:96;;;;:::i;:::-;8236:120;;;;:::i;:::-;:142;;;;:::i;:::-;-1:-1:-1;;;;;8191:18:3;;;;;;:6;:18;;;;;:29;;;:188;;;;:::i;:::-;8460:16;;8434:10;;8171:208;;-1:-1:-1;8389:29:3;;8422:22;;8171:208;8422:22;:::i;:::-;8421:55;;;;:::i;:::-;-1:-1:-1;;;;;8515:18:3;;;;;;:6;:18;;;;;:35;8389:87;;-1:-1:-1;8491:59:3;;8487:149;;;-1:-1:-1;;;;;;8590:18:3;;;;;;:6;:18;;;;;:35;8487:149;8646:17;8666:26;8690:2;8666:21;:26;:::i;:::-;8646:46;-1:-1:-1;8764:33:3;8646:46;8764:21;:33;:::i;:::-;8735:7;:62;;:25;;:62;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8807:18:3;;;;;;:6;:18;;;;;:60;;8846:21;;8807:18;:60;;8846:21;;8807:60;:::i;:::-;;;;-1:-1:-1;;;;;;;8877:18:3;;;8909:1;8877:18;;;:6;:18;;;;;:29;;:33;8978:17;;8927:10;:23;8920:108;;8927:23;;;;8978:17;9009:9;8920:44;:108::i;:::-;9055:10;-1:-1:-1;;;;;9043:34:3;;9067:9;9043:34;;;;828:25:68;;816:2;801:18;;682:177;9043:34:3;;;;;;;;7769:1315;;;7721:1363;:::o;5790:214:0:-;-1:-1:-1;;;;;5885:23:0;;719:10:8;5885:23:0;5877:83;;;;-1:-1:-1;;;5877:83:0;;8430:2:68;5877:83:0;;;8412:21:68;8469:2;8449:18;;;8442:30;8508:34;8488:18;;;8481:62;-1:-1:-1;;;8559:18:68;;;8552:45;8614:19;;5877:83:0;8228:411:68;5877:83:0;5971:26;5983:4;5989:7;5971:11;:26::i;:::-;5790:214;;:::o;2847:631:3:-;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;3111:10:3::1;:23:::0;-1:-1:-1;;;;;3111:23:3::1;:37:::0;:86;::::1;;;-1:-1:-1::0;;;;;;3168:29:3;::::1;::::0;::::1;3111:86;3090:141;;;::::0;-1:-1:-1;;;3090:141:3;;8846:2:68;3090:141:3::1;::::0;::::1;8828:21:68::0;8885:1;8865:18;;;8858:29;-1:-1:-1;;;8903:18:68;;;8896:38;8951:18;;3090:141:3::1;8644:331:68::0;3090:141:3::1;-1:-1:-1::0;3241:10:3::1;:41:::0;;-1:-1:-1;;;;;;3241:41:3::1;-1:-1:-1::0;;;;;3241:41:3;;;::::1;::::0;;;::::1;::::0;;;3292:16;:39;;;;3341:27;:61;;;;3412:26;:59;2847:631::o;13238:614::-;13474:22;;13524:46;;-1:-1:-1;;;13524:46:3;;;;;828:25:68;;;13341:15:3;;;;;;-1:-1:-1;;;;;13474:22:3;;13341:15;;13474:22;;13524:34;;801:18:68;;13524:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13507:63;-1:-1:-1;13580:13:3;-1:-1:-1;;;;;13596:38:3;;;13648:10;13672;13681:1;13507:63;13672:10;:::i;:::-;13596:96;;-1:-1:-1;;;;;;13596:96:3;;;;;;;;;;9343:25:68;;;;9384:18;;;9377:34;9316:18;;13596:96:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13719:38;;-1:-1:-1;;;13719:38:3;;;;;9343:25:68;;;9384:18;;;9377:34;;;13580:112:3;;-1:-1:-1;13702:14:3;;-1:-1:-1;;;;;13719:19:3;;;;;9316:18:68;;13719:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13702:55;-1:-1:-1;13771:10:3;;13767:44;;13791:4;;-1:-1:-1;13797:6:3;-1:-1:-1;13805:5:3;-1:-1:-1;13783:28:3;;-1:-1:-1;;13783:28:3;13767:44;-1:-1:-1;13829:5:3;;-1:-1:-1;13829:5:3;;-1:-1:-1;13839:5:3;-1:-1:-1;;;13238:614:3;;;;;;:::o;13972:155::-;-1:-1:-1;;;;;14034:20:3;;14026:54;;;;-1:-1:-1;;;14026:54:3;;9624:2:68;14026:54:3;;;9606:21:68;9663:2;9643:18;;;9636:30;-1:-1:-1;;;9682:18:68;;;9675:51;9743:18;;14026:54:3;9422:345:68;14026:54:3;14090:30;-1:-1:-1;;;;;;;;;;;14113:6:3;14090:9;:30::i;:::-;13972:155;:::o;5628:662::-;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;5768:7:3::1;:25:::0;:35;-1:-1:-1;5768:35:3::1;5747:114;;;::::0;-1:-1:-1;;;5747:114:3;;9974:2:68;5747:114:3::1;::::0;::::1;9956:21:68::0;;;9993:18;;;9986:30;10052:34;10032:18;;;10025:62;10104:18;;5747:114:3::1;9772:356:68::0;5747:114:3::1;5871:17;5891:12;5900:3;5891:6:::0;:12:::1;:::i;:::-;5871:32;;5976:6;5947:7;:25;;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6013:10:3::1;:23:::0;5997:48:::1;::::0;828:25:68;;;-1:-1:-1;;;;;6013:23:3;;::::1;::::0;5997:48:::1;::::0;816:2:68;801:18;5997:48:3::1;;;;;;;6055:110;6113:10;6137:18;6146:9:::0;6137:6;:18:::1;:::i;:::-;6062:10;:23:::0;-1:-1:-1;;;;;6062:23:3::1;::::0;6055:110;:44:::1;:110::i;:::-;6233:17;::::0;6182:10:::1;:23:::0;6175:108:::1;::::0;-1:-1:-1;;;;;6182:23:3;;::::1;::::0;6233:17:::1;6264:9:::0;6175:44:::1;:108::i;6995:401::-:0;7062:34;-1:-1:-1;;;;;;;;;;;7085:10:3;7062:7;:34::i;:::-;:93;;;-1:-1:-1;7116:39:3;2065:4:0;7144:10:3;7116:7;:39::i;:::-;7041:166;;;;-1:-1:-1;;;7041:166:3;;10335:2:68;7041:166:3;;;10317:21:68;10374:2;10354:18;;;10347:30;10413:28;10393:18;;;10386:56;10459:18;;7041:166:3;10133:350:68;7041:166:3;7283:20;;7254:59;;:15;:59::i;:::-;7232:18;7217:96;7220:10;7217:96;;;7220:4;7359:17;7347:42;;828:25:68;;;-1:-1:-1;;;;;7359:17:3;;-1:-1:-1;7347:42:3;;816:2:68;801:18;7347:42:3;;;;;;;;6995:401::o;14255:101::-;14315:34;-1:-1:-1;;;;;;;;;;;14339:9:3;14315:10;:34::i;13052:180::-;13126:17;;-1:-1:-1;;;;;13126:17:3;13147:10;13126:31;13118:69;;;;-1:-1:-1;;;13118:69:3;;10690:2:68;13118:69:3;;;10672:21:68;10729:2;10709:18;;;10702:30;10768:27;10748:18;;;10741:55;10813:18;;13118:69:3;10488:349:68;13118:69:3;13197:17;:28;;-1:-1:-1;;;;;;13197:28:3;-1:-1:-1;;;;;13197:28:3;;;;;;;;;;13052:180::o;9755:1250::-;9822:10;9815:18;;;;:6;:18;;;;;:29;;;:34;9811:118;;9897:21;:19;:21::i;:::-;9872:10;9865:18;;;;:6;:18;;;;;:29;;:53;9811:118;10067:30;;;10042:10;10010:16;;9967:10;9938:17;9960:18;;;:6;:18;;;;;:35;9938:17;;10067:30;10042:10;9960:66;;;:::i;:::-;9959:93;;;;:::i;:::-;:138;;;;:::i;:::-;9958:146;;10101:3;9958:146;:::i;:::-;10127:21;;9938:166;;-1:-1:-1;10114:34:3;;9938:166;10114:34;:::i;:::-;10171:27;;10114:34;;-1:-1:-1;10158:40:3;;10114:34;10158:40;:::i;:::-;10228:10;10221:18;;;;:6;:18;;;;;:29;;;10158:40;;-1:-1:-1;10208:42:3;;10158:40;10208:42;:::i;:::-;10337:22;;10208:42;;-1:-1:-1;10363:5:3;;10328:31;;:6;:31;:::i;:::-;10327:41;;;;:::i;:::-;10305:64;;:6;:64;:::i;:::-;10267:10;10260:18;;;;:6;:18;;;;;:29;;:109;;:29;;:18;:109;;;;;:::i;:::-;;;;-1:-1:-1;;10407:10:3;10400:18;;;;:6;:18;;;;;:29;;;:41;-1:-1:-1;10379:109:3;;;;-1:-1:-1;;;10379:109:3;;11044:2:68;10379:109:3;;;11026:21:68;11083:2;11063:18;;;11056:30;-1:-1:-1;;;11102:18:68;;;11095:51;11163:18;;10379:109:3;10842:345:68;10379:109:3;10536:4;:17;10529:50;;-1:-1:-1;;;10529:50:3;;10573:4;10529:50;;;2875:51:68;-1:-1:-1;;;;;10536:17:3;;;;10529:35;;2848:18:68;;10529:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10519:6;:60;;10498:126;;;;-1:-1:-1;;;10498:126:3;;11394:2:68;10498:126:3;;;11376:21:68;11433:2;11413:18;;;11406:30;-1:-1:-1;;;11452:18:68;;;11445:49;11511:18;;10498:126:3;11192:343:68;10498:126:3;10687:14;;10663:10;10656:18;;;;:6;:18;;;;;;;;:28;;10638:46;;:15;:46;:::i;:::-;:63;10634:212;;;10796:10;10789:18;;;;:6;:18;;;;;;;;10820:15;10789:28;;:46;10634:212;10878:6;10855:7;:19;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;10901:4:3;:17;10894:58;;-1:-1:-1;;;;;10901:17:3;10933:10;10945:6;10894:38;:58::i;:::-;10967:31;;828:25:68;;;10979:10:3;;10967:31;;816:2:68;801:18;10967:31:3;;;;;;;;9801:1204;9755:1250;:::o;9232:390::-;9306:1;9297:6;:10;9289:40;;;;-1:-1:-1;;;9289:40:3;;;;;;;:::i;:::-;9346:10;9339:18;;;;:6;:18;;;;;:45;;9378:6;;9339:18;:45;;9378:6;;9339:45;:::i;:::-;;;;-1:-1:-1;;9394:7:3;:35;;9423:6;;9394:7;:25;;:35;;9423:6;;9394:35;:::i;:::-;;;;-1:-1:-1;;9446:10:3;:23;9439:129;;-1:-1:-1;;;;;9446:23:3;9501:10;9533:4;9552:6;9439:48;:129::i;:::-;9583:32;;828:25:68;;;9596:10:3;;9583:32;;816:2:68;801:18;9583:32:3;;;;;;;9232:390;:::o;1947:791::-;1048:12:19;;;;;;;;:31;;-1:-1:-1;1844:4:19;1888:17;1919:7;1064:15;1048:47;;;-1:-1:-1;1084:11:19;;;;1083:12;1048:47;1040:106;;;;-1:-1:-1;;;1040:106:19;;11742:2:68;1040:106:19;;;11724:21:68;11781:2;11761:18;;;11754:30;11820:34;11800:18;;;11793:62;-1:-1:-1;;;11871:18:68;;;11864:44;11925:19;;1040:106:19;11540:410:68;1040:106:19;1176:12;;;;;;;1175:13;1194:80;;;;1222:12;:19;;-1:-1:-1;;1249:18:19;;;;;1194:80;2323:39:3::1;2065:4:0;2354:7:3::0;2323:10:::1;:39::i;:::-;2372:20:::0;:35;;;2417:22;:39;;;2466:30;:55;;;2531:22;:39;;-1:-1:-1;;;;;2531:39:3;;::::1;-1:-1:-1::0;;;;;;2531:39:3;;::::1;;::::0;;;2580:26;:47;;;2637:14;:23;;;2670:17:::1;:36:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2716:15;;::::1;::::0;2531:39;;2716:15:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1292:14:19::0;1288:55;;;1316:12;:20;;-1:-1:-1;;1316:20:19;;;1288:55;1034:313;1947:791:3;;;;;;;;;:::o;11183:758::-;11255:1;11246:6;:10;11238:40;;;;-1:-1:-1;;;11238:40:3;;;;;;;:::i;:::-;11320:21;:19;:21::i;:::-;11295:10;11288:18;;;;:6;:18;;;;;:29;;:53;;;11372:39;;;11351:113;;;;-1:-1:-1;;;11351:113:3;;12157:2:68;11351:113:3;;;12139:21:68;12196:2;12176:18;;;12169:30;12235:29;12215:18;;;12208:57;12282:18;;11351:113:3;11955:351:68;11351:113:3;11481:10;11474:18;;;;:6;:18;;;;;:29;;:39;;11507:6;;11474:18;:39;;11507:6;;11474:39;:::i;:::-;;;;-1:-1:-1;;11523:19:3;:29;;11546:6;;11523:19;;;:29;;11546:6;;11523:29;:::i;:::-;;;;-1:-1:-1;;11668:14:3;;11644:10;11562:22;11637:18;;;:6;:18;;;;;;;:28;;11562:22;;11637:45;;;:::i;:::-;11606:14;;11588:32;;:15;:32;:::i;:::-;11587:96;;;;:::i;:::-;11742:14;;11562:121;;-1:-1:-1;11725:31:3;;11562:121;11725:31;:::i;:::-;11700:10;11693:18;;;;:6;:18;;;;;;;:28;:63;;:28;;:18;:63;;;;;:::i;:::-;;;;-1:-1:-1;;11773:4:3;:17;11766:123;;-1:-1:-1;;;;;11773:17:3;11822:10;11854:4;11873:6;11766:42;:123::i;:::-;11904:30;;828:25:68;;;11915:10:3;;11904:30;;816:2:68;801:18;11904:30:3;682:177:68;6427:437:3;6500:34;-1:-1:-1;;;;;;;;;;;6523:10:3;6500:7;:34::i;:::-;:93;;;-1:-1:-1;6554:39:3;2065:4:0;6582:10:3;6554:7;:39::i;:::-;6479:166;;;;-1:-1:-1;;;6479:166:3;;10335:2:68;6479:166:3;;;10317:21:68;10374:2;10354:18;;;10347:30;10413:28;10393:18;;;10386:56;10459:18;;6479:166:3;10133:350:68;6479:166:3;6733:26;;6704:65;;:15;:65::i;:::-;6676:24;6655:114;6658:16;6655:114;;;6658:10;6815:23;6803:54;;828:25:68;;;-1:-1:-1;;;;;6815:23:3;;-1:-1:-1;6803:54:3;;816:2:68;801:18;6803:54:3;682:177:68;14796:107:3;14859:37;-1:-1:-1;;;;;;;;;;;14885:10:3;14859;:37::i;1413:151:1:-;1503:7;1529:18;;;:12;:18;;;;;:28;;1551:5;1529:21;:28::i;:::-;1522:35;1413:151;-1:-1:-1;;;1413:151:1:o;2898:145:0:-;2984:4;3007:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3007:29:0;;;;;;;;;;;;;;;2898:145::o;5379:445:5:-;5479:10;5431:17;5472:18;;;:6;:18;;;;;:29;;;5547:14;;5472:29;;5431:17;5536:25;;:8;:25;:::i;:::-;5677:14;;5653:10;5571:22;5646:18;;;:6;:18;;;;;;;:28;;5511:50;;-1:-1:-1;5571:22:5;5646:45;;5677:14;5646:45;:::i;:::-;5615:14;;5597:32;;:15;:32;:::i;:::-;5596:96;;;;:::i;:::-;5571:121;;5803:14;5773;5765:5;5741:7;:20;;;5729:9;:32;;;;:::i;:::-;5728:42;;;;:::i;:::-;:59;;;;:::i;:::-;5727:90;;;;:::i;:::-;5702:115;;;;:::i;:::-;;;5450:374;;5379:445;:::o;3581:525:3:-;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;3815:4:3::1;:17:::0;-1:-1:-1;;;;;3815:17:3::1;:31:::0;:58;::::1;;;-1:-1:-1::0;;;;;;3850:23:3;::::1;::::0;::::1;3815:58;3794:113;;;::::0;-1:-1:-1;;;3794:113:3;;8846:2:68;3794:113:3::1;::::0;::::1;8828:21:68::0;8885:1;8865:18;;;8858:29;-1:-1:-1;;;8903:18:68;;;8896:38;8951:18;;3794:113:3::1;8644:331:68::0;3794:113:3::1;-1:-1:-1::0;3917:4:3::1;:29:::0;;-1:-1:-1;;;;;;3917:29:3::1;-1:-1:-1::0;;;;;3917:29:3;;;::::1;::::0;;;::::1;::::0;;;3956:10;:27;;;;3993:21;:49;;;;4052:20;:47;3581:525::o;1732:140:1:-;1812:7;1838:18;;;:12;:18;;;;;:27;;:25;:27::i;5152:147:0:-;4468:7;4494:12;;;:6;:12;;;;;:22;;;2498:16;2509:4;2498:10;:16::i;:::-;5266:26:::1;5278:4;5284:7;5266:11;:26::i;14491:162:3:-:0;-1:-1:-1;;;;;14556:21:3;;14548:55;;;;-1:-1:-1;;;14548:55:3;;9624:2:68;14548:55:3;;;9606:21:68;9663:2;9643:18;;;9636:30;-1:-1:-1;;;9682:18:68;;;9675:51;9743:18;;14548:55:3;9422:345:68;14548:55:3;14613:33;-1:-1:-1;;;;;;;;;;;14638:7:3;14613:9;:33::i;4846:586::-;2065:4:0;2498:16;2065:4;2498:10;:16::i;:::-;4983:4:3::1;:17:::0;4976:50:::1;::::0;-1:-1:-1;;;4976:50:3;;5020:4:::1;4976:50;::::0;::::1;2875:51:68::0;5030:6:3;;-1:-1:-1;;;;;4983:17:3::1;::::0;4976:35:::1;::::0;2848:18:68;;4976:50:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;4955:140;;;::::0;-1:-1:-1;;;4955:140:3;;12513:2:68;4955:140:3::1;::::0;::::1;12495:21:68::0;12552:2;12532:18;;;12525:30;12591:34;12571:18;;;12564:62;-1:-1:-1;;;12642:18:68;;;12635:31;12683:19;;4955:140:3::1;12311:397:68::0;4955:140:3::1;5105:17;5125:12;5134:3;5125:6:::0;:12:::1;:::i;:::-;5105:32;;5204:6;5181:7;:19;;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5220:70:3::1;::::0;-1:-1:-1;5259:10:3::1;5271:18;5280:9:::0;5271:6;:18:::1;:::i;:::-;5227:4;:17:::0;-1:-1:-1;;;;;5227:17:3::1;::::0;5220:70;:38:::1;:70::i;:::-;5339:17;::::0;5307:4:::1;:17:::0;5300:68:::1;::::0;-1:-1:-1;;;;;5307:17:3;;::::1;::::0;5339::::1;5358:9:::0;5300:38:::1;:68::i;:::-;5399:4;:17:::0;5383:42:::1;::::0;828:25:68;;;-1:-1:-1;;;;;5399:17:3;;::::1;::::0;5383:42:::1;::::0;816:2:68;801:18;5383:42:3::1;;;;;;;4945:487;4846:586:::0;;:::o;1718:96::-;1308:6;;-1:-1:-1;;;;;1308:6:3;1318:10;1308:20;1300:45;;;;-1:-1:-1;;;1300:45:3;;12915:2:68;1300:45:3;;;12897:21:68;12954:2;12934:18;;;12927:30;-1:-1:-1;;;12973:18:68;;;12966:42;13025:18;;1300:45:3;12713:336:68;1300:45:3;1790:6:::1;:17:::0;;-1:-1:-1;;;;;;1790:17:3::1;-1:-1:-1::0;;;;;1790:17:3;;;::::1;::::0;;;::::1;::::0;;1718:96::o;12063:875::-;12159:10;12152:18;;;;:6;:18;;;;;:35;12142:45;;;12121:123;;;;-1:-1:-1;;;12121:123:3;;13256:2:68;12121:123:3;;;13238:21:68;13295:2;13275:18;;;13268:30;13334:33;13314:18;;;13307:61;13385:18;;12121:123:3;13054:355:68;12121:123:3;12409:30;;;12384:10;12352:16;;12298:10;12255:30;12291:18;;;:6;:18;;;;;:48;12255:30;;12409;12384:10;12352:16;12291:57;;12342:6;;12291:57;:::i;:::-;12290:78;;;;:::i;:::-;12289:105;;;;:::i;:::-;:150;;;;:::i;:::-;12288:158;;12443:3;12288:158;:::i;:::-;12482:21;;12255:191;;-1:-1:-1;12456:47:3;;12255:191;12456:47;:::i;:::-;12539:27;;12456:47;;-1:-1:-1;12513:53:3;;12456:47;12513:53;:::i;:::-;12604:10;12597:18;;;;:6;:18;;;;;:29;;;12513:53;;-1:-1:-1;12597:55:3;-1:-1:-1;12597:55:3;12576:133;;;;-1:-1:-1;;;12576:133:3;;13616:2:68;12576:133:3;;;13598:21:68;13655:2;13635:18;;;13628:30;13694:33;13674:18;;;13667:61;13745:18;;12576:133:3;13414:355:68;12576:133:3;12726:10;12719:18;;;;:6;:18;;;;;:45;;12758:6;;12719:18;:45;;12758:6;;12719:45;:::i;:::-;;;;-1:-1:-1;;12774:7:3;:35;;12803:6;;12774:7;:25;;:35;;12803:6;;12774:35;:::i;:::-;;;;-1:-1:-1;;12826:10:3;:23;12819:64;;-1:-1:-1;;;;;12826:23:3;12864:10;12876:6;12819:44;:64::i;:::-;12898:33;;828:25:68;;;12912:10:3;;12898:33;;816:2:68;801:18;12898:33:3;682:177:68;3337:103:0;3403:30;3414:4;719:10:8;3403::0;:30::i;910:241:30:-;1075:68;;-1:-1:-1;;;;;14032:15:68;;;1075:68:30;;;14014:34:68;14084:15;;14064:18;;;14057:43;14116:18;;;14109:34;;;1048:96:30;;1068:5;;-1:-1:-1;;;1098:27:30;13949:18:68;;1075:68:30;;;;-1:-1:-1;;1075:68:30;;;;;;;;;;;;;;-1:-1:-1;;;;;1075:68:30;-1:-1:-1;;;;;;1075:68:30;;;;;;;;;;1048:19;:96::i;:::-;910:241;;;;:::o;2599:212:0:-;2684:4;-1:-1:-1;;;;;;2707:47:0;;-1:-1:-1;;;2707:47:0;;:97;;-1:-1:-1;2758:15:0;;:46;;-1:-1:-1;;;2758:46:0;;-1:-1:-1;;;;;;14316:33:68;;2758:46:0;;;14298:52:68;-1:-1:-1;;;;;2758:15:0;;;;:33;;14271:18:68;;2758:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1960:166:1:-;2047:31;2064:4;2070:7;2047:16;:31::i;:::-;2088:18;;;;:12;:18;;;;;:31;;2111:7;2088:22;:31::i;699:205:30:-;838:58;;-1:-1:-1;;;;;14835:32:68;;838:58:30;;;14817:51:68;14884:18;;;14877:34;;;811:86:30;;831:5;;-1:-1:-1;;;861:23:30;14790:18:68;;838:58:30;14643:274:68;2215:171:1;2303:32;2321:4;2327:7;2303:17;:32::i;:::-;2345:18;;;;:12;:18;;;;;:34;;2371:7;2345:25;:34::i;6643:110:0:-;6721:25;6732:4;6738:7;6721:10;:25::i;8870:156:16:-;8944:7;8994:22;8998:3;9010:5;8994:3;:22::i;8413:115::-;8476:7;8502:19;8510:3;4028:18;;3946:107;3721:492:0;3809:22;3817:4;3823:7;3809;:22::i;:::-;3804:403;;3992:41;4020:7;-1:-1:-1;;;;;3992:41:0;4030:2;3992:19;:41::i;:::-;4104:38;4132:4;4139:2;4104:19;:38::i;:::-;3899:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3899:265:0;;;;;;;;;;-1:-1:-1;;;3847:349:0;;;;;;;:::i;3205:706:30:-;3624:23;3650:69;3678:4;3650:69;;;;;;;;;;;;;;;;;3658:5;-1:-1:-1;;;;;3650:27:30;;;:69;;;;;:::i;:::-;3733:17;;3624:95;;-1:-1:-1;3733:21:30;3729:176;;3828:10;3817:30;;;;;;;;;;;;:::i;:::-;3809:85;;;;-1:-1:-1;;;3809:85:30;;15915:2:68;3809:85:30;;;15897:21:68;15954:2;15934:18;;;15927:30;15993:34;15973:18;;;15966:62;-1:-1:-1;;;16044:18:68;;;16037:40;16094:19;;3809:85:30;15713:406:68;7247:233:0;7330:22;7338:4;7344:7;7330;:22::i;:::-;7325:149;;7368:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7368:29:0;;;;;;;;;:36;;-1:-1:-1;;7368:36:0;7400:4;7368:36;;;7450:12;719:10:8;;640:96;7450:12:0;-1:-1:-1;;;;;7423:40:0;7441:7;-1:-1:-1;;;;;7423:40:0;7435:4;7423:40;;;;;;;;;;7247:233;;:::o;7612:150:16:-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:16;;7705:4;:50::i;7605:234:0:-;7688:22;7696:4;7702:7;7688;:22::i;:::-;7684:149;;;7758:5;7726:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7726:29:0;;;;;;;;;;:37;;-1:-1:-1;;7726:37:0;;;7782:40;719:10:8;;7726:12:0;;7782:40;;7758:5;7782:40;7605:234;;:::o;7930:156:16:-;8003:4;8026:53;8034:3;-1:-1:-1;;;;;8054:23:16;;8026:7;:53::i;4395:118::-;4462:7;4488:3;:11;;4500:5;4488:18;;;;;;;;:::i;:::-;;;;;;;;;4481:25;;4395:118;;;;:::o;1588:441:33:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:33;;1688:47;;-1:-1:-1;;;1745:6:33;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:33;;;;;;;;;-1:-1:-1;;;1770:6:33;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:33;;;;;;;;-1:-1:-1;1800:9:33;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:33;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:33;;;;;;;;-1:-1:-1;1915:1:33;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:33;;1936:55;;;;-1:-1:-1;;;1936:55:33;;16599:2:68;1936:55:33;;;16581:21:68;;;16618:18;;;16611:30;16677:34;16657:18;;;16650:62;16729:18;;1936:55:33;16397:356:68;3846:223:2;3979:12;4010:52;4032:6;4040:4;4046:1;4049:12;4010:21;:52::i;:::-;4003:59;3846:223;-1:-1:-1;;;;3846:223:2:o;1697:404:16:-;1760:4;3834:19;;;:12;;;:19;;;;;;1776:319;;-1:-1:-1;1818:23:16;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:16;2072:12;;2269:1388;2335:4;2472:19;;;:12;;;:19;;;;;;2506:15;;2502:1149;;2875:21;2899:14;2912:1;2899:10;:14;:::i;:::-;2947:18;;2875:38;;-1:-1:-1;2927:17:16;;2947:22;;2968:1;;2947:22;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;;;:::i;:::-;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3288:23;;;:12;;;:23;;;;;:36;;;2984:398;3460:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;;;4933:499:2;5098:12;5155:5;5130:21;:30;;5122:81;;;;-1:-1:-1;;;5122:81:2;;17092:2:68;5122:81:2;;;17074:21:68;17131:2;17111:18;;;17104:30;17170:34;17150:18;;;17143:62;-1:-1:-1;;;17221:18:68;;;17214:36;17267:19;;5122:81:2;16890:402:68;5122:81:2;-1:-1:-1;;;;;1450:19:2;;;5213:60;;;;-1:-1:-1;;;5213:60:2;;17499:2:68;5213:60:2;;;17481:21:68;17538:2;17518:18;;;17511:30;17577:31;17557:18;;;17550:59;17626:18;;5213:60:2;17297:353:68;5213:60:2;5285:12;5299:23;5326:6;-1:-1:-1;;;;;5326:11:2;5345:5;5352:4;5326:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5284:73;;;;5374:51;5391:7;5400:10;5412:12;5374:16;:51::i;:::-;5367:58;4933:499;-1:-1:-1;;;;;;;4933:499:2:o;7546:692::-;7692:12;7720:7;7716:516;;;-1:-1:-1;7750:10:2;7743:17;;7716:516;7861:17;;:21;7857:365;;8055:10;8049:17;8115:15;8102:10;8098:2;8094:19;8087:44;7857:365;8194:12;8187:20;;-1:-1:-1;;;8187:20:2;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:68;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:68;;14:180;-1:-1:-1;14:180:68:o;199:286::-;257:6;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;352:23;;-1:-1:-1;;;;;;404:32:68;;394:43;;384:71;;451:1;448;441:12;864:258;936:1;946:113;960:6;957:1;954:13;946:113;;;1036:11;;;1030:18;1017:11;;;1010:39;982:2;975:10;946:113;;;1077:6;1074:1;1071:13;1068:48;;;-1:-1:-1;;1112:1:68;1094:16;;1087:27;864:258::o;1127:383::-;1276:2;1265:9;1258:21;1239:4;1308:6;1302:13;1351:6;1346:2;1335:9;1331:18;1324:34;1367:66;1426:6;1421:2;1410:9;1406:18;1401:2;1393:6;1389:15;1367:66;:::i;:::-;1494:2;1473:15;-1:-1:-1;;1469:29:68;1454:45;;;;1501:2;1450:54;;1127:383;-1:-1:-1;;1127:383:68:o;1515:131::-;-1:-1:-1;;;;;1590:31:68;;1580:42;;1570:70;;1636:1;1633;1626:12;1651:134;1719:20;;1748:31;1719:20;1748:31;:::i;1790:247::-;1849:6;1902:2;1890:9;1881:7;1877:23;1873:32;1870:52;;;1918:1;1915;1908:12;1870:52;1957:9;1944:23;1976:31;2001:5;1976:31;:::i;2409:315::-;2477:6;2485;2538:2;2526:9;2517:7;2513:23;2509:32;2506:52;;;2554:1;2551;2544:12;2506:52;2590:9;2577:23;2567:33;;2650:2;2639:9;2635:18;2622:32;2663:31;2688:5;2663:31;:::i;:::-;2713:5;2703:15;;;2409:315;;;;;:::o;2937:452::-;3023:6;3031;3039;3047;3100:3;3088:9;3079:7;3075:23;3071:33;3068:53;;;3117:1;3114;3107:12;3068:53;3156:9;3143:23;3175:31;3200:5;3175:31;:::i;:::-;3225:5;3277:2;3262:18;;3249:32;;-1:-1:-1;3328:2:68;3313:18;;3300:32;;3379:2;3364:18;3351:32;;-1:-1:-1;2937:452:68;-1:-1:-1;;;2937:452:68:o;3728:127::-;3789:10;3784:3;3780:20;3777:1;3770:31;3820:4;3817:1;3810:15;3844:4;3841:1;3834:15;3860:1559;4009:6;4017;4025;4033;4041;4049;4057;4065;4073;4126:3;4114:9;4105:7;4101:23;4097:33;4094:53;;;4143:1;4140;4133:12;4094:53;4182:9;4169:23;4201:31;4226:5;4201:31;:::i;:::-;4251:5;-1:-1:-1;4307:2:68;4292:18;;4279:32;4330:18;4360:14;;;4357:34;;;4387:1;4384;4377:12;4357:34;4425:6;4414:9;4410:22;4400:32;;4470:7;4463:4;4459:2;4455:13;4451:27;4441:55;;4492:1;4489;4482:12;4441:55;4528:2;4515:16;4550:2;4546;4543:10;4540:36;;;4556:18;;:::i;:::-;4631:2;4625:9;4599:2;4685:13;;-1:-1:-1;;4681:22:68;;;4705:2;4677:31;4673:40;4661:53;;;4729:18;;;4749:22;;;4726:46;4723:72;;;4775:18;;:::i;:::-;4815:10;4811:2;4804:22;4850:2;4842:6;4835:18;4890:7;4885:2;4880;4876;4872:11;4868:20;4865:33;4862:53;;;4911:1;4908;4901:12;4862:53;4967:2;4962;4958;4954:11;4949:2;4941:6;4937:15;4924:46;5012:1;5007:2;5002;4994:6;4990:15;4986:24;4979:35;5033:6;5023:16;;;;;;;5086:2;5075:9;5071:18;5058:32;5048:42;;5137:2;5126:9;5122:18;5109:32;5099:42;;5188:3;5177:9;5173:19;5160:33;5150:43;;5240:3;5229:9;5225:19;5212:33;5202:43;;5292:3;5281:9;5277:19;5264:33;5254:43;;5316:39;5350:3;5339:9;5335:19;5316:39;:::i;:::-;5306:49;;5374:39;5408:3;5397:9;5393:19;5374:39;:::i;:::-;5364:49;;3860:1559;;;;;;;;;;;:::o;5424:248::-;5492:6;5500;5553:2;5541:9;5532:7;5528:23;5524:32;5521:52;;;5569:1;5566;5559:12;5521:52;-1:-1:-1;;5592:23:68;;;5662:2;5647:18;;;5634:32;;-1:-1:-1;5424:248:68:o;6001:341::-;6203:2;6185:21;;;6242:2;6222:18;;;6215:30;-1:-1:-1;;;6276:2:68;6261:18;;6254:47;6333:2;6318:18;;6001:341::o;6347:127::-;6408:10;6403:3;6399:20;6396:1;6389:31;6439:4;6436:1;6429:15;6463:4;6460:1;6453:15;6479:128;6519:3;6550:1;6546:6;6543:1;6540:13;6537:39;;;6556:18;;:::i;:::-;-1:-1:-1;6592:9:68;;6479:128::o;6612:380::-;6691:1;6687:12;;;;6734;;;6755:61;;6809:4;6801:6;6797:17;6787:27;;6755:61;6862:2;6854:6;6851:14;6831:18;6828:38;6825:161;;;6908:10;6903:3;6899:20;6896:1;6889:31;6943:4;6940:1;6933:15;6971:4;6968:1;6961:15;6825:161;;6612:380;;;:::o;6997:168::-;7037:7;7103:1;7099;7095:6;7091:14;7088:1;7085:21;7080:1;7073:9;7066:17;7062:45;7059:71;;;7110:18;;:::i;:::-;-1:-1:-1;7150:9:68;;6997:168::o;7170:217::-;7210:1;7236;7226:132;;7280:10;7275:3;7271:20;7268:1;7261:31;7315:4;7312:1;7305:15;7343:4;7340:1;7333:15;7226:132;-1:-1:-1;7372:9:68;;7170:217::o;8098:125::-;8138:4;8166:1;8163;8160:8;8157:34;;;8171:18;;:::i;:::-;-1:-1:-1;8208:9:68;;8098:125::o;8980:184::-;9050:6;9103:2;9091:9;9082:7;9078:23;9074:32;9071:52;;;9119:1;9116;9109:12;9071:52;-1:-1:-1;9142:16:68;;8980:184;-1:-1:-1;8980:184:68:o;14361:277::-;14428:6;14481:2;14469:9;14460:7;14456:23;14452:32;14449:52;;;14497:1;14494;14487:12;14449:52;14529:9;14523:16;14582:5;14575:13;14568:21;14561:5;14558:32;14548:60;;14604:1;14601;14594:12;14922:786;15333:25;15328:3;15321:38;15303:3;15388:6;15382:13;15404:62;15459:6;15454:2;15449:3;15445:12;15438:4;15430:6;15426:17;15404:62;:::i;:::-;-1:-1:-1;;;15525:2:68;15485:16;;;15517:11;;;15510:40;15575:13;;15597:63;15575:13;15646:2;15638:11;;15631:4;15619:17;;15597:63;:::i;:::-;15680:17;15699:2;15676:26;;14922:786;-1:-1:-1;;;;14922:786:68:o;16124:127::-;16185:10;16180:3;16176:20;16173:1;16166:31;16216:4;16213:1;16206:15;16240:4;16237:1;16230:15;16256:136;16295:3;16323:5;16313:39;;16332:18;;:::i;:::-;-1:-1:-1;;;16368:18:68;;16256:136::o;16758:127::-;16819:10;16814:3;16810:20;16807:1;16800:31;16850:4;16847:1;16840:15;16874:4;16871:1;16864:15;17655:274;17784:3;17822:6;17816:13;17838:53;17884:6;17879:3;17872:4;17864:6;17860:17;17838:53;:::i;:::-;17907:16;;;;;17655:274;-1:-1:-1;;17655:274:68:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addKeeper(address)": {
        "details": "Allows admin to add address to keeper role",
        "params": {
          "keeper": "address of new keeper"
        }
      },
      "addReporter(address)": {
        "details": "Allows admin to add address to price updater role",
        "params": {
          "updater": "address of new price updater"
        }
      },
      "getCollateralTokenAddress()": {
        "details": "Getter function for debt token address",
        "returns": {
          "_0": "debt token price"
        }
      },
      "getCollateralTokenLastUpdatedAt()": {
        "details": "Getter function for the collateral token last update time",
        "returns": {
          "_0": "collateral token last update time"
        }
      },
      "getCollateralTokenPrice()": {
        "details": "Getter function for the collateral token price",
        "returns": {
          "_0": "collateral token price"
        }
      },
      "getCollateralTokenPriceGranularity()": {
        "details": "Getter function for the collateral token price granularity",
        "returns": {
          "_0": "collateral token price granularity"
        }
      },
      "getCollateralizationRatio()": {
        "details": "Getter function for the current collateralization ratio",
        "returns": {
          "_0": "collateralization ratio"
        }
      },
      "getDebtTokenAddress()": {
        "details": "Getter function for debt token address",
        "returns": {
          "_0": "debt token price"
        }
      },
      "getDebtTokenLastUpdatedAt()": {
        "details": "Getter function for the debt token last update time",
        "returns": {
          "_0": "debt token last update time"
        }
      },
      "getDebtTokenPrice()": {
        "details": "Getter function for the debt token(reserve) price",
        "returns": {
          "_0": "debt token price"
        }
      },
      "getDebtTokenPriceGranularity()": {
        "details": "Getter function for the debt token price granularity",
        "returns": {
          "_0": "debt token price granularity"
        }
      },
      "getInterestRate()": {
        "details": "Getter function for the current interest rate",
        "returns": {
          "_0": "interest rate"
        }
      },
      "getLiquidationPenalty()": {
        "details": "Getter function for the liquidation penalty",
        "returns": {
          "_0": "liquidation penalty"
        }
      },
      "getName()": {
        "details": "Getter function for the bank name",
        "returns": {
          "_0": "bank name"
        }
      },
      "getOriginationFee()": {
        "details": "Getter function for the origination fee",
        "returns": {
          "_0": "origination fee"
        }
      },
      "getReserveBalance()": {
        "details": "Getter function for the debt token(reserve) balance",
        "returns": {
          "_0": "debt reserve balance"
        }
      },
      "getReserveCollateralBalance()": {
        "details": "Getter function for the debt reserve collateral balance",
        "returns": {
          "_0": "collateral reserve balance"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getVaultCollateralAmount()": {
        "details": "Getter function for the user's vault collateral amount",
        "returns": {
          "_0": "collateral amount"
        }
      },
      "getVaultCollateralizationRatio(address)": {
        "details": "Getter function for the collateralization ratio",
        "returns": {
          "_0": "collateralization ratio"
        }
      },
      "getVaultDebtAmount()": {
        "details": "Getter function for the user's vault debt amount",
        "returns": {
          "_0": "debt amount"
        }
      },
      "getVaultRepayAmount()": {
        "details": "Getter function for the user's vault debt amount   uses a simple interest formula (i.e. not compound  interest)",
        "returns": {
          "principal": "debt amount"
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "init(address,string,uint256,uint256,uint256,uint256,uint256,address,address)": {
        "details": "This function sets the fundamental parameters for the bank      and assigns the first admin"
      },
      "liquidate(address)": {
        "details": "Only keepers or admins can use this function to liquidate a vault's debt, the bank admins gets the collateral liquidated, liquidated collateral is charged a 10% fee which gets paid to the bankFactoryOwner",
        "params": {
          "vaultOwner": "is the user the bank admins wants to liquidate"
        }
      },
      "owner()": {
        "details": "Returns the owner of the bank"
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "reserveDeposit(uint256)": {
        "details": "This function allows the Bank owner to deposit the reserve (debt tokens)",
        "params": {
          "amount": "is the amount to deposit"
        }
      },
      "reserveWithdraw(uint256)": {
        "details": "This function allows the Bank owner to withdraw the reserve (debt tokens)      Withdraws incur a 0.5% fee paid to the bankFactoryOwner",
        "params": {
          "amount": "is the amount to withdraw"
        }
      },
      "reserveWithdrawCollateral(uint256)": {
        "details": "This function allows the user to withdraw their collateral Withdraws incur a 0.5% fee paid to the bankFactoryOwner",
        "params": {
          "amount": "is the amount to withdraw"
        }
      },
      "revokeKeeper(address)": {
        "details": "Allows admin to remove address from keeper role",
        "params": {
          "oldKeeper": "address of old keeper"
        }
      },
      "revokeReporter(address)": {
        "details": "Allows admin to remove address from price updater role",
        "params": {
          "oldUpdater": "address of old price updater"
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setCollateral(address,uint256,uint256,uint256)": {
        "details": "This function sets the collateral token properties, only callable one time"
      },
      "setDebt(address,uint256,uint256,uint256)": {
        "details": "This function sets the debt token properties, only callable one time"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner. NOTE: Override this to add changing the"
      },
      "updateCollateralPrice()": {
        "details": "Use this function to get and update the price for the collateral token using the Tellor Oracle."
      },
      "updateDebtPrice()": {
        "details": "Use this function to get and update the price for the debt token using the Tellor Oracle."
      },
      "vaultBorrow(uint256)": {
        "details": "Use this function to allow users to borrow against their collateral",
        "params": {
          "amount": "to borrow"
        }
      },
      "vaultDeposit(uint256)": {
        "details": "Use this function to allow users to deposit collateral to the vault",
        "params": {
          "amount": "is the collateral amount"
        }
      },
      "vaultRepay(uint256)": {
        "details": "This function allows users to pay the interest and origination fee to the  vault before being able to withdraw",
        "params": {
          "amount": "owed"
        }
      },
      "vaultWithdraw(uint256)": {
        "details": "Allows users to withdraw their collateral from the vault",
        "params": {
          "amount": "withdrawn"
        }
      }
    },
    "title": "Bank This contract allows the owner to deposit reserves(debt token), earn interest and origination fees from users that borrow against their collateral. The oracle for Bank is Tellor.",
    "version": 1
  },
  "offset": [
    464,
    14905
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x326 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x685A5808 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB71D7A6E GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xDD8755F2 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF327E324 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF327E324 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0xF91614EB EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xFB839DDA EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0xFC2E39A6 EQ PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD8755F2 EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xEC5E5E7D EQ PUSH2 0x6B6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA15C873 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xCB765C1D EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0xD267974C EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB71D7A6E EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0xC14D0454 EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0xC969AC06 EQ PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8CDCC955 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xA622EE7C EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xA860988C EQ PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8CDCC955 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x685A5808 EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0x6D483FE6 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x70C12F1E EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x7649B938 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x85B4E543 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x86EF5738 EQ PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x45FD80E4 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x4FD88951 GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x4FD88951 EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x5257B566 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x53388F44 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x5729B394 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45FD80E4 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x494F4188 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0x4B272D9A EQ PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x38507FF5 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x3F60D799 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x3FCAD964 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x4032B72B EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x435726C4 EQ PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E522B29 GT PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x2F865568 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x2F865568 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x3149CB14 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x317C9E42 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x364BC15A EQ PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E522B29 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x91A446 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x8DCD7C6 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x15143950 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x1B9084B4 EQ PUSH2 0x397 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33E PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x353 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x2727 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x38A PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x277D JUMP JUMPDEST PUSH2 0x36C PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x27ED JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST PUSH2 0x33E PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH1 0x4D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x44B CALLDATASIZE PUSH1 0x4 PUSH2 0x27ED JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x45E CALLDATASIZE PUSH1 0x4 PUSH2 0x281D JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x36C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x48B PUSH2 0x486 CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x35F JUMP JUMPDEST PUSH2 0x33E PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x4C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH2 0x33E PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x109D JUMP JUMPDEST PUSH2 0x33E PUSH2 0x4F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x33E PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x408 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x286E JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH2 0x33E PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x174E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x33E PUSH2 0x59F CALLDATASIZE PUSH1 0x4 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x408 JUMP JUMPDEST PUSH2 0x408 PUSH2 0x5C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2984 JUMP JUMPDEST PUSH2 0x182D JUMP JUMPDEST PUSH2 0x353 PUSH2 0x5D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x27ED JUMP JUMPDEST PUSH2 0x184C JUMP JUMPDEST PUSH2 0x36C PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x611 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x35F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x657 CALLDATASIZE PUSH1 0x4 PUSH2 0x281D JUMP JUMPDEST PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x36C PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x408 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x69E CALLDATASIZE PUSH1 0x4 PUSH2 0x27ED JUMP JUMPDEST PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6FA CALLDATASIZE PUSH1 0x4 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x73B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xF PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH2 0x76D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x71EB3E5DF75EF293B81B4C7B38DB51F7A6CEC007D12529CB74D4EAFB7FA53222 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7C9 JUMPI POP PUSH2 0x7C9 DUP3 PUSH2 0x1E79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7DE SWAP1 PUSH2 0x29FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x80A SWAP1 PUSH2 0x29FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x857 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x857 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x889 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x8FE SWAP1 PUSH2 0x2710 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x928 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH2 0x932 DUP4 DUP4 PUSH2 0x1F0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x94F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x184C JUMP JUMPDEST DUP1 PUSH2 0x960 JUMPI POP PUSH2 0x960 PUSH1 0x0 CALLER PUSH2 0x184C JUMP JUMPDEST PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x3737BA1035B2B2B832B91037B91030B236B4B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x9B0 SWAP1 PUSH1 0x64 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x9B9 DUP3 PUSH2 0x861 JUMP JUMPDEST LT PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5641554C54204E4F5420554E444552434F4C4C41544552414C495A4544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 PUSH1 0x64 SWAP2 DUP3 SWAP2 SWAP1 PUSH2 0xA37 SWAP1 DUP4 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0xA41 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0xA4B SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0xA55 SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0xA91 SWAP1 DUP5 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0xAD9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0xAE6 PUSH1 0xA DUP4 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP PUSH2 0xAF2 DUP2 DUP4 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB04 SWAP1 DUP5 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB31 SWAP1 DUP5 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SSTORE PUSH1 0x4D SLOAD PUSH1 0x9 SLOAD PUSH2 0xB68 SWAP3 SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1F2D JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6DD29D11F8D1BCDBD79DA21BF92895417DCC2F8886B3DB11C8A4CE00B73DE9D0 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBA3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xC21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0xC2B DUP3 DUP3 PUSH2 0x1F5D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3A DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0xC5B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2173657461626C65 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xB SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD PUSH4 0x11BBB871 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH4 0x46EEE1C4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x2A92 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH4 0x77FBB663 DUP9 PUSH2 0xD5A PUSH1 0x1 DUP7 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBF SWAP2 SWAP1 PUSH2 0x2A92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x93FA4915 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x93FA4915 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE35 SWAP2 SWAP1 PUSH2 0x2A92 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE4D JUMPI PUSH1 0x1 SWAP7 POP SWAP5 POP SWAP3 POP PUSH2 0xE5A SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP6 POP DUP6 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1BDC195C985D1A5BDB881B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0xEC7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x90D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0xF SLOAD DUP3 GT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F5420454E4F55474820434F4C4C41544552414C20494E2052455345525645 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF34 PUSH1 0xC8 DUP5 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xF PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x529AFC4538720FE0B3EADC40486369AB962002D72FEAD1387B300C66073E7BF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xFB3 CALLER PUSH2 0xFA0 DUP4 DUP7 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x4D SLOAD PUSH1 0x9 SLOAD PUSH2 0x932 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0xFE8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x184C JUMP JUMPDEST DUP1 PUSH2 0xFF9 JUMPI POP PUSH2 0xFF9 PUSH1 0x0 CALLER PUSH2 0x184C JUMP JUMPDEST PUSH2 0x1045 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F742070726963652075706461746572206F722061646D696E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1051 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH32 0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xEC7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x4D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x110F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4953204E4F542042414E4B20464143544F5259204F574E455200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x4D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x1165 JUMPI PUSH2 0x1151 PUSH2 0x1877 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x4 SLOAD PUSH1 0xA SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 SWAP3 SWAP2 PUSH2 0x118B SWAP2 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x119F SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x11AA SWAP1 PUSH1 0x64 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x11BA SWAP1 DUP3 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x11CA SWAP1 DUP3 PUSH2 0x2A59 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x11EA SWAP1 DUP3 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 SWAP2 POP PUSH2 0x2710 SWAP1 PUSH2 0x11FE SWAP1 DUP5 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x1208 SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x1212 SWAP1 DUP4 PUSH2 0x29E7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1234 SWAP1 DUP5 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT PUSH2 0x1292 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1393D508115393D551D20810D3D313105511549053 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FE SWAP2 SWAP1 PUSH2 0x2A92 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E4F5420454E4F554748205245534552564553 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x16 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1364 SWAP1 TIMESTAMP PUSH2 0x2A7B JUMP JUMPDEST GT ISZERO PUSH2 0x1381 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE JUMPDEST DUP2 PUSH1 0xF PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH2 0x13B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x232862A021D33EA4A70F5D509B754F0F6986AAA0FFDD5C7DB4910422AFC768A SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x140C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x142B SWAP1 DUP5 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xF DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1445 SWAP1 DUP5 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH2 0x1462 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x89D28CF06BDB2EE1B92CD046D58450042AD113E9F4CDABFC4D43E7C5557758D7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x14AF JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST DUP1 PUSH2 0x14BD JUMPI POP PUSH1 0x1A SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420696E7374616E63652068617320616C7265616479206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x195B881A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1542 JUMPI PUSH1 0x1A DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x154D PUSH1 0x0 DUP12 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x11 DUP9 SWAP1 SSTORE PUSH1 0x12 DUP8 SWAP1 SSTORE PUSH1 0x13 DUP7 SWAP1 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x14 DUP8 SWAP1 SSTORE PUSH1 0x16 DUP7 SWAP1 SSTORE PUSH1 0x4D DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP9 MLOAD PUSH2 0x15A9 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP13 ADD SWAP1 PUSH2 0x2675 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x15BC JUMPI PUSH1 0x1A DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x15E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST PUSH2 0x15F0 PUSH2 0x1877 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE DUP2 GT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414E4E4F54205245504159204D4F5245205448414E204F5745440000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1676 SWAP1 DUP5 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1690 SWAP1 DUP5 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x16 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SWAP2 PUSH2 0x16B6 SWAP2 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x16C3 SWAP1 TIMESTAMP PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x16CD SWAP2 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 SWAP2 POP PUSH2 0x16DD SWAP1 DUP3 PUSH2 0x2A3A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x16FF SWAP1 DUP5 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH2 0x171C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x34D657CD4DEC79D6716CE5AC15B81DE5751705030CBEF01B43B15EAE44CBC112 SWAP1 PUSH1 0x20 ADD PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x1766 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x184C JUMP JUMPDEST DUP1 PUSH2 0x1777 JUMPI POP PUSH2 0x1777 PUSH1 0x0 CALLER PUSH2 0x184C JUMP JUMPDEST PUSH2 0x17C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F742070726963652075706461746572206F722061646D696E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x17CF SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH32 0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C SWAP1 PUSH1 0x20 ADD PUSH2 0x1093 JUMP JUMPDEST PUSH2 0xEC7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1845 SWAP1 DUP4 PUSH2 0x1F89 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x16 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x189E SWAP1 PUSH4 0x1E13380 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x16 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x18C2 SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x18CF SWAP1 TIMESTAMP PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x18D9 SWAP2 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x2710 PUSH1 0xF PUSH1 0x2 ADD SLOAD DUP7 PUSH2 0x18F1 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x18FB SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x1905 SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x190F SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x1919 SWAP1 DUP5 PUSH2 0x29E7 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x194C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST PUSH2 0x1983 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2173657461626C65 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x4 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x7C9 SWAP1 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x19E8 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH2 0x932 DUP4 DUP4 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1BDC195C985D1A5BDB881B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0xEC7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A63 DUP2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACF SWAP2 SWAP1 PUSH2 0x2A92 JUMP JUMPDEST LT ISZERO PUSH2 0x1B27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F5420454E4F554748204445425420544F4B454E5320494E20524553455256 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 PUSH1 0xC8 DUP5 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0xF PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B4B SWAP2 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1B72 SWAP1 POP CALLER PUSH2 0x1B5F DUP4 DUP7 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x4D SLOAD PUSH1 0x3 SLOAD PUSH2 0x1B8F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x529AFC4538720FE0B3EADC40486369AB962002D72FEAD1387B300C66073E7BF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24A9902727AA1027ABA722A9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1CA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414E4E4F54205749544844524157204D4F524520434F4C4C41544552414C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x4 SLOAD PUSH1 0xA SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC9 SWAP1 DUP7 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH2 0x1CD3 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x1CDD SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x1CE7 SWAP2 SWAP1 PUSH2 0x2A59 JUMP JUMPDEST PUSH2 0x1CF2 SWAP1 PUSH1 0x64 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x1D02 SWAP1 DUP3 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x1D12 SWAP1 DUP3 PUSH2 0x2A59 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x1D77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43414E4E4F5420554E444552434F4C4C41544552414C495A45205641554C5400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1D96 SWAP1 DUP5 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xF DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1DB0 SWAP1 DUP5 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH2 0x1DCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x1F2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xAC60FBF53B67F5A6A0C8031DD9D1610A06F01669B1A8B9AF98F3A6A477E8D7C SWAP1 PUSH1 0x20 ADD PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0xEC7 DUP2 CALLER PUSH2 0x1F9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1E73 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2003 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7C9 JUMPI POP PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST PUSH2 0x1F15 DUP3 DUP3 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x932 SWAP1 DUP3 PUSH2 0x215B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x932 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1E3C JUMP JUMPDEST PUSH2 0x1F67 DUP3 DUP3 PUSH2 0x2170 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x932 SWAP1 DUP3 PUSH2 0x21D7 JUMP JUMPDEST PUSH2 0xC2B DUP3 DUP3 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1845 DUP4 DUP4 PUSH2 0x21EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C9 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1FA9 DUP3 DUP3 PUSH2 0x184C JUMP JUMPDEST PUSH2 0xC2B JUMPI PUSH2 0x1FC1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0x1FCC DUP4 PUSH1 0x20 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FDD SWAP3 SWAP2 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x732 SWAP2 PUSH1 0x4 ADD PUSH2 0x277D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2058 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23B2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x932 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2076 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH2 0x20DF DUP3 DUP3 PUSH2 0x184C JUMP JUMPDEST PUSH2 0xC2B JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2117 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1845 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x23C9 JUMP JUMPDEST PUSH2 0x217A DUP3 DUP3 PUSH2 0x184C JUMP JUMPDEST ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1845 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2418 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2203 JUMPI PUSH2 0x2203 PUSH2 0x2B42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2225 DUP4 PUSH1 0x2 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x2230 SWAP1 PUSH1 0x2 PUSH2 0x29E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2248 JUMPI PUSH2 0x2248 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2272 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x228D JUMPI PUSH2 0x228D PUSH2 0x2B42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x22BC JUMPI PUSH2 0x22BC PUSH2 0x2B42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x22E0 DUP5 PUSH1 0x2 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x22EB SWAP1 PUSH1 0x1 PUSH2 0x29E7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2363 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x231F JUMPI PUSH2 0x231F PUSH2 0x2B42 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2335 JUMPI PUSH2 0x2335 PUSH2 0x2B42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x235C DUP2 PUSH2 0x2B58 JUMP JUMPDEST SWAP1 POP PUSH2 0x22EE JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x23C1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x250B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2410 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x7C9 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2501 JUMPI PUSH1 0x0 PUSH2 0x243C PUSH1 0x1 DUP4 PUSH2 0x2A7B JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2450 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x24B5 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2470 JUMPI PUSH2 0x2470 PUSH2 0x2B42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2493 JUMPI PUSH2 0x2493 PUSH2 0x2B42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x24C6 JUMPI PUSH2 0x24C6 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x256C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x25DF SWAP2 SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x261C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2631 DUP3 DUP3 DUP7 PUSH2 0x263C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x264B JUMPI POP DUP2 PUSH2 0x1845 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x265B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x277D JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2681 SWAP1 PUSH2 0x29FF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x26A3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x26E9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x26BC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x26E9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x26E9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x26E9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x26CE JUMP JUMPDEST POP PUSH2 0x26F5 SWAP3 SWAP2 POP PUSH2 0x26F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x26F5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x276C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2754 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E73 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x279C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2751 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x908 DUP2 PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1845 DUP2 PUSH2 0x27B0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2812 DUP2 PUSH2 0x27B0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x283E DUP2 PUSH2 0x27B0 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x288D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH2 0x2898 DUP2 PUSH2 0x27B0 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x28B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP13 ADD SWAP2 POP DUP13 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x28DB JUMPI PUSH2 0x28DB PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2903 JUMPI PUSH2 0x2903 PUSH2 0x2858 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP16 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x291C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP13 POP POP POP POP POP POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH2 0x2966 PUSH1 0xE0 DUP12 ADD PUSH2 0x27C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2975 PUSH2 0x100 DUP12 ADD PUSH2 0x27C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x416D6F756E74206973207A65726F202121 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x29FA JUMPI PUSH2 0x29FA PUSH2 0x29D1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2A34 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A54 JUMPI PUSH2 0x2A54 PUSH2 0x29D1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2A76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2A8D JUMPI PUSH2 0x2A8D PUSH2 0x29D1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2B05 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2751 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2B36 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2751 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2B67 JUMPI PUSH2 0x2B67 PUSH2 0x29D1 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2B97 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2751 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID ORIGIN DIV 0xC9 BLOCKHASH MOD CALLDATASIZE PUSH20 0x962B481A0395619B3DBBD137589C419E993978C1 0xC7 SHL 0xCF PUSH9 0xECFC8737AB85EB4512 MSIZE PUSH18 0x625A9EBDB75CC78E01D5C1FA80C4C6E5203F SELFBALANCE 0xBC 0x4F 0xAB LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xCD DUP13 GASLIMIT CODECOPY 0xBA SWAP4 0x27 OR 0xCC CODESIZE 0xEC 0xFC PUSH19 0x370A208AE591330C39E46DFB320304DCDBA964 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x326"
    },
    "25": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x685A5808"
    },
    "38": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8"
    },
    "42": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB71D7A6E"
    },
    "49": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "53": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD8755F2"
    },
    "60": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF327E324"
    },
    "71": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF327E324"
    },
    "82": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DC"
    },
    "86": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF91614EB"
    },
    "93": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "97": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFB839DDA"
    },
    "104": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6EC"
    },
    "108": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFC2E39A6"
    },
    "115": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "116": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6FF"
    },
    "119": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "120": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD8755F2"
    },
    "131": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A3"
    },
    "135": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xEC5E5E7D"
    },
    "142": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B6"
    },
    "146": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "153": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6C9"
    },
    "157": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCA15C873"
    },
    "169": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCA15C873"
    },
    "180": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x664"
    },
    "184": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCB765C1D"
    },
    "191": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x677"
    },
    "195": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD267974C"
    },
    "202": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x67F"
    },
    "206": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD547741F"
    },
    "213": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x690"
    },
    "217": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "222": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "224": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB71D7A6E"
    },
    "229": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x641"
    },
    "233": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "234": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "235": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC14D0454"
    },
    "240": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "241": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x649"
    },
    "244": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "246": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC969AC06"
    },
    "251": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65C"
    },
    "255": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "259": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "260": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "262": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8CDCC955"
    },
    "267": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "268": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171"
    },
    "271": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "272": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "273": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x91D14854"
    },
    "278": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "279": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "283": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "284": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x91D14854"
    },
    "289": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "290": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C8"
    },
    "293": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "294": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "295": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA217FDDF"
    },
    "300": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "301": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5DB"
    },
    "304": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "305": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "306": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA622EE7C"
    },
    "311": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "312": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E3"
    },
    "315": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "316": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "317": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA860988C"
    },
    "322": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "323": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62C"
    },
    "326": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "327": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "330": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "331": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "332": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "333": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8CDCC955"
    },
    "338": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "339": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x591"
    },
    "342": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "343": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "344": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "349": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "350": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A4"
    },
    "353": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "354": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "355": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9010D07C"
    },
    "360": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "361": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B5"
    },
    "364": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "365": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "367": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "368": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "369": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "370": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "371": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x685A5808"
    },
    "376": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "377": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x532"
    },
    "380": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "381": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "382": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6D483FE6"
    },
    "387": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "388": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x54A"
    },
    "391": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "392": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "393": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70C12F1E"
    },
    "398": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "399": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x55B"
    },
    "402": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "403": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "404": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7649B938"
    },
    "409": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "410": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x56E"
    },
    "413": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "414": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "415": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x85B4E543"
    },
    "420": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "421": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x581"
    },
    "424": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "425": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "426": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x86EF5738"
    },
    "431": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "432": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x589"
    },
    "435": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "436": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "438": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "439": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "440": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "441": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "442": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x36568ABE"
    },
    "447": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "448": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x277"
    },
    "451": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "452": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "453": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x45FD80E4"
    },
    "458": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "459": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x230"
    },
    "462": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "463": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "464": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4FD88951"
    },
    "469": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "470": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20A"
    },
    "473": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "474": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "475": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4FD88951"
    },
    "480": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "481": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4FC"
    },
    "484": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "485": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "486": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5257B566"
    },
    "491": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "492": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50F"
    },
    "495": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "496": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "497": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x53388F44"
    },
    "502": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "503": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x517"
    },
    "506": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "507": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "508": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5729B394"
    },
    "513": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "514": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51F"
    },
    "517": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "518": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "520": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "521": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "522": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "523": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "524": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x45FD80E4"
    },
    "529": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "530": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CE"
    },
    "533": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "534": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "535": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x494F4188"
    },
    "540": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "541": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D6"
    },
    "544": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "545": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "546": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4B272D9A"
    },
    "551": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "552": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E9"
    },
    "555": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "556": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "558": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "559": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "560": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "561": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "562": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x36568ABE"
    },
    "567": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "568": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43D"
    },
    "571": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "572": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "573": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x38507FF5"
    },
    "578": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "579": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x450"
    },
    "582": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "583": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "584": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3F60D799"
    },
    "589": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "590": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x463"
    },
    "593": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "594": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "595": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3FCAD964"
    },
    "600": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "601": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "604": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "605": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "606": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4032B72B"
    },
    "611": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "612": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A8"
    },
    "615": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "616": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "617": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x435726C4"
    },
    "622": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "623": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BB"
    },
    "626": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "627": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "629": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "630": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "631": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "632": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "633": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1E522B29"
    },
    "638": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "639": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E4"
    },
    "642": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "643": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "644": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2F865568"
    },
    "649": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "GT",
      "path": "3"
    },
    "650": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE"
    },
    "653": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "654": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "655": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2F865568"
    },
    "660": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "661": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "664": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "665": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "666": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3149CB14"
    },
    "671": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "672": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FB"
    },
    "675": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "676": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "677": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x317C9E42"
    },
    "682": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "683": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x420"
    },
    "686": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "687": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "688": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x364BC15A"
    },
    "693": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "694": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x428"
    },
    "697": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "698": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "700": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "701": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "702": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "703": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "704": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1E522B29"
    },
    "709": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "710": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AA"
    },
    "713": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "714": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "715": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x248A9CA3"
    },
    "720": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "721": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B2"
    },
    "724": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "725": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "726": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x2F2FF15D"
    },
    "731": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "732": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D5"
    },
    "735": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "736": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "738": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "739": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "740": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "741": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "742": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0x91A446"
    },
    "746": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "747": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32B"
    },
    "750": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "751": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "752": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1FFC9A7"
    },
    "757": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "758": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x340"
    },
    "761": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "762": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "763": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DCD7C6"
    },
    "768": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "769": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x368"
    },
    "772": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "773": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "774": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x15143950"
    },
    "779": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "780": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37A"
    },
    "783": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "784": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "785": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x17D7DE7C"
    },
    "790": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "791": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x382"
    },
    "794": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "795": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "796": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1B9084B4"
    },
    "801": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "EQ",
      "path": "3"
    },
    "802": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x397"
    },
    "805": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "806": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "807": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "809": {
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "DUP1",
      "path": "3"
    },
    "810": {
      "first_revert": true,
      "fn": null,
      "offset": [
        464,
        14905
      ],
      "op": "REVERT",
      "path": "3"
    },
    "811": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "812": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "815": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x339"
    },
    "818": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "819": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "821": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270E"
    },
    "824": {
      "fn": "Bank.reserveDeposit",
      "jump": "i",
      "offset": [
        4259,
        4623
      ],
      "op": "JUMP",
      "path": "3"
    },
    "825": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "826": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x707"
    },
    "829": {
      "fn": "Bank.reserveDeposit",
      "jump": "i",
      "offset": [
        4259,
        4623
      ],
      "op": "JUMP",
      "path": "3"
    },
    "830": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "831": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "STOP",
      "path": "3"
    },
    "832": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "833": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x353"
    },
    "836": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34E"
    },
    "839": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "840": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "842": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2727"
    },
    "845": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "i",
      "offset": [
        616,
        828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "846": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "847": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A4"
    },
    "850": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "i",
      "offset": [
        616,
        828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "851": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "852": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "854": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "855": {
      "op": "SWAP1"
    },
    "856": {
      "op": "ISZERO"
    },
    "857": {
      "op": "ISZERO"
    },
    "858": {
      "op": "DUP2"
    },
    "859": {
      "op": "MSTORE"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "862": {
      "op": "ADD"
    },
    "863": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "864": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "866": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "867": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "DUP1",
      "path": "1"
    },
    "868": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "869": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "SUB",
      "path": "1"
    },
    "870": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "871": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "RETURN",
      "path": "1"
    },
    "872": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "873": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2976,
        2997
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x5"
    },
    "875": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2976,
        2997
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "876": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "877": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "879": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "880": {
      "op": "SWAP1"
    },
    "881": {
      "op": "DUP2"
    },
    "882": {
      "op": "MSTORE"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "op": "ADD"
    },
    "886": {
      "fn": "BankStorage.getDebtTokenPriceGranularity",
      "offset": [
        2889,
        3004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35F"
    },
    "889": {
      "op": "JUMP"
    },
    "890": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3580,
        3685
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "891": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3662,
        3678
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0xA"
    },
    "893": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3662,
        3678
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "894": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3580,
        3685
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "897": {
      "fn": "BankStorage.getCollateralTokenPrice",
      "offset": [
        3580,
        3685
      ],
      "op": "JUMP",
      "path": "5"
    },
    "898": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "899": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38A"
    },
    "902": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7CF"
    },
    "905": {
      "fn": "BankStorage.getName",
      "jump": "i",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMP",
      "path": "5"
    },
    "906": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "907": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "909": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "910": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35F"
    },
    "913": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "914": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "915": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x277D"
    },
    "918": {
      "fn": "BankStorage.getName",
      "jump": "i",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMP",
      "path": "5"
    },
    "919": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "920": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "923": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A5"
    },
    "926": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "927": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "929": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27D0"
    },
    "932": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMP",
      "path": "5"
    },
    "933": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "934": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x861"
    },
    "937": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMP",
      "path": "5"
    },
    "938": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2229,
        2342
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "939": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2309,
        2335
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x14"
    },
    "941": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2309,
        2335
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "942": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2229,
        2342
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "945": {
      "fn": "BankStorage.getLiquidationPenalty",
      "offset": [
        2229,
        2342
      ],
      "op": "JUMP",
      "path": "5"
    },
    "946": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "947": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36C"
    },
    "950": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C0"
    },
    "953": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "954": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "956": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270E"
    },
    "959": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4394,
        4523
      ],
      "op": "JUMP",
      "path": "0"
    },
    "960": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "961": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4468,
        4475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "963": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 3
    },
    "964": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "965": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "966": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "968": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "970": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "971": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "973": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "974": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "975": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "977": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "ADD",
      "path": "0"
    },
    "978": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "979": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "980": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4394,
        4523
      ],
      "op": "JUMP",
      "path": "0"
    },
    "981": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "982": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "985": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E3"
    },
    "988": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "989": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "991": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27ED"
    },
    "994": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "995": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "996": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90D"
    },
    "999": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1000": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1001": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1004": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F6"
    },
    "1007": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1008": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1010": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D0"
    },
    "1013": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        7721,
        9084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1014": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1015": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x937"
    },
    "1018": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        7721,
        9084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1019": {
      "fn": "Bank.getBankFactoryOwner",
      "offset": [
        12944,
        13046
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1020": {
      "fn": "Bank.getBankFactoryOwner",
      "offset": [
        13022,
        13039
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x4D"
    },
    "1022": {
      "fn": "Bank.getBankFactoryOwner",
      "offset": [
        13022,
        13039
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "op": "SUB"
    },
    "1031": {
      "fn": "Bank.getBankFactoryOwner",
      "offset": [
        13022,
        13039
      ],
      "op": "AND",
      "path": "3"
    },
    "1032": {
      "fn": "Bank.getBankFactoryOwner",
      "offset": [
        12944,
        13046
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1033": {
      "fn": "Bank.getBankFactoryOwner",
      "offset": [
        12944,
        13046
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1035": {
      "fn": "Bank.getBankFactoryOwner",
      "offset": [
        12944,
        13046
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "op": "SWAP1"
    },
    "1045": {
      "op": "SWAP2"
    },
    "1046": {
      "op": "AND"
    },
    "1047": {
      "op": "DUP2"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "fn": "Bank.getBankFactoryOwner",
      "offset": [
        12944,
        13046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35F"
    },
    "1055": {
      "op": "JUMP"
    },
    "1056": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3828,
        3983
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1057": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3949,
        3976
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0xB"
    },
    "1059": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3949,
        3976
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1060": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3828,
        3983
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1063": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        3828,
        3983
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1064": {
      "offset": [
        379,
        441
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1065": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        379,
        441
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1070": {
      "op": "DUP1"
    },
    "1071": {
      "op": "MLOAD"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1074": {
      "op": "PUSH2",
      "value": "0x2BC2"
    },
    "1077": {
      "op": "DUP4"
    },
    "1078": {
      "op": "CODECOPY"
    },
    "1079": {
      "op": "DUP2"
    },
    "1080": {
      "op": "MLOAD"
    },
    "1081": {
      "op": "SWAP2"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "offset": [
        379,
        441
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1084": {
      "fn": "BankStorage.getCollateralTokenPriceGranularity",
      "offset": [
        379,
        441
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1085": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1086": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "1089": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44B"
    },
    "1092": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1093": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1095": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27ED"
    },
    "1098": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1099": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1100": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB1"
    },
    "1103": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1104": {
      "fn": "Bank.setCollateral",
      "offset": [
        2847,
        3478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1105": {
      "fn": "Bank.setCollateral",
      "offset": [
        2847,
        3478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1108": {
      "fn": "Bank.setCollateral",
      "offset": [
        2847,
        3478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45E"
    },
    "1111": {
      "fn": "Bank.setCollateral",
      "offset": [
        2847,
        3478
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1112": {
      "fn": "Bank.setCollateral",
      "offset": [
        2847,
        3478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1114": {
      "fn": "Bank.setCollateral",
      "offset": [
        2847,
        3478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x281D"
    },
    "1117": {
      "fn": "Bank.setCollateral",
      "jump": "i",
      "offset": [
        2847,
        3478
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1118": {
      "fn": "Bank.setCollateral",
      "offset": [
        2847,
        3478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1119": {
      "fn": "Bank.setCollateral",
      "offset": [
        2847,
        3478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC2F"
    },
    "1122": {
      "fn": "Bank.setCollateral",
      "jump": "i",
      "offset": [
        2847,
        3478
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1123": {
      "offset": [
        488,
        554
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1124": {
      "fn": "Bank.setCollateral",
      "offset": [
        488,
        554
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1129": {
      "op": "DUP1"
    },
    "1130": {
      "op": "MLOAD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x2BA2"
    },
    "1136": {
      "op": "DUP4"
    },
    "1137": {
      "op": "CODECOPY"
    },
    "1138": {
      "op": "DUP2"
    },
    "1139": {
      "op": "MLOAD"
    },
    "1140": {
      "op": "SWAP2"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "offset": [
        488,
        554
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1143": {
      "fn": "Bank.setCollateral",
      "offset": [
        488,
        554
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1144": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1145": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48B"
    },
    "1148": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x486"
    },
    "1151": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1152": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1154": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270E"
    },
    "1157": {
      "fn": "Bank.getCurrentValue",
      "jump": "i",
      "offset": [
        13238,
        13852
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1158": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1159": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC5"
    },
    "1162": {
      "fn": "Bank.getCurrentValue",
      "jump": "i",
      "offset": [
        13238,
        13852
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1163": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1164": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1166": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1167": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1168": {
      "op": "SWAP4"
    },
    "1169": {
      "op": "ISZERO"
    },
    "1170": {
      "op": "ISZERO"
    },
    "1171": {
      "op": "DUP5"
    },
    "1172": {
      "op": "MSTORE"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1175": {
      "op": "DUP5"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "SWAP3"
    },
    "1178": {
      "op": "SWAP1"
    },
    "1179": {
      "op": "SWAP3"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "SWAP1"
    },
    "1182": {
      "op": "DUP3"
    },
    "1183": {
      "op": "ADD"
    },
    "1184": {
      "op": "MSTORE"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35F"
    },
    "1191": {
      "op": "JUMP"
    },
    "1192": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1193": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1196": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B6"
    },
    "1199": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1200": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1202": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D0"
    },
    "1205": {
      "fn": "Bank.addKeeper",
      "jump": "i",
      "offset": [
        13972,
        14127
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1206": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1207": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE61"
    },
    "1210": {
      "fn": "Bank.addKeeper",
      "jump": "i",
      "offset": [
        13972,
        14127
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1211": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5628,
        6290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1212": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5628,
        6290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1215": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5628,
        6290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C9"
    },
    "1218": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5628,
        6290
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1219": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5628,
        6290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1221": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5628,
        6290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270E"
    },
    "1224": {
      "fn": "Bank.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        5628,
        6290
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1225": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5628,
        6290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1226": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5628,
        6290
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xECA"
    },
    "1229": {
      "fn": "Bank.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        5628,
        6290
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1230": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        6995,
        7396
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1231": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        6995,
        7396
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1234": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        6995,
        7396
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFD0"
    },
    "1237": {
      "fn": "Bank.updateDebtPrice",
      "jump": "i",
      "offset": [
        6995,
        7396
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1238": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14255,
        14356
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1239": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14255,
        14356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1242": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14255,
        14356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E4"
    },
    "1245": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14255,
        14356
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1246": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14255,
        14356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1248": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14255,
        14356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D0"
    },
    "1251": {
      "fn": "Bank.revokeKeeper",
      "jump": "i",
      "offset": [
        14255,
        14356
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1252": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14255,
        14356
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1253": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14255,
        14356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109D"
    },
    "1256": {
      "fn": "Bank.revokeKeeper",
      "jump": "i",
      "offset": [
        14255,
        14356
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1257": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13052,
        13232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1258": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13052,
        13232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1261": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13052,
        13232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F7"
    },
    "1264": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13052,
        13232
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1265": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13052,
        13232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1267": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13052,
        13232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D0"
    },
    "1270": {
      "fn": "Bank.setBankFactoryOwner",
      "jump": "i",
      "offset": [
        13052,
        13232
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1271": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13052,
        13232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1272": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13052,
        13232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10B5"
    },
    "1275": {
      "fn": "Bank.setBankFactoryOwner",
      "jump": "i",
      "offset": [
        13052,
        13232
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1276": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1277": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1280": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50A"
    },
    "1283": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1284": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1286": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270E"
    },
    "1289": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        9755,
        11005
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1290": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1291": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1131"
    },
    "1294": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        9755,
        11005
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1295": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1555,
        1656
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1296": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1629,
        1649
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x11"
    },
    "1298": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1629,
        1649
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1299": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1555,
        1656
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1302": {
      "fn": "BankStorage.getInterestRate",
      "offset": [
        1555,
        1656
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1303": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4124,
        4245
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1304": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4214,
        4238
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0xE"
    },
    "1306": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4214,
        4238
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1307": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4124,
        4245
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1310": {
      "fn": "BankStorage.getCollateralTokenLastUpdatedAt",
      "offset": [
        4124,
        4245
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1311": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1312": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1315": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x52D"
    },
    "1318": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1319": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1321": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270E"
    },
    "1324": {
      "fn": "Bank.vaultDeposit",
      "jump": "i",
      "offset": [
        9232,
        9622
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1325": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1326": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13EC"
    },
    "1329": {
      "fn": "Bank.vaultDeposit",
      "jump": "i",
      "offset": [
        9232,
        9622
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1330": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5076,
        5189
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1331": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5160,
        5170
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 8
    },
    "1332": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5127,
        5134
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1334": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1335": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1336": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1337": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1339": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1341": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1342": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1344": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1345": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5171
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1346": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5182
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1348": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5182
      ],
      "op": "ADD",
      "path": "5"
    },
    "1349": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5153,
        5182
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1350": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5076,
        5189
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1353": {
      "fn": "BankStorage.getVaultDebtAmount",
      "offset": [
        5076,
        5189
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1354": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3347,
        3461
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1355": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3431,
        3441
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x9"
    },
    "1357": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3431,
        3454
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3431,
        3454
      ],
      "op": "AND",
      "path": "5"
    },
    "1367": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3347,
        3461
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x408"
    },
    "1370": {
      "fn": "BankStorage.getCollateralTokenAddress",
      "offset": [
        3347,
        3461
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1371": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1372": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1375": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x569"
    },
    "1378": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1379": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1381": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x286E"
    },
    "1384": {
      "fn": "Bank.init",
      "jump": "i",
      "offset": [
        1947,
        2738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1385": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1386": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x149A"
    },
    "1389": {
      "fn": "Bank.init",
      "jump": "i",
      "offset": [
        1947,
        2738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1390": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11183,
        11941
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1391": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11183,
        11941
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1394": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11183,
        11941
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57C"
    },
    "1397": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11183,
        11941
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1398": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11183,
        11941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1400": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11183,
        11941
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270E"
    },
    "1403": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11183,
        11941
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1404": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11183,
        11941
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1405": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11183,
        11941
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15C8"
    },
    "1408": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11183,
        11941
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1409": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6427,
        6864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1410": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6427,
        6864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1413": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6427,
        6864
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x174E"
    },
    "1416": {
      "fn": "Bank.updateCollateralPrice",
      "jump": "i",
      "offset": [
        6427,
        6864
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1417": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        1995,
        2116
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1418": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        2079,
        2109
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x13"
    },
    "1420": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        2079,
        2109
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1421": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        1995,
        2116
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1424": {
      "fn": "BankStorage.getCollateralizationRatio",
      "offset": [
        1995,
        2116
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1425": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14796,
        14903
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1426": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14796,
        14903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1429": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14796,
        14903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59F"
    },
    "1432": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14796,
        14903
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1433": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14796,
        14903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1435": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14796,
        14903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D0"
    },
    "1438": {
      "fn": "Bank.revokeReporter",
      "jump": "i",
      "offset": [
        14796,
        14903
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1439": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14796,
        14903
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1440": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14796,
        14903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1815"
    },
    "1443": {
      "fn": "Bank.revokeReporter",
      "jump": "i",
      "offset": [
        14796,
        14903
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1444": {
      "fn": "Bank.owner",
      "offset": [
        1445,
        1522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1445": {
      "fn": "Bank.owner",
      "offset": [
        1483,
        1490
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1447": {
      "fn": "Bank.owner",
      "offset": [
        1509,
        1515
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 11
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "fn": "Bank.owner",
      "offset": [
        1509,
        1515
      ],
      "op": "AND",
      "path": "3"
    },
    "1457": {
      "fn": "Bank.owner",
      "offset": [
        1445,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x408"
    },
    "1460": {
      "fn": "Bank.owner",
      "offset": [
        1445,
        1522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1461": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1462": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x408"
    },
    "1465": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C3"
    },
    "1468": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1469": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1471": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2984"
    },
    "1474": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "i",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1475": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1476": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x182D"
    },
    "1479": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "i",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1480": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1481": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x353"
    },
    "1484": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D6"
    },
    "1487": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1488": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1490": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27ED"
    },
    "1493": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1494": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1495": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184C"
    },
    "1498": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1499": {
      "offset": [
        2020,
        2069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1500": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2020,
        2069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36C"
    },
    "1503": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1505": {
      "offset": [
        2020,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1506": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2020,
        2069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1507": {
      "offset": [
        1171,
        1210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1508": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x611"
    },
    "1511": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F1"
    },
    "1514": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1515": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1517": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27D0"
    },
    "1520": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        1171,
        1210
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1521": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1522": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1524": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1526": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1527": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1528": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1529": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1531": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1532": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1533": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1534": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1536": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1537": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1538": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1539": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1540": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1541": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1543": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1544": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "ADD",
      "path": "5"
    },
    "1545": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1546": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1547": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1548": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1549": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "ADD",
      "path": "5"
    },
    "1550": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1551": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1552": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1553": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1554": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1556": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1557": {
      "fn": "AccessControl.hasRole",
      "offset": [
        1171,
        1210
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1558": {
      "op": "SWAP4"
    },
    "1559": {
      "op": "DUP5"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1563": {
      "op": "DUP5"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "SWAP3"
    },
    "1566": {
      "op": "SWAP1"
    },
    "1567": {
      "op": "SWAP3"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "SWAP1"
    },
    "1570": {
      "op": "DUP3"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "op": "MSTORE"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "offset": [
        1171,
        1210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35F"
    },
    "1579": {
      "op": "JUMP"
    },
    "1580": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4841,
        4966
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1581": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4931,
        4941
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 12
    },
    "1582": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4898,
        4905
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1584": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1585": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1586": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1587": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4930
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1589": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1591": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1592": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1594": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1595": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4942
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1596": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4924,
        4959
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1597": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4841,
        4966
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1600": {
      "fn": "BankStorage.getVaultCollateralAmount",
      "offset": [
        4841,
        4966
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1601": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1602": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1605": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1877"
    },
    "1608": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5379,
        5824
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1609": {
      "fn": "Bank.setDebt",
      "offset": [
        3581,
        4106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1610": {
      "fn": "Bank.setDebt",
      "offset": [
        3581,
        4106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1613": {
      "fn": "Bank.setDebt",
      "offset": [
        3581,
        4106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x657"
    },
    "1616": {
      "fn": "Bank.setDebt",
      "offset": [
        3581,
        4106
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1617": {
      "fn": "Bank.setDebt",
      "offset": [
        3581,
        4106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1619": {
      "fn": "Bank.setDebt",
      "offset": [
        3581,
        4106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x281D"
    },
    "1622": {
      "fn": "Bank.setDebt",
      "jump": "i",
      "offset": [
        3581,
        4106
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1623": {
      "fn": "Bank.setDebt",
      "offset": [
        3581,
        4106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1624": {
      "fn": "Bank.setDebt",
      "offset": [
        3581,
        4106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1920"
    },
    "1627": {
      "fn": "Bank.setDebt",
      "jump": "i",
      "offset": [
        3581,
        4106
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1628": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2665,
        2758
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1629": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2741,
        2751
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 13,
      "value": "0x4"
    },
    "1631": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2741,
        2751
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1632": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2665,
        2758
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1635": {
      "fn": "BankStorage.getDebtTokenPrice",
      "offset": [
        2665,
        2758
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1636": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1637": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36C"
    },
    "1640": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x672"
    },
    "1643": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1644": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1646": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x270E"
    },
    "1649": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1650": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1651": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19B6"
    },
    "1654": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1655": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4367,
        4469
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1656": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4443,
        4462
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 14,
      "value": "0x10"
    },
    "1658": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4443,
        4462
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1659": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4367,
        4469
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1662": {
      "fn": "BankStorage.getReserveBalance",
      "offset": [
        4367,
        4469
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1663": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2447,
        2549
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1664": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2525,
        2529
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x3"
    },
    "1666": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2525,
        2542
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "op": "SUB"
    },
    "1675": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2525,
        2542
      ],
      "op": "AND",
      "path": "5"
    },
    "1676": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2447,
        2549
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x408"
    },
    "1679": {
      "fn": "BankStorage.getDebtTokenAddress",
      "offset": [
        2447,
        2549
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1680": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1681": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "1684": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69E"
    },
    "1687": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1688": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1690": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27ED"
    },
    "1693": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1694": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1695": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19CD"
    },
    "1698": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1699": {
      "fn": "Bank.addReporter",
      "offset": [
        14491,
        14653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1700": {
      "fn": "Bank.addReporter",
      "offset": [
        14491,
        14653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1703": {
      "fn": "Bank.addReporter",
      "offset": [
        14491,
        14653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B1"
    },
    "1706": {
      "fn": "Bank.addReporter",
      "offset": [
        14491,
        14653
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1707": {
      "fn": "Bank.addReporter",
      "offset": [
        14491,
        14653
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1709": {
      "fn": "Bank.addReporter",
      "offset": [
        14491,
        14653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D0"
    },
    "1712": {
      "fn": "Bank.addReporter",
      "jump": "i",
      "offset": [
        14491,
        14653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1713": {
      "fn": "Bank.addReporter",
      "offset": [
        14491,
        14653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1714": {
      "fn": "Bank.addReporter",
      "offset": [
        14491,
        14653
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19F2"
    },
    "1717": {
      "fn": "Bank.addReporter",
      "jump": "i",
      "offset": [
        14491,
        14653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1718": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1719": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1722": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6C4"
    },
    "1725": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1726": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1728": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270E"
    },
    "1731": {
      "fn": "Bank.reserveWithdraw",
      "jump": "i",
      "offset": [
        4846,
        5432
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1732": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1733": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A58"
    },
    "1736": {
      "fn": "Bank.reserveWithdraw",
      "jump": "i",
      "offset": [
        4846,
        5432
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1737": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1718,
        1814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1738": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1718,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1741": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1718,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6D7"
    },
    "1744": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1718,
        1814
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1745": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1718,
        1814
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1747": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1718,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D0"
    },
    "1750": {
      "fn": "Bank.transferOwnership",
      "jump": "i",
      "offset": [
        1718,
        1814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1751": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1718,
        1814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1752": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1718,
        1814
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BD6"
    },
    "1755": {
      "fn": "Bank.transferOwnership",
      "jump": "i",
      "offset": [
        1718,
        1814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1756": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3133,
        3242
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1757": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3217,
        3235
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x8"
    },
    "1759": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3217,
        3235
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1760": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3133,
        3242
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1763": {
      "fn": "BankStorage.getDebtTokenLastUpdatedAt",
      "offset": [
        3133,
        3242
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1764": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4601,
        4719
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1765": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4687,
        4694
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 17,
      "value": "0xF"
    },
    "1767": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4687,
        4712
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1768": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4601,
        4719
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1771": {
      "fn": "BankStorage.getReserveCollateralBalance",
      "offset": [
        4601,
        4719
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1772": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12063,
        12938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1773": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12063,
        12938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "1776": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12063,
        12938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6FA"
    },
    "1779": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12063,
        12938
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1780": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12063,
        12938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1782": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12063,
        12938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270E"
    },
    "1785": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12063,
        12938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1786": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12063,
        12938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1787": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12063,
        12938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C41"
    },
    "1790": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12063,
        12938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1791": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1761,
        1866
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1792": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1837,
        1859
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 18,
      "value": "0x12"
    },
    "1794": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1837,
        1859
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1795": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1761,
        1866
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1798": {
      "fn": "BankStorage.getOriginationFee",
      "offset": [
        1761,
        1866
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1799": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1800": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1802": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x712"
    },
    "1805": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1806": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "1809": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1810": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1811": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4384,
        4385
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x0"
    },
    "1813": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4375,
        4381
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1814": {
      "branch": 146,
      "fn": "Bank.reserveDeposit",
      "offset": [
        4375,
        4385
      ],
      "op": "GT",
      "path": "3"
    },
    "1815": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x73B"
    },
    "1818": {
      "branch": 146,
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1819": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1821": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1822": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1830": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1831": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1833": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "ADD",
      "path": "3"
    },
    "1834": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "1837": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1838": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29A6"
    },
    "1841": {
      "fn": "Bank.reserveDeposit",
      "jump": "i",
      "offset": [
        4367,
        4407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1842": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1843": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1845": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1846": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1847": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1848": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "SUB",
      "path": "3"
    },
    "1849": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1850": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "1851": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4367,
        4407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1852": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4440,
        4446
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 20
    },
    "1853": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "1855": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1857": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4436
      ],
      "op": "ADD",
      "path": "3"
    },
    "1858": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4436
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1860": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1861": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1862": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1863": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x750"
    },
    "1866": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1867": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1868": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E7"
    },
    "1871": {
      "fn": "Bank.reserveDeposit",
      "jump": "i",
      "offset": [
        4417,
        4446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1872": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1873": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1874": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1875": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4417,
        4446
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4463,
        4467
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x3"
    },
    "1880": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4463,
        4480
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1881": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4456,
        4579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76D"
    },
    "1884": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4456,
        4579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1891": {
      "op": "SHL"
    },
    "1892": {
      "op": "SUB"
    },
    "1893": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4463,
        4480
      ],
      "op": "AND",
      "path": "3"
    },
    "1894": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4512,
        4522
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1895": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4544,
        4548
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1896": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4563,
        4569
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1897": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4456,
        4498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E08"
    },
    "1900": {
      "fn": "Bank.reserveDeposit",
      "jump": "i",
      "offset": [
        4456,
        4579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1901": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4456,
        4579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1902": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x40"
    },
    "1904": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "DUP2"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x71EB3E5DF75EF293B81B4C7B38DB51F7A6CEC007D12529CB74D4EAFB7FA53222"
    },
    "1941": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1944": {
      "op": "ADD"
    },
    "1945": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1947": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1948": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1949": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1950": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "SUB",
      "path": "3"
    },
    "1951": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1952": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4594,
        4616
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1953": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "POP",
      "path": "3"
    },
    "1954": {
      "fn": "Bank.reserveDeposit",
      "offset": [
        4259,
        4623
      ],
      "op": "POP",
      "path": "3"
    },
    "1955": {
      "fn": "Bank.reserveDeposit",
      "jump": "o",
      "offset": [
        4259,
        4623
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1956": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1957": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        701,
        705
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1965": {
      "op": "SHL"
    },
    "1966": {
      "op": "SUB"
    },
    "1967": {
      "op": "NOT"
    },
    "1968": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        781
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 23
    },
    "1969": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        781
      ],
      "op": "AND",
      "path": "1"
    },
    "1970": {
      "op": "PUSH4",
      "value": "0x5A05180F"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        781
      ],
      "op": "EQ",
      "path": "1"
    },
    "1979": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        781
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1980": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C9"
    },
    "1983": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        821
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1984": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        724,
        821
      ],
      "op": "POP",
      "path": "1"
    },
    "1985": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        785,
        821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C9"
    },
    "1988": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        809,
        820
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1989": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        785,
        808
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E79"
    },
    "1992": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "i",
      "offset": [
        785,
        821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1993": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        785,
        821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1994": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        717,
        821
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1995": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "offset": [
        616,
        828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "op": "POP"
    },
    "1998": {
      "fn": "AccessControlEnumerable.supportsInterface",
      "jump": "o",
      "offset": [
        616,
        828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1999": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2000": {
      "fn": "BankStorage.getName",
      "offset": [
        1403,
        1416
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2002": {
      "fn": "BankStorage.getName",
      "offset": [
        1435,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 24,
      "value": "0x1"
    },
    "2004": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2005": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2006": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7DE"
    },
    "2009": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2010": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29FF"
    },
    "2013": {
      "fn": "BankStorage.getName",
      "jump": "i",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2014": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2015": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2016": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2018": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "5"
    },
    "2019": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2021": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2022": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2023": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DIV",
      "path": "5"
    },
    "2024": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MUL",
      "path": "5"
    },
    "2025": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2027": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "5"
    },
    "2028": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2030": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2031": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2032": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2033": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "5"
    },
    "2034": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2036": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2037": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2038": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2039": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2040": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2041": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2042": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2043": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2044": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2046": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "5"
    },
    "2047": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2048": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2049": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2050": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x80A"
    },
    "2053": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2054": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29FF"
    },
    "2057": {
      "fn": "BankStorage.getName",
      "jump": "i",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2058": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2059": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2060": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2061": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x857"
    },
    "2064": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2065": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2066": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2068": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "LT",
      "path": "5"
    },
    "2069": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x82C"
    },
    "2072": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2073": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2076": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2077": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2078": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2079": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DIV",
      "path": "5"
    },
    "2080": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MUL",
      "path": "5"
    },
    "2081": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2082": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2083": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2084": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2086": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "5"
    },
    "2087": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2088": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x857"
    },
    "2091": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2092": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2093": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2094": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "5"
    },
    "2095": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2096": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2097": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2099": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2100": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2102": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2104": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2105": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2106": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2107": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2108": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2109": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2110": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2111": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2112": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2114": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "5"
    },
    "2115": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2116": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2118": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "5"
    },
    "2119": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2120": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2121": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "GT",
      "path": "5"
    },
    "2122": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x83A"
    },
    "2125": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2126": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2127": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2128": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SUB",
      "path": "5"
    },
    "2129": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2131": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "AND",
      "path": "5"
    },
    "2132": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2133": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "ADD",
      "path": "5"
    },
    "2134": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2135": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2136": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "5"
    },
    "2137": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "5"
    },
    "2138": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "5"
    },
    "2139": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "5"
    },
    "2140": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "5"
    },
    "2141": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2142": {
      "fn": "BankStorage.getName",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "5"
    },
    "2143": {
      "fn": "BankStorage.getName",
      "offset": [
        1363,
        1446
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2144": {
      "fn": "BankStorage.getName",
      "jump": "o",
      "offset": [
        1363,
        1446
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2145": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "op": "SUB"
    },
    "2154": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2155": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "AND",
      "path": "5"
    },
    "2156": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6050,
        6057
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2158": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2159": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2160": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2161": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6083
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2163": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2165": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2166": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2168": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2169": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6095
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2170": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6106
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2172": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6106
      ],
      "op": "ADD",
      "path": "5"
    },
    "2173": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6077,
        6106
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2174": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6073,
        6427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x889"
    },
    "2177": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6073,
        6427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2178": {
      "op": "POP"
    },
    "2179": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6134,
        6135
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x0"
    },
    "2181": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6134,
        6135
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2182": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2183": {
      "op": "POP"
    },
    "2184": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "o",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2185": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6073,
        6427
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2186": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6394,
        6415
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 26,
      "value": "0x5"
    },
    "2188": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6394,
        6415
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2189": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6360,
        6370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2191": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6360,
        6370
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "op": "SUB"
    },
    "2200": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2201": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "AND",
      "path": "5"
    },
    "2202": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2204": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2205": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2206": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2207": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6394,
        6415
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2209": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2211": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2212": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2214": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2215": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6346
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2216": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6360,
        6370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2218": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6357
      ],
      "op": "ADD",
      "path": "5"
    },
    "2219": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6357
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2220": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6370
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8B5"
    },
    "2223": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6370
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2224": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6360,
        6370
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2225": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6370
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A3A"
    },
    "2228": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6328,
        6370
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2229": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6328,
        6370
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2230": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8BF"
    },
    "2233": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2234": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2235": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A59"
    },
    "2238": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6327,
        6415
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2239": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6327,
        6415
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2240": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6270,
        6297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "2242": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6270,
        6297
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2243": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6230,
        6246
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "2245": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6230,
        6246
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2252": {
      "op": "SHL"
    },
    "2253": {
      "op": "SUB"
    },
    "2254": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2255": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "AND",
      "path": "5"
    },
    "2256": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2258": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2259": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2260": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2261": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6270,
        6297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2263": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2265": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2266": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2268": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2269": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6210
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2270": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6227
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2271": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6246
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E8"
    },
    "2274": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6246
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2275": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6230,
        6246
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2276": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6246
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A3A"
    },
    "2279": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6192,
        6246
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2280": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6192,
        6246
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2281": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F2"
    },
    "2284": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2285": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2286": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A59"
    },
    "2289": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6191,
        6297
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2290": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6191,
        6297
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2291": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6190,
        6306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FE"
    },
    "2294": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6190,
        6306
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2295": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6301,
        6306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "2298": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6190,
        6306
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A3A"
    },
    "2301": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6190,
        6306
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2302": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6190,
        6306
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2303": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6189,
        6416
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C9"
    },
    "2306": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6189,
        6416
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2307": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6189,
        6416
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2308": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6189,
        6416
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A59"
    },
    "2311": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "i",
      "offset": [
        6189,
        6416
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2312": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        6073,
        6427
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2313": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2314": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2315": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "offset": [
        5945,
        6433
      ],
      "op": "POP",
      "path": "5"
    },
    "2316": {
      "fn": "BankStorage.getVaultCollateralizationRatio",
      "jump": "o",
      "offset": [
        5945,
        6433
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2317": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2318": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4468,
        4475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2320": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2321": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2322": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2323": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "2325": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2327": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2328": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2330": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2331": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2332": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2334": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "ADD",
      "path": "0"
    },
    "2335": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2336": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x928"
    },
    "2339": {
      "offset": [
        2509,
        2513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2340": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "2343": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2344": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2345": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4886,
        4911
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0x932"
    },
    "2348": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4897,
        4901
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2349": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4903,
        4910
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2350": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4886,
        4896
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0B"
    },
    "2353": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4886,
        4911
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2354": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4886,
        4911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2355": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "POP",
      "path": "0"
    },
    "2356": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "POP",
      "path": "0"
    },
    "2357": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4773,
        4918
      ],
      "op": "POP",
      "path": "0"
    },
    "2358": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4773,
        4918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2359": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2360": {
      "fn": "Bank.liquidate",
      "offset": [
        7800,
        7832
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 28,
      "value": "0x94F"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2365": {
      "op": "DUP1"
    },
    "2366": {
      "op": "MLOAD"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2369": {
      "op": "PUSH2",
      "value": "0x2BC2"
    },
    "2372": {
      "op": "DUP4"
    },
    "2373": {
      "op": "CODECOPY"
    },
    "2374": {
      "op": "DUP2"
    },
    "2375": {
      "op": "MLOAD"
    },
    "2376": {
      "op": "SWAP2"
    },
    "2377": {
      "op": "MSTORE"
    },
    "2378": {
      "fn": "Bank.liquidate",
      "offset": [
        7821,
        7831
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2379": {
      "fn": "Bank.liquidate",
      "offset": [
        7800,
        7807
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184C"
    },
    "2382": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        7800,
        7832
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2383": {
      "branch": 147,
      "fn": "Bank.liquidate",
      "offset": [
        7800,
        7832
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2384": {
      "fn": "Bank.liquidate",
      "offset": [
        7800,
        7891
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2385": {
      "fn": "Bank.liquidate",
      "offset": [
        7800,
        7891
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x960"
    },
    "2388": {
      "branch": 147,
      "fn": "Bank.liquidate",
      "offset": [
        7800,
        7891
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2389": {
      "op": "POP"
    },
    "2390": {
      "fn": "Bank.liquidate",
      "offset": [
        7852,
        7891
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x960"
    },
    "2393": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2395": {
      "fn": "Bank.liquidate",
      "offset": [
        7880,
        7890
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2396": {
      "fn": "Bank.liquidate",
      "offset": [
        7852,
        7859
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184C"
    },
    "2399": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        7852,
        7891
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2400": {
      "branch": 148,
      "fn": "Bank.liquidate",
      "offset": [
        7852,
        7891
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2401": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A2"
    },
    "2404": {
      "branch": 148,
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2405": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2407": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2416": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2421": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2422": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "ADD",
      "path": "3"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2428": {
      "op": "DUP3"
    },
    "2429": {
      "op": "ADD"
    },
    "2430": {
      "op": "MSTORE"
    },
    "2431": {
      "op": "PUSH19",
      "value": "0x3737BA1035B2B2B832B91037B91030B236B4B7"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "2453": {
      "op": "SHL"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2456": {
      "op": "DUP3"
    },
    "2457": {
      "op": "ADD"
    },
    "2458": {
      "op": "MSTORE"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2461": {
      "op": "ADD"
    },
    "2462": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "2465": {
      "op": "JUMP"
    },
    "2466": {
      "fn": "Bank.liquidate",
      "offset": [
        7779,
        7936
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2467": {
      "fn": "Bank.liquidate",
      "offset": [
        8070,
        8100
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0x13"
    },
    "2469": {
      "fn": "Bank.liquidate",
      "offset": [
        8070,
        8100
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2470": {
      "fn": "Bank.liquidate",
      "offset": [
        8070,
        8106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B0"
    },
    "2473": {
      "fn": "Bank.liquidate",
      "offset": [
        8070,
        8106
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2474": {
      "fn": "Bank.liquidate",
      "offset": [
        8103,
        8106
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2476": {
      "fn": "Bank.liquidate",
      "offset": [
        8070,
        8106
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "2479": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8070,
        8106
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2480": {
      "fn": "Bank.liquidate",
      "offset": [
        8070,
        8106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2481": {
      "fn": "Bank.liquidate",
      "offset": [
        8009,
        8051
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B9"
    },
    "2484": {
      "fn": "Bank.liquidate",
      "offset": [
        8040,
        8050
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2485": {
      "fn": "Bank.liquidate",
      "offset": [
        8009,
        8039
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x861"
    },
    "2488": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8009,
        8051
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2489": {
      "fn": "Bank.liquidate",
      "offset": [
        8009,
        8051
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2490": {
      "branch": 149,
      "fn": "Bank.liquidate",
      "offset": [
        8009,
        8106
      ],
      "op": "LT",
      "path": "3"
    },
    "2491": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA06"
    },
    "2494": {
      "branch": 149,
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2495": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2497": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2504": {
      "op": "SHL"
    },
    "2505": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2506": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2509": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2511": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2512": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "ADD",
      "path": "3"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2518": {
      "op": "DUP3"
    },
    "2519": {
      "op": "ADD"
    },
    "2520": {
      "op": "MSTORE"
    },
    "2521": {
      "op": "PUSH32",
      "value": "0x5641554C54204E4F5420554E444552434F4C4C41544552414C495A4544000000"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2556": {
      "op": "DUP3"
    },
    "2557": {
      "op": "ADD"
    },
    "2558": {
      "op": "MSTORE"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2561": {
      "op": "ADD"
    },
    "2562": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "2565": {
      "op": "JUMP"
    },
    "2566": {
      "fn": "Bank.liquidate",
      "offset": [
        7988,
        8161
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2567": {
      "fn": "Bank.liquidate",
      "offset": [
        8307,
        8333
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "2569": {
      "fn": "Bank.liquidate",
      "offset": [
        8307,
        8333
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2576": {
      "op": "SHL"
    },
    "2577": {
      "op": "SUB"
    },
    "2578": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2579": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "AND",
      "path": "3"
    },
    "2580": {
      "fn": "Bank.liquidate",
      "offset": [
        8171,
        8188
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2582": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2583": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2584": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2585": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2587": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2589": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2590": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2592": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2593": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8255
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2594": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2596": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8266
      ],
      "op": "ADD",
      "path": "3"
    },
    "2597": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8266
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2598": {
      "fn": "Bank.liquidate",
      "offset": [
        8171,
        8188
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2599": {
      "fn": "Bank.liquidate",
      "offset": [
        8171,
        8188
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2600": {
      "fn": "Bank.liquidate",
      "offset": [
        8375,
        8378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2602": {
      "fn": "Bank.liquidate",
      "offset": [
        8375,
        8378
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2603": {
      "fn": "Bank.liquidate",
      "offset": [
        8375,
        8378
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2604": {
      "fn": "Bank.liquidate",
      "offset": [
        8375,
        8378
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2605": {
      "fn": "Bank.liquidate",
      "offset": [
        8307,
        8333
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2606": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA37"
    },
    "2609": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8288
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2610": {
      "fn": "Bank.liquidate",
      "offset": [
        8375,
        8378
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2611": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "2614": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8237,
        8288
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2615": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2616": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8333
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA41"
    },
    "2619": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8333
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2620": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8333
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2621": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8333
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "2624": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8237,
        8333
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2625": {
      "fn": "Bank.liquidate",
      "offset": [
        8237,
        8333
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2626": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4B"
    },
    "2629": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8356
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2630": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8356
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2631": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8356
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "2634": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8236,
        8356
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2635": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8356
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2636": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA55"
    },
    "2639": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8378
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2640": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8378
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2641": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "2644": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8236,
        8378
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2645": {
      "fn": "Bank.liquidate",
      "offset": [
        8236,
        8378
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2652": {
      "op": "SHL"
    },
    "2653": {
      "op": "SUB"
    },
    "2654": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2655": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "AND",
      "path": "3"
    },
    "2656": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2658": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2659": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2660": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2661": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2663": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2665": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2666": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2668": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2669": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8209
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2670": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8220
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2672": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8220
      ],
      "op": "ADD",
      "path": "3"
    },
    "2673": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8220
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2674": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7B"
    },
    "2677": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8379
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2678": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8379
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2679": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E7"
    },
    "2682": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8191,
        8379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2683": {
      "fn": "Bank.liquidate",
      "offset": [
        8191,
        8379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2684": {
      "fn": "Bank.liquidate",
      "offset": [
        8460,
        8476
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2686": {
      "fn": "Bank.liquidate",
      "offset": [
        8460,
        8476
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2687": {
      "fn": "Bank.liquidate",
      "offset": [
        8434,
        8444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2689": {
      "fn": "Bank.liquidate",
      "offset": [
        8434,
        8444
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2690": {
      "fn": "Bank.liquidate",
      "offset": [
        8171,
        8379
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2691": {
      "fn": "Bank.liquidate",
      "offset": [
        8171,
        8379
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "fn": "Bank.liquidate",
      "offset": [
        8389,
        8418
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2695": {
      "fn": "Bank.liquidate",
      "offset": [
        8389,
        8418
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2696": {
      "fn": "Bank.liquidate",
      "offset": [
        8422,
        8444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA91"
    },
    "2699": {
      "fn": "Bank.liquidate",
      "offset": [
        8422,
        8444
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2700": {
      "fn": "Bank.liquidate",
      "offset": [
        8171,
        8379
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2701": {
      "fn": "Bank.liquidate",
      "offset": [
        8422,
        8444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "2704": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8422,
        8444
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2705": {
      "fn": "Bank.liquidate",
      "offset": [
        8422,
        8444
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2706": {
      "fn": "Bank.liquidate",
      "offset": [
        8421,
        8476
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9B"
    },
    "2709": {
      "fn": "Bank.liquidate",
      "offset": [
        8421,
        8476
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2710": {
      "fn": "Bank.liquidate",
      "offset": [
        8421,
        8476
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2711": {
      "fn": "Bank.liquidate",
      "offset": [
        8421,
        8476
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "2714": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8421,
        8476
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2715": {
      "fn": "Bank.liquidate",
      "offset": [
        8421,
        8476
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2722": {
      "op": "SHL"
    },
    "2723": {
      "op": "SUB"
    },
    "2724": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2725": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "AND",
      "path": "3"
    },
    "2726": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2728": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2729": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2730": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2731": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8521
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2733": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2735": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2736": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2738": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2739": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8533
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2740": {
      "fn": "Bank.liquidate",
      "offset": [
        8515,
        8550
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2741": {
      "fn": "Bank.liquidate",
      "offset": [
        8389,
        8476
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2742": {
      "fn": "Bank.liquidate",
      "offset": [
        8389,
        8476
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2743": {
      "op": "POP"
    },
    "2744": {
      "fn": "Bank.liquidate",
      "offset": [
        8491,
        8550
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2745": {
      "branch": 150,
      "fn": "Bank.liquidate",
      "offset": [
        8491,
        8550
      ],
      "op": "GT",
      "path": "3"
    },
    "2746": {
      "fn": "Bank.liquidate",
      "offset": [
        8487,
        8636
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2747": {
      "fn": "Bank.liquidate",
      "offset": [
        8487,
        8636
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD9"
    },
    "2750": {
      "branch": 150,
      "fn": "Bank.liquidate",
      "offset": [
        8487,
        8636
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "op": "SUB"
    },
    "2760": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 30
    },
    "2761": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "AND",
      "path": "3"
    },
    "2762": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2764": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2765": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2766": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2767": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8596
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2769": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2771": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2772": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2774": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2775": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8608
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2776": {
      "fn": "Bank.liquidate",
      "offset": [
        8590,
        8625
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2777": {
      "fn": "Bank.liquidate",
      "offset": [
        8487,
        8636
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2778": {
      "fn": "Bank.liquidate",
      "offset": [
        8646,
        8663
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2780": {
      "fn": "Bank.liquidate",
      "offset": [
        8666,
        8692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE6"
    },
    "2783": {
      "fn": "Bank.liquidate",
      "offset": [
        8690,
        8692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2785": {
      "fn": "Bank.liquidate",
      "offset": [
        8666,
        8687
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2786": {
      "fn": "Bank.liquidate",
      "offset": [
        8666,
        8692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "2789": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8666,
        8692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2790": {
      "fn": "Bank.liquidate",
      "offset": [
        8666,
        8692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2791": {
      "fn": "Bank.liquidate",
      "offset": [
        8646,
        8692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2792": {
      "op": "POP"
    },
    "2793": {
      "fn": "Bank.liquidate",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 31,
      "value": "0xAF2"
    },
    "2796": {
      "fn": "Bank.liquidate",
      "offset": [
        8646,
        8692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2797": {
      "fn": "Bank.liquidate",
      "offset": [
        8764,
        8785
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2798": {
      "fn": "Bank.liquidate",
      "offset": [
        8764,
        8797
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "2801": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8764,
        8797
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2802": {
      "fn": "Bank.liquidate",
      "offset": [
        8764,
        8797
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2803": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8742
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "2805": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2806": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2807": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2809": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8760
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2810": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB04"
    },
    "2813": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2814": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2815": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2816": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E7"
    },
    "2819": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8735,
        8797
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2820": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2821": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2822": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2823": {
      "fn": "Bank.liquidate",
      "offset": [
        8735,
        8797
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2824": {
      "op": "POP"
    },
    "2825": {
      "op": "POP"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2832": {
      "op": "SHL"
    },
    "2833": {
      "op": "SUB"
    },
    "2834": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 32
    },
    "2835": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "AND",
      "path": "3"
    },
    "2836": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2838": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2839": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2840": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2841": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8813
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2843": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2845": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2846": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2848": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2849": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2850": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8867
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2851": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8867
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2852": {
      "fn": "Bank.liquidate",
      "offset": [
        8846,
        8867
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2853": {
      "fn": "Bank.liquidate",
      "offset": [
        8846,
        8867
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2854": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2855": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8867
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB31"
    },
    "2858": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2859": {
      "fn": "Bank.liquidate",
      "offset": [
        8846,
        8867
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2860": {
      "fn": "Bank.liquidate",
      "offset": [
        8846,
        8867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2861": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8867
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "2864": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8807,
        8867
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2865": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2866": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2867": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8867
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2868": {
      "fn": "Bank.liquidate",
      "offset": [
        8807,
        8867
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "op": "SUB"
    },
    "2879": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 33
    },
    "2880": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2881": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "AND",
      "path": "3"
    },
    "2882": {
      "fn": "Bank.liquidate",
      "offset": [
        8909,
        8910
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2884": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2885": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2886": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2887": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8883
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2889": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2891": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2892": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2894": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2895": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8895
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2896": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8906
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2898": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8906
      ],
      "op": "ADD",
      "path": "3"
    },
    "2899": {
      "fn": "Bank.liquidate",
      "offset": [
        8877,
        8910
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2900": {
      "fn": "Bank.liquidate",
      "offset": [
        8978,
        8995
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 34,
      "value": "0x4D"
    },
    "2902": {
      "fn": "Bank.liquidate",
      "offset": [
        8978,
        8995
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2903": {
      "fn": "Bank.liquidate",
      "offset": [
        8927,
        8937
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "2905": {
      "fn": "Bank.liquidate",
      "offset": [
        8927,
        8950
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2906": {
      "fn": "Bank.liquidate",
      "offset": [
        8920,
        9028
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB68"
    },
    "2909": {
      "fn": "Bank.liquidate",
      "offset": [
        8920,
        9028
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2910": {
      "fn": "Bank.liquidate",
      "offset": [
        8927,
        8950
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2911": {
      "fn": "Bank.liquidate",
      "offset": [
        8927,
        8950
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2912": {
      "fn": "Bank.liquidate",
      "offset": [
        8927,
        8950
      ],
      "op": "AND",
      "path": "3"
    },
    "2913": {
      "fn": "Bank.liquidate",
      "offset": [
        8927,
        8950
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2914": {
      "fn": "Bank.liquidate",
      "offset": [
        8978,
        8995
      ],
      "op": "AND",
      "path": "3"
    },
    "2915": {
      "fn": "Bank.liquidate",
      "offset": [
        9009,
        9018
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2916": {
      "fn": "Bank.liquidate",
      "offset": [
        8920,
        8964
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "2919": {
      "fn": "Bank.liquidate",
      "jump": "i",
      "offset": [
        8920,
        9028
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2920": {
      "fn": "Bank.liquidate",
      "offset": [
        8920,
        9028
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2921": {
      "fn": "Bank.liquidate",
      "offset": [
        9055,
        9065
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 35
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2928": {
      "op": "SHL"
    },
    "2929": {
      "op": "SUB"
    },
    "2930": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "AND",
      "path": "3"
    },
    "2931": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x6DD29D11F8D1BCDBD79DA21BF92895417DCC2F8886B3DB11C8A4CE00B73DE9D0"
    },
    "2964": {
      "fn": "Bank.liquidate",
      "offset": [
        9067,
        9076
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2965": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2967": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2968": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA3"
    },
    "2971": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2972": {
      "op": "DUP2"
    },
    "2973": {
      "op": "MSTORE"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2976": {
      "op": "ADD"
    },
    "2977": {
      "op": "SWAP1"
    },
    "2978": {
      "op": "JUMP"
    },
    "2979": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2980": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2982": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2983": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2984": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2985": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "SUB",
      "path": "3"
    },
    "2986": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2987": {
      "fn": "Bank.liquidate",
      "offset": [
        9043,
        9077
      ],
      "op": "LOG2",
      "path": "3"
    },
    "2988": {
      "fn": "Bank.liquidate",
      "offset": [
        7769,
        9084
      ],
      "op": "POP",
      "path": "3"
    },
    "2989": {
      "fn": "Bank.liquidate",
      "offset": [
        7769,
        9084
      ],
      "op": "POP",
      "path": "3"
    },
    "2990": {
      "fn": "Bank.liquidate",
      "offset": [
        7769,
        9084
      ],
      "op": "POP",
      "path": "3"
    },
    "2991": {
      "fn": "Bank.liquidate",
      "offset": [
        7721,
        9084
      ],
      "op": "POP",
      "path": "3"
    },
    "2992": {
      "fn": "Bank.liquidate",
      "jump": "o",
      "offset": [
        7721,
        9084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2993": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "op": "SUB"
    },
    "3002": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5885,
        5908
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 36
    },
    "3003": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5885,
        5908
      ],
      "op": "AND",
      "path": "0"
    },
    "3004": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 37
    },
    "3005": {
      "branch": 174,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5885,
        5908
      ],
      "op": "EQ",
      "path": "0"
    },
    "3006": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC21"
    },
    "3009": {
      "branch": 174,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3010": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3012": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3019": {
      "op": "SHL"
    },
    "3020": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3021": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3024": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3026": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3027": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "ADD",
      "path": "0"
    },
    "3028": {
      "op": "MSTORE"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3033": {
      "op": "DUP3"
    },
    "3034": {
      "op": "ADD"
    },
    "3035": {
      "op": "MSTORE"
    },
    "3036": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3071": {
      "op": "DUP3"
    },
    "3072": {
      "op": "ADD"
    },
    "3073": {
      "op": "MSTORE"
    },
    "3074": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "3092": {
      "op": "SHL"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3095": {
      "op": "DUP3"
    },
    "3096": {
      "op": "ADD"
    },
    "3097": {
      "op": "MSTORE"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3100": {
      "op": "ADD"
    },
    "3101": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "3104": {
      "op": "JUMP"
    },
    "3105": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5877,
        5960
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3106": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5971,
        5997
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0xC2B"
    },
    "3109": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5983,
        5987
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3110": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5989,
        5996
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3111": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5971,
        5982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5D"
    },
    "3114": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5971,
        5997
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3115": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5971,
        5997
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3116": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "POP",
      "path": "0"
    },
    "3117": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5790,
        6004
      ],
      "op": "POP",
      "path": "0"
    },
    "3118": {
      "fn": "AccessControl.renounceRole",
      "jump": "o",
      "offset": [
        5790,
        6004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3119": {
      "fn": "Bank.setCollateral",
      "offset": [
        2847,
        3478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3120": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3122": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3A"
    },
    "3125": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3126": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "3129": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3130": {
      "fn": "Bank.setCollateral",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3131": {
      "fn": "Bank.setCollateral",
      "offset": [
        3111,
        3121
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 39,
      "value": "0x9"
    },
    "3133": {
      "fn": "Bank.setCollateral",
      "offset": [
        3111,
        3134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3140": {
      "op": "SHL"
    },
    "3141": {
      "op": "SUB"
    },
    "3142": {
      "fn": "Bank.setCollateral",
      "offset": [
        3111,
        3134
      ],
      "op": "AND",
      "path": "3"
    },
    "3143": {
      "branch": 151,
      "fn": "Bank.setCollateral",
      "offset": [
        3111,
        3148
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3144": {
      "fn": "Bank.setCollateral",
      "offset": [
        3111,
        3197
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3145": {
      "fn": "Bank.setCollateral",
      "offset": [
        3111,
        3197
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3146": {
      "fn": "Bank.setCollateral",
      "offset": [
        3111,
        3197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5B"
    },
    "3149": {
      "branch": 151,
      "fn": "Bank.setCollateral",
      "offset": [
        3111,
        3197
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3150": {
      "op": "POP"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3157": {
      "op": "SHL"
    },
    "3158": {
      "op": "SUB"
    },
    "3159": {
      "fn": "Bank.setCollateral",
      "offset": [
        3168,
        3197
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3160": {
      "fn": "Bank.setCollateral",
      "offset": [
        3168,
        3197
      ],
      "op": "AND",
      "path": "3"
    },
    "3161": {
      "fn": "Bank.setCollateral",
      "offset": [
        3168,
        3197
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3162": {
      "branch": 152,
      "fn": "Bank.setCollateral",
      "offset": [
        3168,
        3197
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3163": {
      "fn": "Bank.setCollateral",
      "offset": [
        3111,
        3197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3164": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC92"
    },
    "3167": {
      "branch": 152,
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3168": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3170": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3177": {
      "op": "SHL"
    },
    "3178": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3179": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3182": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3184": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3185": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "ADD",
      "path": "3"
    },
    "3186": {
      "op": "MSTORE"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3191": {
      "op": "DUP3"
    },
    "3192": {
      "op": "ADD"
    },
    "3193": {
      "op": "MSTORE"
    },
    "3194": {
      "op": "PUSH8",
      "value": "0x2173657461626C65"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3205": {
      "op": "SHL"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3208": {
      "op": "DUP3"
    },
    "3209": {
      "op": "ADD"
    },
    "3210": {
      "op": "MSTORE"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3213": {
      "op": "ADD"
    },
    "3214": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "3217": {
      "op": "JUMP"
    },
    "3218": {
      "fn": "Bank.setCollateral",
      "offset": [
        3090,
        3231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3219": {
      "op": "POP"
    },
    "3220": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3251
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 40,
      "value": "0x9"
    },
    "3222": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3223": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3230": {
      "op": "SHL"
    },
    "3231": {
      "op": "SUB"
    },
    "3232": {
      "op": "NOT"
    },
    "3233": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "AND",
      "path": "3"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "op": "SUB"
    },
    "3242": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3243": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3244": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3245": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "AND",
      "path": "3"
    },
    "3246": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3247": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3248": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3249": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "OR",
      "path": "3"
    },
    "3250": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3251": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3252": {
      "fn": "Bank.setCollateral",
      "offset": [
        3241,
        3282
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3253": {
      "fn": "Bank.setCollateral",
      "offset": [
        3292,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 41,
      "value": "0xA"
    },
    "3255": {
      "fn": "Bank.setCollateral",
      "offset": [
        3292,
        3331
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3256": {
      "fn": "Bank.setCollateral",
      "offset": [
        3292,
        3331
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3257": {
      "fn": "Bank.setCollateral",
      "offset": [
        3292,
        3331
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3258": {
      "fn": "Bank.setCollateral",
      "offset": [
        3292,
        3331
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3259": {
      "fn": "Bank.setCollateral",
      "offset": [
        3341,
        3368
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 42,
      "value": "0xB"
    },
    "3261": {
      "fn": "Bank.setCollateral",
      "offset": [
        3341,
        3402
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3262": {
      "fn": "Bank.setCollateral",
      "offset": [
        3341,
        3402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3263": {
      "fn": "Bank.setCollateral",
      "offset": [
        3341,
        3402
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3264": {
      "fn": "Bank.setCollateral",
      "offset": [
        3341,
        3402
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3265": {
      "fn": "Bank.setCollateral",
      "offset": [
        3412,
        3438
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 43,
      "value": "0xC"
    },
    "3267": {
      "fn": "Bank.setCollateral",
      "offset": [
        3412,
        3471
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3268": {
      "fn": "Bank.setCollateral",
      "jump": "o",
      "offset": [
        2847,
        3478
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3269": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3270": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13474,
        13496
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "3272": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13474,
        13496
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3273": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3275": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3276": {
      "op": "PUSH4",
      "value": "0x11BBB871"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3283": {
      "op": "SHL"
    },
    "3284": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3285": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3286": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3288": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3289": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "ADD",
      "path": "3"
    },
    "3290": {
      "op": "DUP4"
    },
    "3291": {
      "op": "SWAP1"
    },
    "3292": {
      "op": "MSTORE"
    },
    "3293": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13341,
        13356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3295": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13341,
        13356
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3296": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13341,
        13356
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3297": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13341,
        13356
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3298": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13341,
        13356
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3299": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13341,
        13356
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13474,
        13496
      ],
      "op": "AND",
      "path": "3"
    },
    "3309": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13474,
        13496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3310": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13341,
        13356
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3311": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13341,
        13356
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3312": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13474,
        13496
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3313": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13474,
        13496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3314": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13558
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x46EEE1C4"
    },
    "3319": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13558
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3322": {
      "op": "ADD"
    },
    "3323": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3325": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3327": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3328": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3329": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3330": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "SUB",
      "path": "3"
    },
    "3331": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3332": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3333": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "GAS",
      "path": "3"
    },
    "3334": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3335": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3336": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3337": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3338": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD17"
    },
    "3341": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3342": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3343": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3345": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3346": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3347": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3348": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3350": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3351": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3352": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "POP",
      "path": "3"
    },
    "3353": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "POP",
      "path": "3"
    },
    "3354": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "POP",
      "path": "3"
    },
    "3355": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "POP",
      "path": "3"
    },
    "3356": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3358": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3359": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3360": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3362": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "NOT",
      "path": "3"
    },
    "3363": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3365": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3366": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "ADD",
      "path": "3"
    },
    "3367": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "AND",
      "path": "3"
    },
    "3368": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3369": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "ADD",
      "path": "3"
    },
    "3370": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3371": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3373": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3374": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "POP",
      "path": "3"
    },
    "3375": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3376": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "ADD",
      "path": "3"
    },
    "3377": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3378": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3B"
    },
    "3381": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3382": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3383": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A92"
    },
    "3386": {
      "fn": "Bank.getCurrentValue",
      "jump": "i",
      "offset": [
        13524,
        13570
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3387": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13524,
        13570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3388": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13507,
        13570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13580,
        13593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3398": {
      "op": "SHL"
    },
    "3399": {
      "op": "SUB"
    },
    "3400": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13634
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3401": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13634
      ],
      "op": "AND",
      "path": "3"
    },
    "3402": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13634
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x77FBB663"
    },
    "3407": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13648,
        13658
      ],
      "op": "DUP9",
      "path": "3"
    },
    "3408": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13672,
        13682
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5A"
    },
    "3411": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13681,
        13682
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3413": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13507,
        13570
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3414": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13672,
        13682
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "3417": {
      "fn": "Bank.getCurrentValue",
      "jump": "i",
      "offset": [
        13672,
        13682
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3418": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13672,
        13682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3419": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3421": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3428": {
      "op": "SHL"
    },
    "3429": {
      "op": "SUB"
    },
    "3430": {
      "op": "NOT"
    },
    "3431": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3433": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3434": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3435": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "SHL",
      "path": "3"
    },
    "3436": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "AND",
      "path": "3"
    },
    "3437": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3438": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3439": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3441": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3442": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "ADD",
      "path": "3"
    },
    "3443": {
      "op": "SWAP3"
    },
    "3444": {
      "op": "SWAP1"
    },
    "3445": {
      "op": "SWAP3"
    },
    "3446": {
      "op": "MSTORE"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3449": {
      "op": "DUP3"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "op": "MSTORE"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3454": {
      "op": "ADD"
    },
    "3455": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3457": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3459": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3460": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3461": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3462": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "SUB",
      "path": "3"
    },
    "3463": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3464": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3465": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "GAS",
      "path": "3"
    },
    "3466": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3467": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3468": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3469": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3470": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9B"
    },
    "3473": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3474": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3475": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3477": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3478": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3479": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3480": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3482": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3483": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3484": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "POP",
      "path": "3"
    },
    "3485": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "POP",
      "path": "3"
    },
    "3486": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "POP",
      "path": "3"
    },
    "3487": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "POP",
      "path": "3"
    },
    "3488": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3490": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3491": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3492": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3494": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "NOT",
      "path": "3"
    },
    "3495": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3497": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3498": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "ADD",
      "path": "3"
    },
    "3499": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "AND",
      "path": "3"
    },
    "3500": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3501": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "ADD",
      "path": "3"
    },
    "3502": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3503": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3505": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3506": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "POP",
      "path": "3"
    },
    "3507": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3508": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "ADD",
      "path": "3"
    },
    "3509": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3510": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDBF"
    },
    "3513": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3514": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3515": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A92"
    },
    "3518": {
      "fn": "Bank.getCurrentValue",
      "jump": "i",
      "offset": [
        13596,
        13692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3519": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13596,
        13692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3520": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3522": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3523": {
      "op": "PUSH4",
      "value": "0x93FA4915"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3530": {
      "op": "SHL"
    },
    "3531": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3532": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3533": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3535": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3536": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "ADD",
      "path": "3"
    },
    "3537": {
      "op": "DUP10"
    },
    "3538": {
      "op": "SWAP1"
    },
    "3539": {
      "op": "MSTORE"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3542": {
      "op": "DUP2"
    },
    "3543": {
      "op": "ADD"
    },
    "3544": {
      "op": "DUP3"
    },
    "3545": {
      "op": "SWAP1"
    },
    "3546": {
      "op": "MSTORE"
    },
    "3547": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13580,
        13692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3548": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13580,
        13692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3549": {
      "op": "POP"
    },
    "3550": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13702,
        13716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3552": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13702,
        13716
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3559": {
      "op": "SHL"
    },
    "3560": {
      "op": "SUB"
    },
    "3561": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13738
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3562": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13738
      ],
      "op": "AND",
      "path": "3"
    },
    "3563": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13738
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3564": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13738
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x93FA4915"
    },
    "3569": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13738
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3572": {
      "op": "ADD"
    },
    "3573": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3575": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3577": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3578": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3579": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3580": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "SUB",
      "path": "3"
    },
    "3581": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3582": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3583": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "GAS",
      "path": "3"
    },
    "3584": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "3585": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3586": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3587": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3588": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE11"
    },
    "3591": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3592": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3593": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3595": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3596": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3597": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3598": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3600": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3601": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3602": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "POP",
      "path": "3"
    },
    "3603": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "POP",
      "path": "3"
    },
    "3604": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "POP",
      "path": "3"
    },
    "3605": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "POP",
      "path": "3"
    },
    "3606": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3608": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3609": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3610": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3612": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "NOT",
      "path": "3"
    },
    "3613": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3615": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3616": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "ADD",
      "path": "3"
    },
    "3617": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "AND",
      "path": "3"
    },
    "3618": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3619": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "ADD",
      "path": "3"
    },
    "3620": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3621": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3623": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3624": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "POP",
      "path": "3"
    },
    "3625": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3626": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "ADD",
      "path": "3"
    },
    "3627": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3628": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE35"
    },
    "3631": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3632": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3633": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A92"
    },
    "3636": {
      "fn": "Bank.getCurrentValue",
      "jump": "i",
      "offset": [
        13719,
        13757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3637": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13719,
        13757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3638": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13702,
        13757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3639": {
      "op": "POP"
    },
    "3640": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13771,
        13781
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3641": {
      "branch": 153,
      "fn": "Bank.getCurrentValue",
      "offset": [
        13771,
        13781
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3642": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13767,
        13811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE4D"
    },
    "3645": {
      "branch": 153,
      "fn": "Bank.getCurrentValue",
      "offset": [
        13767,
        13811
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3646": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13791,
        13795
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 44,
      "value": "0x1"
    },
    "3648": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13791,
        13795
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13797,
        13803
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13805,
        13810
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13783,
        13811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE5A"
    },
    "3657": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13783,
        13811
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3658": {
      "op": "POP"
    },
    "3659": {
      "op": "POP"
    },
    "3660": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13783,
        13811
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3661": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13767,
        13811
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3662": {
      "op": "POP"
    },
    "3663": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13829,
        13834
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 45,
      "value": "0x0"
    },
    "3665": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13829,
        13834
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3666": {
      "op": "POP"
    },
    "3667": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13829,
        13834
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3668": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13829,
        13834
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3669": {
      "op": "POP"
    },
    "3670": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13839,
        13844
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3671": {
      "op": "POP"
    },
    "3672": {
      "op": "POP"
    },
    "3673": {
      "op": "POP"
    },
    "3674": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3675": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3676": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3677": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3678": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3679": {
      "fn": "Bank.getCurrentValue",
      "offset": [
        13238,
        13852
      ],
      "op": "POP",
      "path": "3"
    },
    "3680": {
      "fn": "Bank.getCurrentValue",
      "jump": "o",
      "offset": [
        13238,
        13852
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3681": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3688": {
      "op": "SHL"
    },
    "3689": {
      "op": "SUB"
    },
    "3690": {
      "fn": "Bank.addKeeper",
      "offset": [
        14034,
        14054
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 46
    },
    "3691": {
      "branch": 154,
      "fn": "Bank.addKeeper",
      "offset": [
        14034,
        14054
      ],
      "op": "AND",
      "path": "3"
    },
    "3692": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEAF"
    },
    "3695": {
      "branch": 154,
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3696": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3698": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3705": {
      "op": "SHL"
    },
    "3706": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3707": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3710": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3712": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3713": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "ADD",
      "path": "3"
    },
    "3714": {
      "op": "MSTORE"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3719": {
      "op": "DUP3"
    },
    "3720": {
      "op": "ADD"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "op": "PUSH21",
      "value": "0x1BDC195C985D1A5BDB881B9BDD08185B1B1BDDD959"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "3746": {
      "op": "SHL"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3749": {
      "op": "DUP3"
    },
    "3750": {
      "op": "ADD"
    },
    "3751": {
      "op": "MSTORE"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3754": {
      "op": "ADD"
    },
    "3755": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "3758": {
      "op": "JUMP"
    },
    "3759": {
      "fn": "Bank.addKeeper",
      "offset": [
        14026,
        14080
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3760": {
      "fn": "Bank.addKeeper",
      "offset": [
        14090,
        14120
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 47,
      "value": "0xEC7"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3765": {
      "op": "DUP1"
    },
    "3766": {
      "op": "MLOAD"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3769": {
      "op": "PUSH2",
      "value": "0x2BC2"
    },
    "3772": {
      "op": "DUP4"
    },
    "3773": {
      "op": "CODECOPY"
    },
    "3774": {
      "op": "DUP2"
    },
    "3775": {
      "op": "MLOAD"
    },
    "3776": {
      "op": "SWAP2"
    },
    "3777": {
      "op": "MSTORE"
    },
    "3778": {
      "fn": "Bank.addKeeper",
      "offset": [
        14113,
        14119
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3779": {
      "fn": "Bank.addKeeper",
      "offset": [
        14090,
        14099
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x90D"
    },
    "3782": {
      "fn": "Bank.addKeeper",
      "jump": "i",
      "offset": [
        14090,
        14120
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3783": {
      "fn": "Bank.addKeeper",
      "offset": [
        14090,
        14120
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3784": {
      "fn": "Bank.addKeeper",
      "offset": [
        13972,
        14127
      ],
      "op": "POP",
      "path": "3"
    },
    "3785": {
      "fn": "Bank.addKeeper",
      "jump": "o",
      "offset": [
        13972,
        14127
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3786": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5628,
        6290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3787": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3789": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED5"
    },
    "3792": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3793": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "3796": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3797": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3798": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5768,
        5775
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 48,
      "value": "0xF"
    },
    "3800": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5768,
        5793
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3801": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5768,
        5803
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3802": {
      "op": "GT"
    },
    "3803": {
      "branch": 155,
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5768,
        5803
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3804": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF27"
    },
    "3807": {
      "branch": 155,
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3808": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3810": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3811": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3817": {
      "op": "SHL"
    },
    "3818": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3819": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3822": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3824": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3825": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "ADD",
      "path": "3"
    },
    "3826": {
      "op": "DUP2"
    },
    "3827": {
      "op": "SWAP1"
    },
    "3828": {
      "op": "MSTORE"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3831": {
      "op": "DUP3"
    },
    "3832": {
      "op": "ADD"
    },
    "3833": {
      "op": "MSTORE"
    },
    "3834": {
      "op": "PUSH32",
      "value": "0x4E4F5420454E4F55474820434F4C4C41544552414C20494E2052455345525645"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3869": {
      "op": "DUP3"
    },
    "3870": {
      "op": "ADD"
    },
    "3871": {
      "op": "MSTORE"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "3878": {
      "op": "JUMP"
    },
    "3879": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5747,
        5861
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3880": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5871,
        5888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3882": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5891,
        5903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF34"
    },
    "3885": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5900,
        5903
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC8"
    },
    "3887": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5891,
        5897
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3888": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5891,
        5903
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "3891": {
      "fn": "Bank.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        5891,
        5903
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3892": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5891,
        5903
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3893": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5871,
        5903
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3894": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5871,
        5903
      ],
      "op": "POP",
      "path": "3"
    },
    "3895": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5976,
        5982
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 49
    },
    "3896": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5954
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "3898": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5972
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3900": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5972
      ],
      "op": "ADD",
      "path": "3"
    },
    "3901": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5972
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3903": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3904": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3905": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3906": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF4B"
    },
    "3909": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3910": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3911": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "3914": {
      "fn": "Bank.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        5947,
        5982
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3915": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3916": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3917": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3918": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5947,
        5982
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3919": {
      "op": "POP"
    },
    "3920": {
      "op": "POP"
    },
    "3921": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6013,
        6023
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 50,
      "value": "0x9"
    },
    "3923": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6013,
        6036
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3924": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3926": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3927": {
      "op": "DUP5"
    },
    "3928": {
      "op": "DUP2"
    },
    "3929": {
      "op": "MSTORE"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3936": {
      "op": "SHL"
    },
    "3937": {
      "op": "SUB"
    },
    "3938": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6013,
        6036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3939": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6013,
        6036
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3940": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6013,
        6036
      ],
      "op": "AND",
      "path": "3"
    },
    "3941": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6013,
        6036
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3942": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x529AFC4538720FE0B3EADC40486369AB962002D72FEAD1387B300C66073E7BF"
    },
    "3975": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3981": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3982": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3983": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3984": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "SUB",
      "path": "3"
    },
    "3985": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3986": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        5997,
        6045
      ],
      "op": "LOG2",
      "path": "3"
    },
    "3987": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6055,
        6165
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 51,
      "value": "0xFB3"
    },
    "3990": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6113,
        6123
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3991": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6137,
        6155
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFA0"
    },
    "3994": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6146,
        6155
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3995": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6137,
        6143
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3996": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6137,
        6155
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "3999": {
      "fn": "Bank.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        6137,
        6155
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4000": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6137,
        6155
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4001": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6062,
        6072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "4003": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6062,
        6085
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4010": {
      "op": "SHL"
    },
    "4011": {
      "op": "SUB"
    },
    "4012": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6062,
        6085
      ],
      "op": "AND",
      "path": "3"
    },
    "4013": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6062,
        6085
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4014": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6055,
        6165
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4015": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6055,
        6099
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "4018": {
      "fn": "Bank.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        6055,
        6165
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4019": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6055,
        6165
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4020": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6233,
        6250
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 52,
      "value": "0x4D"
    },
    "4022": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6233,
        6250
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4023": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6182,
        6192
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "4025": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6182,
        6205
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4026": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6175,
        6283
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x932"
    },
    "4029": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6175,
        6283
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4036": {
      "op": "SHL"
    },
    "4037": {
      "op": "SUB"
    },
    "4038": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6182,
        6205
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4039": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6182,
        6205
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4040": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6182,
        6205
      ],
      "op": "AND",
      "path": "3"
    },
    "4041": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6182,
        6205
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4042": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6233,
        6250
      ],
      "op": "AND",
      "path": "3"
    },
    "4043": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6264,
        6273
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4044": {
      "fn": "Bank.reserveWithdrawCollateral",
      "offset": [
        6175,
        6219
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "4047": {
      "fn": "Bank.reserveWithdrawCollateral",
      "jump": "i",
      "offset": [
        6175,
        6283
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4048": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        6995,
        7396
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4049": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7062,
        7096
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 53,
      "value": "0xFE8"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4054": {
      "op": "DUP1"
    },
    "4055": {
      "op": "MLOAD"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4058": {
      "op": "PUSH2",
      "value": "0x2BA2"
    },
    "4061": {
      "op": "DUP4"
    },
    "4062": {
      "op": "CODECOPY"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "MLOAD"
    },
    "4065": {
      "op": "SWAP2"
    },
    "4066": {
      "op": "MSTORE"
    },
    "4067": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7085,
        7095
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4068": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7062,
        7069
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184C"
    },
    "4071": {
      "fn": "Bank.updateDebtPrice",
      "jump": "i",
      "offset": [
        7062,
        7096
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4072": {
      "branch": 156,
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7062,
        7096
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4073": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7062,
        7155
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4074": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7062,
        7155
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF9"
    },
    "4077": {
      "branch": 156,
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7062,
        7155
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7116,
        7155
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF9"
    },
    "4082": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4084": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7144,
        7154
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4085": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7116,
        7123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184C"
    },
    "4088": {
      "fn": "Bank.updateDebtPrice",
      "jump": "i",
      "offset": [
        7116,
        7155
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4089": {
      "branch": 157,
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7116,
        7155
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4090": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1045"
    },
    "4093": {
      "branch": 157,
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4094": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4096": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4103": {
      "op": "SHL"
    },
    "4104": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4105": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4108": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4110": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4111": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "ADD",
      "path": "3"
    },
    "4112": {
      "op": "MSTORE"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4117": {
      "op": "DUP3"
    },
    "4118": {
      "op": "ADD"
    },
    "4119": {
      "op": "MSTORE"
    },
    "4120": {
      "op": "PUSH32",
      "value": "0x6E6F742070726963652075706461746572206F722061646D696E000000000000"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4155": {
      "op": "DUP3"
    },
    "4156": {
      "op": "ADD"
    },
    "4157": {
      "op": "MSTORE"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "4164": {
      "op": "JUMP"
    },
    "4165": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7041,
        7207
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4166": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7283,
        7303
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 54,
      "value": "0x6"
    },
    "4168": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7283,
        7303
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4169": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7254,
        7313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1051"
    },
    "4172": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7254,
        7313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4173": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7254,
        7269
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC5"
    },
    "4176": {
      "fn": "Bank.updateDebtPrice",
      "jump": "i",
      "offset": [
        7254,
        7313
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4177": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7254,
        7313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4178": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7232,
        7250
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4180": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7217,
        7313
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4181": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7220,
        7230
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4183": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7217,
        7313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4184": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7217,
        7313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4185": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7217,
        7313
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4186": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7220,
        7224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4188": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7359,
        7376
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 55
    },
    "4189": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4191": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4192": {
      "op": "SWAP2"
    },
    "4193": {
      "op": "DUP3"
    },
    "4194": {
      "op": "MSTORE"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4201": {
      "op": "SHL"
    },
    "4202": {
      "op": "SUB"
    },
    "4203": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7359,
        7376
      ],
      "op": "AND",
      "path": "3"
    },
    "4204": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7359,
        7376
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C"
    },
    "4239": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4242": {
      "op": "ADD"
    },
    "4243": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4244": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4246": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4247": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4248": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4249": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "SUB",
      "path": "3"
    },
    "4250": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4251": {
      "fn": "Bank.updateDebtPrice",
      "offset": [
        7347,
        7389
      ],
      "op": "LOG2",
      "path": "3"
    },
    "4252": {
      "fn": "Bank.updateDebtPrice",
      "jump": "o",
      "offset": [
        6995,
        7396
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4253": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14255,
        14356
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4254": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14315,
        14349
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 56,
      "value": "0xEC7"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4259": {
      "op": "DUP1"
    },
    "4260": {
      "op": "MLOAD"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4263": {
      "op": "PUSH2",
      "value": "0x2BC2"
    },
    "4266": {
      "op": "DUP4"
    },
    "4267": {
      "op": "CODECOPY"
    },
    "4268": {
      "op": "DUP2"
    },
    "4269": {
      "op": "MLOAD"
    },
    "4270": {
      "op": "SWAP2"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14339,
        14348
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4273": {
      "fn": "Bank.revokeKeeper",
      "offset": [
        14315,
        14325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19CD"
    },
    "4276": {
      "fn": "Bank.revokeKeeper",
      "jump": "i",
      "offset": [
        14315,
        14349
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4277": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13052,
        13232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4278": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13126,
        13143
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 57,
      "value": "0x4D"
    },
    "4280": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13126,
        13143
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4287": {
      "op": "SHL"
    },
    "4288": {
      "op": "SUB"
    },
    "4289": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13126,
        13143
      ],
      "op": "AND",
      "path": "3"
    },
    "4290": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13147,
        13157
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4291": {
      "branch": 158,
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13126,
        13157
      ],
      "op": "EQ",
      "path": "3"
    },
    "4292": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x110F"
    },
    "4295": {
      "branch": 158,
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4296": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4298": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4299": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4305": {
      "op": "SHL"
    },
    "4306": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4307": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4310": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4312": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4313": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "ADD",
      "path": "3"
    },
    "4314": {
      "op": "MSTORE"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4319": {
      "op": "DUP3"
    },
    "4320": {
      "op": "ADD"
    },
    "4321": {
      "op": "MSTORE"
    },
    "4322": {
      "op": "PUSH32",
      "value": "0x4953204E4F542042414E4B20464143544F5259204F574E455200000000000000"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4357": {
      "op": "DUP3"
    },
    "4358": {
      "op": "ADD"
    },
    "4359": {
      "op": "MSTORE"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4362": {
      "op": "ADD"
    },
    "4363": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "4366": {
      "op": "JUMP"
    },
    "4367": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13118,
        13187
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4368": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13214
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 58,
      "value": "0x4D"
    },
    "4370": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4371": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4378": {
      "op": "SHL"
    },
    "4379": {
      "op": "SUB"
    },
    "4380": {
      "op": "NOT"
    },
    "4381": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "AND",
      "path": "3"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4388": {
      "op": "SHL"
    },
    "4389": {
      "op": "SUB"
    },
    "4390": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4391": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4392": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4393": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "AND",
      "path": "3"
    },
    "4394": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4395": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4396": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4397": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "OR",
      "path": "3"
    },
    "4398": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4399": {
      "fn": "Bank.setBankFactoryOwner",
      "offset": [
        13197,
        13225
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4400": {
      "fn": "Bank.setBankFactoryOwner",
      "jump": "o",
      "offset": [
        13052,
        13232
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4401": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4402": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9822,
        9832
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4403": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9833
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4405": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9833
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4406": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9833
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4407": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9833
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4408": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9821
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4410": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9833
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4412": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9833
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4413": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9833
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4415": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9833
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4416": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9833
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4417": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9844
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4419": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9844
      ],
      "op": "ADD",
      "path": "3"
    },
    "4420": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9844
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4421": {
      "branch": 159,
      "fn": "Bank.vaultBorrow",
      "offset": [
        9815,
        9849
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4422": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9811,
        9929
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1165"
    },
    "4425": {
      "branch": 159,
      "fn": "Bank.vaultBorrow",
      "offset": [
        9811,
        9929
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4426": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9897,
        9918
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 59,
      "value": "0x1151"
    },
    "4429": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9897,
        9916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1877"
    },
    "4432": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        9897,
        9918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4433": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9897,
        9918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4434": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9872,
        9882
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4435": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9883
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4437": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9883
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4438": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9883
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4439": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9883
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4440": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9871
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4442": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9883
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4444": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9883
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4445": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9883
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4447": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9883
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4448": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9883
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4449": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9894
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4451": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9894
      ],
      "op": "ADD",
      "path": "3"
    },
    "4452": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9865,
        9918
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4453": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9811,
        9929
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4454": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10067,
        10097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x13"
    },
    "4456": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10067,
        10097
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4457": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10067,
        10097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4459": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10042,
        10052
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4460": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10010,
        10026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "4462": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10010,
        10026
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4463": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9967,
        9977
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4464": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9938,
        9955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4466": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9978
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4467": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9978
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4468": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9978
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4469": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9966
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4471": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4473": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9978
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4474": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4476": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9978
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4477": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9978
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4478": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        9995
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4479": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9938,
        9955
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4480": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9938,
        9955
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4481": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10067,
        10097
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4482": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10042,
        10052
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4483": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        10026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x118B"
    },
    "4486": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        10026
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4487": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        10026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "4490": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        9960,
        10026
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4491": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9960,
        10026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4492": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1195"
    },
    "4495": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10052
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4496": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10052
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4497": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "4500": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        9959,
        10052
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4501": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10052
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4502": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10097
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x119F"
    },
    "4505": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10097
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4506": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4507": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10097
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "4510": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        9959,
        10097
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4511": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9959,
        10097
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4512": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9958,
        10104
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11AA"
    },
    "4515": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9958,
        10104
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4516": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10101,
        10104
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4518": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9958,
        10104
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "4521": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        9958,
        10104
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4522": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9958,
        10104
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4523": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10127,
        10148
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 60,
      "value": "0x5"
    },
    "4525": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10127,
        10148
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4526": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9938,
        10104
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4527": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9938,
        10104
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10114,
        10148
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11BA"
    },
    "4532": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10114,
        10148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4533": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9938,
        10104
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4534": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10114,
        10148
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "4537": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10114,
        10148
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4538": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10114,
        10148
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4539": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10171,
        10198
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 61,
      "value": "0xB"
    },
    "4541": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10171,
        10198
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4542": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10114,
        10148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4543": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10114,
        10148
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4544": {
      "op": "POP"
    },
    "4545": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10158,
        10198
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CA"
    },
    "4548": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10158,
        10198
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4549": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10114,
        10148
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4550": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10158,
        10198
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "4553": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10158,
        10198
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4554": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10158,
        10198
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4555": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10228,
        10238
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 62
    },
    "4556": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4558": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10239
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4559": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10239
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4560": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10239
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4561": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10227
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4563": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4565": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10239
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4566": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4568": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10239
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4569": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10239
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4570": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10250
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4572": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10250
      ],
      "op": "ADD",
      "path": "3"
    },
    "4573": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10221,
        10250
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4574": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10158,
        10198
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4575": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10158,
        10198
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4576": {
      "op": "POP"
    },
    "4577": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10208,
        10250
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11EA"
    },
    "4580": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10208,
        10250
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4581": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10158,
        10198
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4582": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10208,
        10250
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "4585": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10208,
        10250
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4586": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10208,
        10250
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4587": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10337,
        10359
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 63,
      "value": "0x12"
    },
    "4589": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10337,
        10359
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4590": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10208,
        10250
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4591": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10208,
        10250
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4592": {
      "op": "POP"
    },
    "4593": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10363,
        10368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "4596": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10363,
        10368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4597": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10328,
        10359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11FE"
    },
    "4600": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10328,
        10359
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4601": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10328,
        10334
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4602": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10328,
        10359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "4605": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10328,
        10359
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4606": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10328,
        10359
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4607": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10327,
        10368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1208"
    },
    "4610": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10327,
        10368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4611": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10327,
        10368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4612": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10327,
        10368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "4615": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10327,
        10368
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4616": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10327,
        10368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4617": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10305,
        10369
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1212"
    },
    "4620": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10305,
        10369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4621": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10305,
        10311
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4622": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10305,
        10369
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E7"
    },
    "4625": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10305,
        10369
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4626": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10305,
        10369
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4627": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10267,
        10277
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4628": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4630": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4631": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4632": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4633": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4635": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4637": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4638": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4640": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4641": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4642": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4644": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10289
      ],
      "op": "ADD",
      "path": "3"
    },
    "4645": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4646": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4647": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10289
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4648": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10289
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4649": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10278
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4650": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1234"
    },
    "4653": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4654": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4655": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4656": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E7"
    },
    "4659": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10260,
        10369
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4660": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4661": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4662": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4663": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10260,
        10369
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10407,
        10417
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 64
    },
    "4667": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10418
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4669": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10418
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4670": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10418
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4671": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10418
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4672": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10406
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4674": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10418
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4676": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10418
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4677": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10418
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4679": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10418
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4680": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10418
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4681": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10429
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4683": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10429
      ],
      "op": "ADD",
      "path": "3"
    },
    "4684": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10429
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4685": {
      "branch": 160,
      "fn": "Bank.vaultBorrow",
      "offset": [
        10400,
        10441
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4686": {
      "op": "GT"
    },
    "4687": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1292"
    },
    "4690": {
      "branch": 160,
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4691": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4693": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4694": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4700": {
      "op": "SHL"
    },
    "4701": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4702": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4705": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4707": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4708": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "ADD",
      "path": "3"
    },
    "4709": {
      "op": "MSTORE"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4714": {
      "op": "DUP3"
    },
    "4715": {
      "op": "ADD"
    },
    "4716": {
      "op": "MSTORE"
    },
    "4717": {
      "op": "PUSH21",
      "value": "0x1393D508115393D551D20810D3D313105511549053"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "4741": {
      "op": "SHL"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4744": {
      "op": "DUP3"
    },
    "4745": {
      "op": "ADD"
    },
    "4746": {
      "op": "MSTORE"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "4753": {
      "op": "JUMP"
    },
    "4754": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10379,
        10488
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4755": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10536,
        10540
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 65,
      "value": "0x3"
    },
    "4757": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10536,
        10553
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4758": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4760": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4761": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4768": {
      "op": "SHL"
    },
    "4769": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4770": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4771": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10573,
        10577
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4772": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4774": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4775": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "ADD",
      "path": "3"
    },
    "4776": {
      "op": "MSTORE"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4783": {
      "op": "SHL"
    },
    "4784": {
      "op": "SUB"
    },
    "4785": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10536,
        10553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4786": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10536,
        10553
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4787": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10536,
        10553
      ],
      "op": "AND",
      "path": "3"
    },
    "4788": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10536,
        10553
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4789": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10564
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "4794": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10564
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4797": {
      "op": "ADD"
    },
    "4798": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4800": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4802": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4803": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4804": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4805": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "SUB",
      "path": "3"
    },
    "4806": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4807": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4808": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "GAS",
      "path": "3"
    },
    "4809": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4810": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4811": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4812": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4813": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12DA"
    },
    "4816": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4817": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4818": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4820": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4821": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4822": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4823": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4825": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4826": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4827": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "POP",
      "path": "3"
    },
    "4828": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "POP",
      "path": "3"
    },
    "4829": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "POP",
      "path": "3"
    },
    "4830": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "POP",
      "path": "3"
    },
    "4831": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4833": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4834": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4835": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4837": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "NOT",
      "path": "3"
    },
    "4838": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4840": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4841": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "ADD",
      "path": "3"
    },
    "4842": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "AND",
      "path": "3"
    },
    "4843": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4844": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "ADD",
      "path": "3"
    },
    "4845": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4846": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4848": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4849": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "POP",
      "path": "3"
    },
    "4850": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4851": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "ADD",
      "path": "3"
    },
    "4852": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4853": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12FE"
    },
    "4856": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4857": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4858": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A92"
    },
    "4861": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10529,
        10579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4862": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10529,
        10579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4863": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10519,
        10525
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4864": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10519,
        10579
      ],
      "op": "GT",
      "path": "3"
    },
    "4865": {
      "branch": 161,
      "fn": "Bank.vaultBorrow",
      "offset": [
        10519,
        10579
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4866": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1343"
    },
    "4869": {
      "branch": 161,
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4870": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4872": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4879": {
      "op": "SHL"
    },
    "4880": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4881": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4884": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4886": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4887": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "ADD",
      "path": "3"
    },
    "4888": {
      "op": "MSTORE"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4893": {
      "op": "DUP3"
    },
    "4894": {
      "op": "ADD"
    },
    "4895": {
      "op": "MSTORE"
    },
    "4896": {
      "op": "PUSH19",
      "value": "0x4E4F5420454E4F554748205245534552564553"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "4918": {
      "op": "SHL"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4921": {
      "op": "DUP3"
    },
    "4922": {
      "op": "ADD"
    },
    "4923": {
      "op": "MSTORE"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4926": {
      "op": "ADD"
    },
    "4927": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "4930": {
      "op": "JUMP"
    },
    "4931": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10498,
        10624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4932": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10687,
        10701
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x16"
    },
    "4934": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10687,
        10701
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4935": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10663,
        10673
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4936": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4938": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4939": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4940": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4941": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10662
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4943": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4945": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4946": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4947": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4948": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4950": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4951": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4952": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10674
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4953": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10684
      ],
      "op": "ADD",
      "path": "3"
    },
    "4954": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10656,
        10684
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4955": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10638,
        10684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1364"
    },
    "4958": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10638,
        10684
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4959": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10638,
        10653
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4960": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10638,
        10684
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "4963": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10638,
        10684
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4964": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10638,
        10684
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4965": {
      "branch": 162,
      "fn": "Bank.vaultBorrow",
      "offset": [
        10638,
        10701
      ],
      "op": "GT",
      "path": "3"
    },
    "4966": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10634,
        10846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4967": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10634,
        10846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1381"
    },
    "4970": {
      "branch": 162,
      "fn": "Bank.vaultBorrow",
      "offset": [
        10634,
        10846
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4971": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10796,
        10806
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 66
    },
    "4972": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4974": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4975": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4976": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4977": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10795
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4979": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4981": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4982": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4983": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4984": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4986": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4987": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4988": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10807
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4989": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10820,
        10835
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "4990": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10817
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4991": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10817
      ],
      "op": "ADD",
      "path": "3"
    },
    "4992": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10789,
        10835
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4993": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10634,
        10846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4994": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10878,
        10884
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 67
    },
    "4995": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10862
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "4997": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4999": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10874
      ],
      "op": "ADD",
      "path": "3"
    },
    "5000": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5002": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5003": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5004": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5005": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1396"
    },
    "5008": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5009": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5010": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "5013": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10855,
        10884
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5014": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5015": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5016": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5017": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10855,
        10884
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5018": {
      "op": "POP"
    },
    "5019": {
      "op": "POP"
    },
    "5020": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10901,
        10905
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 68,
      "value": "0x3"
    },
    "5022": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10901,
        10918
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5023": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10894,
        10952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B2"
    },
    "5026": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10894,
        10952
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5033": {
      "op": "SHL"
    },
    "5034": {
      "op": "SUB"
    },
    "5035": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10901,
        10918
      ],
      "op": "AND",
      "path": "3"
    },
    "5036": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10933,
        10943
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5037": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10945,
        10951
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5038": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10894,
        10932
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "5041": {
      "fn": "Bank.vaultBorrow",
      "jump": "i",
      "offset": [
        10894,
        10952
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5042": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10894,
        10952
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5043": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 69,
      "value": "0x40"
    },
    "5045": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5046": {
      "op": "DUP3"
    },
    "5047": {
      "op": "DUP2"
    },
    "5048": {
      "op": "MSTORE"
    },
    "5049": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10979,
        10989
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5050": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10979,
        10989
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5051": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x232862A021D33EA4A70F5D509B754F0F6986AAA0FFDD5C7DB4910422AFC768A"
    },
    "5084": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5087": {
      "op": "ADD"
    },
    "5088": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5089": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5091": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5092": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5093": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5094": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "SUB",
      "path": "3"
    },
    "5095": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5096": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        10967,
        10998
      ],
      "op": "LOG2",
      "path": "3"
    },
    "5097": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9801,
        11005
      ],
      "op": "POP",
      "path": "3"
    },
    "5098": {
      "fn": "Bank.vaultBorrow",
      "offset": [
        9755,
        11005
      ],
      "op": "POP",
      "path": "3"
    },
    "5099": {
      "fn": "Bank.vaultBorrow",
      "jump": "o",
      "offset": [
        9755,
        11005
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5100": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5101": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9306,
        9307
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 70,
      "value": "0x0"
    },
    "5103": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9297,
        9303
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5104": {
      "branch": 163,
      "fn": "Bank.vaultDeposit",
      "offset": [
        9297,
        9307
      ],
      "op": "GT",
      "path": "3"
    },
    "5105": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x140C"
    },
    "5108": {
      "branch": 163,
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5109": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5111": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5112": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5118": {
      "op": "SHL"
    },
    "5119": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5120": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5121": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5123": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "ADD",
      "path": "3"
    },
    "5124": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "5127": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5128": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29A6"
    },
    "5131": {
      "fn": "Bank.vaultDeposit",
      "jump": "i",
      "offset": [
        9289,
        9329
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5132": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9289,
        9329
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5133": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9346,
        9356
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 71
    },
    "5134": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5136": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5137": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5138": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5139": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5141": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5143": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5144": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5146": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5147": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5148": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9384
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5149": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9384
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5150": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9378,
        9384
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5151": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9378,
        9384
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5152": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9357
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5153": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x142B"
    },
    "5156": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5157": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9378,
        9384
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5158": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9378,
        9384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5159": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E7"
    },
    "5162": {
      "fn": "Bank.vaultDeposit",
      "jump": "i",
      "offset": [
        9339,
        9384
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5163": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5164": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9384
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5165": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9384
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5166": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9339,
        9384
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5167": {
      "op": "POP"
    },
    "5168": {
      "op": "POP"
    },
    "5169": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9401
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 72,
      "value": "0xF"
    },
    "5171": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9429
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5172": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9429
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5173": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9423,
        9429
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5174": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9423,
        9429
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5175": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9401
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5176": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9419
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5178": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9419
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5179": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9429
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1445"
    },
    "5182": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9429
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5183": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9423,
        9429
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5184": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9423,
        9429
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5185": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9429
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E7"
    },
    "5188": {
      "fn": "Bank.vaultDeposit",
      "jump": "i",
      "offset": [
        9394,
        9429
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5189": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9429
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5190": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9429
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5191": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9429
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5192": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9394,
        9429
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5193": {
      "op": "POP"
    },
    "5194": {
      "op": "POP"
    },
    "5195": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9446,
        9456
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 73,
      "value": "0x9"
    },
    "5197": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9446,
        9469
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5198": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9439,
        9568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1462"
    },
    "5201": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9439,
        9568
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5208": {
      "op": "SHL"
    },
    "5209": {
      "op": "SUB"
    },
    "5210": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9446,
        9469
      ],
      "op": "AND",
      "path": "3"
    },
    "5211": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9501,
        9511
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5212": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9533,
        9537
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5213": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9552,
        9558
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5214": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9439,
        9487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E08"
    },
    "5217": {
      "fn": "Bank.vaultDeposit",
      "jump": "i",
      "offset": [
        9439,
        9568
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5218": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9439,
        9568
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5219": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 74,
      "value": "0x40"
    },
    "5221": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5222": {
      "op": "DUP2"
    },
    "5223": {
      "op": "DUP2"
    },
    "5224": {
      "op": "MSTORE"
    },
    "5225": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9596,
        9606
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5226": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9596,
        9606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5227": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x89D28CF06BDB2EE1B92CD046D58450042AD113E9F4CDABFC4D43E7C5557758D7"
    },
    "5260": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5263": {
      "op": "ADD"
    },
    "5264": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5266": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5267": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5268": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5269": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "SUB",
      "path": "3"
    },
    "5270": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5271": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9583,
        9615
      ],
      "op": "LOG2",
      "path": "3"
    },
    "5272": {
      "fn": "Bank.vaultDeposit",
      "offset": [
        9232,
        9622
      ],
      "op": "POP",
      "path": "3"
    },
    "5273": {
      "fn": "Bank.vaultDeposit",
      "jump": "o",
      "offset": [
        9232,
        9622
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5274": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5275": {
      "offset": [
        1048,
        1060
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1A"
    },
    "5277": {
      "fn": "Bank.init",
      "offset": [
        1048,
        1060
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5278": {
      "fn": "Bank.init",
      "offset": [
        1048,
        1060
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "5281": {
      "fn": "Bank.init",
      "offset": [
        1048,
        1060
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5282": {
      "fn": "Bank.init",
      "offset": [
        1048,
        1060
      ],
      "op": "DIV",
      "path": "19"
    },
    "5283": {
      "fn": "Bank.init",
      "offset": [
        1048,
        1060
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "5285": {
      "fn": "Bank.init",
      "offset": [
        1048,
        1060
      ],
      "op": "AND",
      "path": "19"
    },
    "5286": {
      "branch": 181,
      "fn": "Bank.init",
      "offset": [
        1048,
        1060
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5287": {
      "offset": [
        1048,
        1079
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14AF"
    },
    "5290": {
      "branch": 181,
      "offset": [
        1048,
        1079
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5291": {
      "op": "POP"
    },
    "5292": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1844,
        1848
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5293": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1888,
        1905
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5294": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1919,
        1926
      ],
      "op": "ISZERO",
      "path": "19",
      "statement": 75
    },
    "5295": {
      "offset": [
        1064,
        1079
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5296": {
      "offset": [
        1048,
        1095
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5297": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1048,
        1095
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14BD"
    },
    "5300": {
      "offset": [
        1048,
        1095
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5301": {
      "op": "POP"
    },
    "5302": {
      "offset": [
        1084,
        1095
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1A"
    },
    "5304": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1084,
        1095
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5305": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1084,
        1095
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "5307": {
      "branch": 182,
      "fn": "Initializable.isConstructor",
      "offset": [
        1084,
        1095
      ],
      "op": "AND",
      "path": "19"
    },
    "5308": {
      "offset": [
        1083,
        1095
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5309": {
      "offset": [
        1048,
        1095
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5310": {
      "offset": [
        1040,
        1146
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1520"
    },
    "5313": {
      "branch": 182,
      "offset": [
        1040,
        1146
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5314": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5316": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5323": {
      "op": "SHL"
    },
    "5324": {
      "offset": [
        1040,
        1146
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5325": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5328": {
      "offset": [
        1040,
        1146
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5330": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5331": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1040,
        1146
      ],
      "op": "ADD",
      "path": "19"
    },
    "5332": {
      "op": "MSTORE"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5337": {
      "op": "DUP3"
    },
    "5338": {
      "op": "ADD"
    },
    "5339": {
      "op": "MSTORE"
    },
    "5340": {
      "op": "PUSH32",
      "value": "0x436F6E747261637420696E7374616E63652068617320616C7265616479206265"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5375": {
      "op": "DUP3"
    },
    "5376": {
      "op": "ADD"
    },
    "5377": {
      "op": "MSTORE"
    },
    "5378": {
      "op": "PUSH14",
      "value": "0x195B881A5B9A5D1A585B1A5E9959"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "5395": {
      "op": "SHL"
    },
    "5396": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5398": {
      "op": "DUP3"
    },
    "5399": {
      "op": "ADD"
    },
    "5400": {
      "op": "MSTORE"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5403": {
      "op": "ADD"
    },
    "5404": {
      "offset": [
        1040,
        1146
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x732"
    },
    "5407": {
      "op": "JUMP"
    },
    "5408": {
      "offset": [
        1040,
        1146
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5409": {
      "offset": [
        1176,
        1188
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1A"
    },
    "5411": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5412": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "5415": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5416": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "DIV",
      "path": "19"
    },
    "5417": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "5419": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1176,
        1188
      ],
      "op": "AND",
      "path": "19"
    },
    "5420": {
      "offset": [
        1175,
        1188
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5421": {
      "offset": [
        1194,
        1274
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5422": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1194,
        1274
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5423": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1194,
        1274
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1542"
    },
    "5426": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1194,
        1274
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5427": {
      "offset": [
        1222,
        1234
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1A"
    },
    "5429": {
      "offset": [
        1222,
        1241
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5430": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1222,
        1241
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5431": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5434": {
      "op": "NOT"
    },
    "5435": {
      "offset": [
        1249,
        1267
      ],
      "op": "AND",
      "path": "19"
    },
    "5436": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1249,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x101"
    },
    "5439": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1249,
        1267
      ],
      "op": "OR",
      "path": "19"
    },
    "5440": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1249,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5441": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1249,
        1267
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5442": {
      "offset": [
        1194,
        1274
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5443": {
      "fn": "Bank.init",
      "offset": [
        2323,
        2362
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 76,
      "value": "0x154D"
    },
    "5446": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5448": {
      "fn": "Bank.init",
      "offset": [
        2354,
        2361
      ],
      "op": "DUP12",
      "path": "3"
    },
    "5449": {
      "fn": "Bank.init",
      "offset": [
        2323,
        2333
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F7F"
    },
    "5452": {
      "fn": "Bank.init",
      "jump": "i",
      "offset": [
        2323,
        2362
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5453": {
      "fn": "Bank.init",
      "offset": [
        2323,
        2362
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5454": {
      "fn": "Bank.init",
      "offset": [
        2372,
        2392
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 77,
      "value": "0x11"
    },
    "5456": {
      "fn": "Bank.init",
      "offset": [
        2372,
        2407
      ],
      "op": "DUP9",
      "path": "3"
    },
    "5457": {
      "fn": "Bank.init",
      "offset": [
        2372,
        2407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5458": {
      "fn": "Bank.init",
      "offset": [
        2372,
        2407
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5459": {
      "fn": "Bank.init",
      "offset": [
        2417,
        2439
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 78,
      "value": "0x12"
    },
    "5461": {
      "fn": "Bank.init",
      "offset": [
        2417,
        2456
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5462": {
      "fn": "Bank.init",
      "offset": [
        2417,
        2456
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5463": {
      "fn": "Bank.init",
      "offset": [
        2417,
        2456
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5464": {
      "fn": "Bank.init",
      "offset": [
        2466,
        2496
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 79,
      "value": "0x13"
    },
    "5466": {
      "fn": "Bank.init",
      "offset": [
        2466,
        2521
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5467": {
      "fn": "Bank.init",
      "offset": [
        2466,
        2521
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5468": {
      "fn": "Bank.init",
      "offset": [
        2466,
        2521
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5469": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2553
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 80,
      "value": "0x15"
    },
    "5471": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5472": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5479": {
      "op": "SHL"
    },
    "5480": {
      "op": "SUB"
    },
    "5481": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5482": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5483": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "AND",
      "path": "3"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5490": {
      "op": "SHL"
    },
    "5491": {
      "op": "SUB"
    },
    "5492": {
      "op": "NOT"
    },
    "5493": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5494": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5495": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "AND",
      "path": "3"
    },
    "5496": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "OR",
      "path": "3"
    },
    "5497": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5498": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5499": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5500": {
      "fn": "Bank.init",
      "offset": [
        2580,
        2606
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 81,
      "value": "0x14"
    },
    "5502": {
      "fn": "Bank.init",
      "offset": [
        2580,
        2627
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5503": {
      "fn": "Bank.init",
      "offset": [
        2580,
        2627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5504": {
      "fn": "Bank.init",
      "offset": [
        2580,
        2627
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5505": {
      "fn": "Bank.init",
      "offset": [
        2637,
        2651
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 82,
      "value": "0x16"
    },
    "5507": {
      "fn": "Bank.init",
      "offset": [
        2637,
        2660
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5508": {
      "fn": "Bank.init",
      "offset": [
        2637,
        2660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5509": {
      "fn": "Bank.init",
      "offset": [
        2637,
        2660
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5510": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2687
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 83,
      "value": "0x4D"
    },
    "5512": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5513": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5514": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5515": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5516": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "AND",
      "path": "3"
    },
    "5517": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5518": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5519": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5520": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "AND",
      "path": "3"
    },
    "5521": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5522": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5523": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5524": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "OR",
      "path": "3"
    },
    "5525": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5526": {
      "fn": "Bank.init",
      "offset": [
        2670,
        2706
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5527": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "DUP9",
      "path": "3",
      "statement": 84
    },
    "5528": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5529": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15A9"
    },
    "5532": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5533": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5535": {
      "fn": "Bank.init",
      "offset": [
        2531,
        2570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5536": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5538": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "DUP13",
      "path": "3"
    },
    "5539": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "ADD",
      "path": "3"
    },
    "5540": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5541": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2675"
    },
    "5544": {
      "fn": "Bank.init",
      "jump": "i",
      "offset": [
        2716,
        2731
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5545": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5546": {
      "fn": "Bank.init",
      "offset": [
        2716,
        2731
      ],
      "op": "POP",
      "path": "3"
    },
    "5547": {
      "offset": [
        1292,
        1306
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5548": {
      "offset": [
        1288,
        1343
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5549": {
      "fn": "Bank.init",
      "offset": [
        1288,
        1343
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15BC"
    },
    "5552": {
      "offset": [
        1288,
        1343
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5553": {
      "offset": [
        1316,
        1328
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1A"
    },
    "5555": {
      "offset": [
        1316,
        1336
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5556": {
      "fn": "Bank.init",
      "offset": [
        1316,
        1336
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5557": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5560": {
      "op": "NOT"
    },
    "5561": {
      "offset": [
        1316,
        1336
      ],
      "op": "AND",
      "path": "19"
    },
    "5562": {
      "fn": "Bank.init",
      "offset": [
        1316,
        1336
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5563": {
      "fn": "Bank.init",
      "offset": [
        1316,
        1336
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "5564": {
      "offset": [
        1288,
        1343
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5565": {
      "offset": [
        1034,
        1347
      ],
      "op": "POP",
      "path": "19"
    },
    "5566": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "POP",
      "path": "3"
    },
    "5567": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "POP",
      "path": "3"
    },
    "5568": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "POP",
      "path": "3"
    },
    "5569": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "POP",
      "path": "3"
    },
    "5570": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "POP",
      "path": "3"
    },
    "5571": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "POP",
      "path": "3"
    },
    "5572": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "POP",
      "path": "3"
    },
    "5573": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "POP",
      "path": "3"
    },
    "5574": {
      "fn": "Bank.init",
      "offset": [
        1947,
        2738
      ],
      "op": "POP",
      "path": "3"
    },
    "5575": {
      "fn": "Bank.init",
      "jump": "o",
      "offset": [
        1947,
        2738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5576": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11183,
        11941
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5577": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11255,
        11256
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 85,
      "value": "0x0"
    },
    "5579": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11246,
        11252
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5580": {
      "branch": 164,
      "fn": "Bank.vaultRepay",
      "offset": [
        11246,
        11256
      ],
      "op": "GT",
      "path": "3"
    },
    "5581": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E8"
    },
    "5584": {
      "branch": 164,
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5585": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5587": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5588": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5594": {
      "op": "SHL"
    },
    "5595": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5596": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5597": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5599": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "ADD",
      "path": "3"
    },
    "5600": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "5603": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5604": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29A6"
    },
    "5607": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11238,
        11278
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5608": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11238,
        11278
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5609": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11320,
        11341
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 86,
      "value": "0x15F0"
    },
    "5612": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11320,
        11339
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1877"
    },
    "5615": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11320,
        11341
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5616": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11320,
        11341
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5617": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11295,
        11305
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5618": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11306
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5620": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11306
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5621": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5622": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11306
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5623": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5625": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11306
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5627": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11306
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5628": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11306
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5630": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11306
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5631": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11306
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5632": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11317
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5634": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11317
      ],
      "op": "ADD",
      "path": "3"
    },
    "5635": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11341
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5636": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11341
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5637": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11288,
        11341
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5638": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11372,
        11411
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 87
    },
    "5639": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11372,
        11411
      ],
      "op": "GT",
      "path": "3"
    },
    "5640": {
      "branch": 165,
      "fn": "Bank.vaultRepay",
      "offset": [
        11372,
        11411
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5641": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1654"
    },
    "5644": {
      "branch": 165,
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5645": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5647": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5648": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5654": {
      "op": "SHL"
    },
    "5655": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5656": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5659": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5661": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5662": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "ADD",
      "path": "3"
    },
    "5663": {
      "op": "MSTORE"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5668": {
      "op": "DUP3"
    },
    "5669": {
      "op": "ADD"
    },
    "5670": {
      "op": "MSTORE"
    },
    "5671": {
      "op": "PUSH32",
      "value": "0x43414E4E4F54205245504159204D4F5245205448414E204F5745440000000000"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5706": {
      "op": "DUP3"
    },
    "5707": {
      "op": "ADD"
    },
    "5708": {
      "op": "MSTORE"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5711": {
      "op": "ADD"
    },
    "5712": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "5715": {
      "op": "JUMP"
    },
    "5716": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11351,
        11464
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5717": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11481,
        11491
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 88
    },
    "5718": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5720": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5721": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5722": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5723": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11480
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5725": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5727": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5728": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5730": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5731": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5732": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5734": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11503
      ],
      "op": "ADD",
      "path": "3"
    },
    "5735": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11513
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5736": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11513
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5737": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11507,
        11513
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5738": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11507,
        11513
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5739": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11492
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5740": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11513
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1676"
    },
    "5743": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11513
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5744": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11507,
        11513
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5745": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11507,
        11513
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5746": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11513
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "5749": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11474,
        11513
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5750": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11513
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5751": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11513
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5752": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11513
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5753": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11474,
        11513
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5754": {
      "op": "POP"
    },
    "5755": {
      "op": "POP"
    },
    "5756": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11542
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 89,
      "value": "0x10"
    },
    "5758": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5759": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11552
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5760": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11546,
        11552
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5761": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11546,
        11552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5762": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11542
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5763": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11542
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5765": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11542
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5766": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1690"
    },
    "5769": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11552
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5770": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11546,
        11552
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5771": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11546,
        11552
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5772": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E7"
    },
    "5775": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11523,
        11552
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5776": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11552
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5777": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11552
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5778": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5779": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11523,
        11552
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "op": "POP"
    },
    "5782": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11668,
        11682
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x16"
    },
    "5784": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11668,
        11682
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5785": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11644,
        11654
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5786": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11562,
        11584
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5788": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5789": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5790": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5791": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5793": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5795": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5796": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5797": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5798": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5800": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5801": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11655
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5802": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11665
      ],
      "op": "ADD",
      "path": "3"
    },
    "5803": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11665
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5804": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11562,
        11584
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5805": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11562,
        11584
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5806": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11682
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B6"
    },
    "5809": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11682
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5810": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11682
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "5813": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11637,
        11682
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5814": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11637,
        11682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5815": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11606,
        11620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x16"
    },
    "5817": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11606,
        11620
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5818": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11588,
        11620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C3"
    },
    "5821": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11588,
        11620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5822": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11588,
        11603
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "5823": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11588,
        11620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "5826": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11588,
        11620
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5827": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11588,
        11620
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5828": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11587,
        11683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16CD"
    },
    "5831": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11587,
        11683
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5832": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11587,
        11683
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5833": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11587,
        11683
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "5836": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11587,
        11683
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5837": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11587,
        11683
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5838": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11742,
        11756
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 90,
      "value": "0x16"
    },
    "5840": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11742,
        11756
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5841": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11562,
        11683
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5842": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11562,
        11683
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5843": {
      "op": "POP"
    },
    "5844": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11725,
        11756
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16DD"
    },
    "5847": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11725,
        11756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5848": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11562,
        11683
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5849": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11725,
        11756
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "5852": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11725,
        11756
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5853": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11725,
        11756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5854": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11700,
        11710
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5855": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5857": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5858": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5859": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5860": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11699
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5862": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5864": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5865": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5866": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5867": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5869": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5870": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5871": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11721
      ],
      "op": "ADD",
      "path": "3"
    },
    "5872": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5873": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5874": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11721
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5875": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11721
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5876": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5877": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16FF"
    },
    "5880": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5881": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5882": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5883": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29E7"
    },
    "5886": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11693,
        11756
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5887": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5888": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5889": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5890": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11693,
        11756
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5891": {
      "op": "POP"
    },
    "5892": {
      "op": "POP"
    },
    "5893": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11773,
        11777
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 91,
      "value": "0x3"
    },
    "5895": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11773,
        11790
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5896": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11766,
        11889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171C"
    },
    "5899": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11766,
        11889
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5906": {
      "op": "SHL"
    },
    "5907": {
      "op": "SUB"
    },
    "5908": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11773,
        11790
      ],
      "op": "AND",
      "path": "3"
    },
    "5909": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11822,
        11832
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5910": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11854,
        11858
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5911": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11873,
        11879
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5912": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11766,
        11808
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E08"
    },
    "5915": {
      "fn": "Bank.vaultRepay",
      "jump": "i",
      "offset": [
        11766,
        11889
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5916": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11766,
        11889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5917": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11904,
        11934
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 92,
      "value": "0x40"
    },
    "5919": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11904,
        11934
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5920": {
      "op": "DUP3"
    },
    "5921": {
      "op": "DUP2"
    },
    "5922": {
      "op": "MSTORE"
    },
    "5923": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11915,
        11925
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5924": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11915,
        11925
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5925": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11904,
        11934
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x34D657CD4DEC79D6716CE5AC15B81DE5751705030CBEF01B43B15EAE44CBC112"
    },
    "5958": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11904,
        11934
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5961": {
      "op": "ADD"
    },
    "5962": {
      "fn": "Bank.vaultRepay",
      "offset": [
        11904,
        11934
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E0"
    },
    "5965": {
      "op": "JUMP"
    },
    "5966": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6427,
        6864
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5967": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6500,
        6534
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 93,
      "value": "0x1766"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5972": {
      "op": "DUP1"
    },
    "5973": {
      "op": "MLOAD"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5976": {
      "op": "PUSH2",
      "value": "0x2BA2"
    },
    "5979": {
      "op": "DUP4"
    },
    "5980": {
      "op": "CODECOPY"
    },
    "5981": {
      "op": "DUP2"
    },
    "5982": {
      "op": "MLOAD"
    },
    "5983": {
      "op": "SWAP2"
    },
    "5984": {
      "op": "MSTORE"
    },
    "5985": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6523,
        6533
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5986": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6500,
        6507
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184C"
    },
    "5989": {
      "fn": "Bank.updateCollateralPrice",
      "jump": "i",
      "offset": [
        6500,
        6534
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5990": {
      "branch": 166,
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6500,
        6534
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5991": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6500,
        6593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5992": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6500,
        6593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1777"
    },
    "5995": {
      "branch": 166,
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6500,
        6593
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5996": {
      "op": "POP"
    },
    "5997": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6554,
        6593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1777"
    },
    "6000": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6002": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6582,
        6592
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6003": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6554,
        6561
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x184C"
    },
    "6006": {
      "fn": "Bank.updateCollateralPrice",
      "jump": "i",
      "offset": [
        6554,
        6593
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6007": {
      "branch": 167,
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6554,
        6593
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6008": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17C3"
    },
    "6011": {
      "branch": 167,
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6012": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6014": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6015": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6021": {
      "op": "SHL"
    },
    "6022": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6023": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6026": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6028": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6029": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "ADD",
      "path": "3"
    },
    "6030": {
      "op": "MSTORE"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6033": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6035": {
      "op": "DUP3"
    },
    "6036": {
      "op": "ADD"
    },
    "6037": {
      "op": "MSTORE"
    },
    "6038": {
      "op": "PUSH32",
      "value": "0x6E6F742070726963652075706461746572206F722061646D696E000000000000"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6073": {
      "op": "DUP3"
    },
    "6074": {
      "op": "ADD"
    },
    "6075": {
      "op": "MSTORE"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6078": {
      "op": "ADD"
    },
    "6079": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "6082": {
      "op": "JUMP"
    },
    "6083": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6479,
        6645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6084": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6733,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 94,
      "value": "0xC"
    },
    "6086": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6733,
        6759
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6087": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6704,
        6769
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17CF"
    },
    "6090": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6704,
        6769
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6091": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6704,
        6719
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC5"
    },
    "6094": {
      "fn": "Bank.updateCollateralPrice",
      "jump": "i",
      "offset": [
        6704,
        6769
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6095": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6704,
        6769
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6096": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6676,
        6700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "6098": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6655,
        6769
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6099": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6658,
        6674
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "6101": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6655,
        6769
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6102": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6655,
        6769
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6103": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6655,
        6769
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6104": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6658,
        6668
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "6106": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6815,
        6838
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 95
    },
    "6107": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6803,
        6857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6109": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6803,
        6857
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6110": {
      "op": "SWAP2"
    },
    "6111": {
      "op": "DUP3"
    },
    "6112": {
      "op": "MSTORE"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6119": {
      "op": "SHL"
    },
    "6120": {
      "op": "SUB"
    },
    "6121": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6815,
        6838
      ],
      "op": "AND",
      "path": "3"
    },
    "6122": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6815,
        6838
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6123": {
      "op": "POP"
    },
    "6124": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6803,
        6857
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C"
    },
    "6157": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6803,
        6857
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6160": {
      "op": "ADD"
    },
    "6161": {
      "fn": "Bank.updateCollateralPrice",
      "offset": [
        6803,
        6857
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1093"
    },
    "6164": {
      "op": "JUMP"
    },
    "6165": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14796,
        14903
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6166": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14859,
        14896
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 96,
      "value": "0xEC7"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6171": {
      "op": "DUP1"
    },
    "6172": {
      "op": "MLOAD"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6175": {
      "op": "PUSH2",
      "value": "0x2BA2"
    },
    "6178": {
      "op": "DUP4"
    },
    "6179": {
      "op": "CODECOPY"
    },
    "6180": {
      "op": "DUP2"
    },
    "6181": {
      "op": "MLOAD"
    },
    "6182": {
      "op": "SWAP2"
    },
    "6183": {
      "op": "MSTORE"
    },
    "6184": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14885,
        14895
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6185": {
      "fn": "Bank.revokeReporter",
      "offset": [
        14859,
        14869
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19CD"
    },
    "6188": {
      "fn": "Bank.revokeReporter",
      "jump": "i",
      "offset": [
        14859,
        14896
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6189": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6190": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1503,
        1510
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6192": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 97
    },
    "6193": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6194": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6195": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1541
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x19"
    },
    "6197": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6199": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6200": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6202": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6203": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1547
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6204": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1557
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1845"
    },
    "6207": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6208": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1551,
        1556
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6209": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F89"
    },
    "6212": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "i",
      "offset": [
        1529,
        1557
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6213": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1529,
        1557
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6214": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1522,
        1557
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6215": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "offset": [
        1413,
        1564
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6216": {
      "op": "POP"
    },
    "6217": {
      "op": "POP"
    },
    "6218": {
      "op": "POP"
    },
    "6219": {
      "fn": "AccessControlEnumerable.getRoleMember",
      "jump": "o",
      "offset": [
        1413,
        1564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6220": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6221": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2984,
        2988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6223": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 98
    },
    "6224": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6225": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6226": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3013
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "6228": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6230": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6231": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6232": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6233": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6235": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6236": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6237": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3019
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6244": {
      "op": "SHL"
    },
    "6245": {
      "op": "SUB"
    },
    "6246": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6247": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6248": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6249": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "AND",
      "path": "0"
    },
    "6250": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6251": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6252": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6253": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6254": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6255": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6256": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6257": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6258": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "6260": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "AND",
      "path": "0"
    },
    "6261": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3007,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6262": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        2898,
        3043
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6263": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6264": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5479,
        5489
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 99
    },
    "6265": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5431,
        5448
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6267": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6268": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6269": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6270": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5478
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6272": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6274": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6275": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6277": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6278": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5490
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6279": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6281": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "ADD",
      "path": "5"
    },
    "6282": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6283": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5547,
        5561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x16"
    },
    "6285": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5547,
        5561
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6286": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6287": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5472,
        5501
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6288": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5431,
        5448
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6289": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5561
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x189E"
    },
    "6292": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6293": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5544
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1E13380"
    },
    "6298": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5561
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A59"
    },
    "6301": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5536,
        5561
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6302": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5536,
        5561
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6303": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5677,
        5691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x16"
    },
    "6305": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5677,
        5691
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6306": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5653,
        5663
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6307": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5571,
        5593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6309": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6310": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6311": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6312": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5652
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6314": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6316": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6317": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6318": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6319": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6321": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6322": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5664
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6323": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5674
      ],
      "op": "ADD",
      "path": "5"
    },
    "6324": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5674
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6325": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5511,
        5561
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6326": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5511,
        5561
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6327": {
      "op": "POP"
    },
    "6328": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5571,
        5593
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6329": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18C2"
    },
    "6332": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5691
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6333": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5677,
        5691
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6334": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A59"
    },
    "6337": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5646,
        5691
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6338": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5646,
        5691
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6339": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5615,
        5629
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x16"
    },
    "6341": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5615,
        5629
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6342": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5629
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18CF"
    },
    "6345": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5629
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6346": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5612
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "6347": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5629
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A59"
    },
    "6350": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5597,
        5629
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6351": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5597,
        5629
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6352": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18D9"
    },
    "6355": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6356": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6357": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A7B"
    },
    "6360": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5596,
        5692
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6361": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5596,
        5692
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6362": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5571,
        5692
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6363": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5571,
        5692
      ],
      "op": "POP",
      "path": "5"
    },
    "6364": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5803,
        5817
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 100
    },
    "6365": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5773,
        5787
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6366": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5765,
        5770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "6369": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5741,
        5748
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xF"
    },
    "6371": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5741,
        5761
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6373": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5741,
        5761
      ],
      "op": "ADD",
      "path": "5"
    },
    "6374": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5741,
        5761
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6375": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5738
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6376": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18F1"
    },
    "6379": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6380": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6381": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A3A"
    },
    "6384": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5729,
        5761
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6385": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5729,
        5761
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6386": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18FB"
    },
    "6389": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6390": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6391": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A59"
    },
    "6394": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5728,
        5770
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6395": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5770
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6396": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1905"
    },
    "6399": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6400": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6401": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A59"
    },
    "6404": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5728,
        5787
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6405": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5728,
        5787
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6406": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x190F"
    },
    "6409": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6410": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6411": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A3A"
    },
    "6414": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5727,
        5817
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6415": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5727,
        5817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6416": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1919"
    },
    "6419": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6420": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6421": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29E7"
    },
    "6424": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "i",
      "offset": [
        5702,
        5817
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6425": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6426": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6427": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5702,
        5817
      ],
      "op": "POP",
      "path": "5"
    },
    "6428": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5450,
        5824
      ],
      "op": "POP",
      "path": "5"
    },
    "6429": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5450,
        5824
      ],
      "op": "POP",
      "path": "5"
    },
    "6430": {
      "fn": "BankStorage.getVaultRepayAmount",
      "offset": [
        5379,
        5824
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6431": {
      "fn": "BankStorage.getVaultRepayAmount",
      "jump": "o",
      "offset": [
        5379,
        5824
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6432": {
      "fn": "Bank.setDebt",
      "offset": [
        3581,
        4106
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6433": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6435": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x192B"
    },
    "6438": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6439": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "6442": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6443": {
      "fn": "Bank.setDebt",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6444": {
      "fn": "Bank.setDebt",
      "offset": [
        3815,
        3819
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 101,
      "value": "0x3"
    },
    "6446": {
      "fn": "Bank.setDebt",
      "offset": [
        3815,
        3832
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6453": {
      "op": "SHL"
    },
    "6454": {
      "op": "SUB"
    },
    "6455": {
      "fn": "Bank.setDebt",
      "offset": [
        3815,
        3832
      ],
      "op": "AND",
      "path": "3"
    },
    "6456": {
      "branch": 168,
      "fn": "Bank.setDebt",
      "offset": [
        3815,
        3846
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6457": {
      "fn": "Bank.setDebt",
      "offset": [
        3815,
        3873
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6458": {
      "fn": "Bank.setDebt",
      "offset": [
        3815,
        3873
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6459": {
      "fn": "Bank.setDebt",
      "offset": [
        3815,
        3873
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x194C"
    },
    "6462": {
      "branch": 168,
      "fn": "Bank.setDebt",
      "offset": [
        3815,
        3873
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6463": {
      "op": "POP"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6470": {
      "op": "SHL"
    },
    "6471": {
      "op": "SUB"
    },
    "6472": {
      "fn": "Bank.setDebt",
      "offset": [
        3850,
        3873
      ],
      "op": "DUP6",
      "path": "3"
    },
    "6473": {
      "fn": "Bank.setDebt",
      "offset": [
        3850,
        3873
      ],
      "op": "AND",
      "path": "3"
    },
    "6474": {
      "fn": "Bank.setDebt",
      "offset": [
        3850,
        3873
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6475": {
      "branch": 169,
      "fn": "Bank.setDebt",
      "offset": [
        3850,
        3873
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6476": {
      "fn": "Bank.setDebt",
      "offset": [
        3815,
        3873
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6477": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1983"
    },
    "6480": {
      "branch": 169,
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6481": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6483": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6490": {
      "op": "SHL"
    },
    "6491": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6492": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6495": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6497": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6498": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "ADD",
      "path": "3"
    },
    "6499": {
      "op": "MSTORE"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6504": {
      "op": "DUP3"
    },
    "6505": {
      "op": "ADD"
    },
    "6506": {
      "op": "MSTORE"
    },
    "6507": {
      "op": "PUSH8",
      "value": "0x2173657461626C65"
    },
    "6516": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6518": {
      "op": "SHL"
    },
    "6519": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6521": {
      "op": "DUP3"
    },
    "6522": {
      "op": "ADD"
    },
    "6523": {
      "op": "MSTORE"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6526": {
      "op": "ADD"
    },
    "6527": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "6530": {
      "op": "JUMP"
    },
    "6531": {
      "fn": "Bank.setDebt",
      "offset": [
        3794,
        3907
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6532": {
      "op": "POP"
    },
    "6533": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3921
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 102,
      "value": "0x3"
    },
    "6535": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6536": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6543": {
      "op": "SHL"
    },
    "6544": {
      "op": "SUB"
    },
    "6545": {
      "op": "NOT"
    },
    "6546": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "AND",
      "path": "3"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6553": {
      "op": "SHL"
    },
    "6554": {
      "op": "SUB"
    },
    "6555": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "6556": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6557": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "6558": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "AND",
      "path": "3"
    },
    "6559": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6560": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6561": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "6562": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "OR",
      "path": "3"
    },
    "6563": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6564": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6565": {
      "fn": "Bank.setDebt",
      "offset": [
        3917,
        3946
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6566": {
      "fn": "Bank.setDebt",
      "offset": [
        3956,
        3966
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 103,
      "value": "0x4"
    },
    "6568": {
      "fn": "Bank.setDebt",
      "offset": [
        3956,
        3983
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6569": {
      "fn": "Bank.setDebt",
      "offset": [
        3956,
        3983
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6570": {
      "fn": "Bank.setDebt",
      "offset": [
        3956,
        3983
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6571": {
      "fn": "Bank.setDebt",
      "offset": [
        3956,
        3983
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6572": {
      "fn": "Bank.setDebt",
      "offset": [
        3993,
        4014
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 104,
      "value": "0x5"
    },
    "6574": {
      "fn": "Bank.setDebt",
      "offset": [
        3993,
        4042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6575": {
      "fn": "Bank.setDebt",
      "offset": [
        3993,
        4042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6576": {
      "fn": "Bank.setDebt",
      "offset": [
        3993,
        4042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6577": {
      "fn": "Bank.setDebt",
      "offset": [
        3993,
        4042
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6578": {
      "fn": "Bank.setDebt",
      "offset": [
        4052,
        4072
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 105,
      "value": "0x6"
    },
    "6580": {
      "fn": "Bank.setDebt",
      "offset": [
        4052,
        4099
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6581": {
      "fn": "Bank.setDebt",
      "jump": "o",
      "offset": [
        3581,
        4106
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6582": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1732,
        1872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6583": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1812,
        1819
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6585": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 106
    },
    "6586": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6587": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6588": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1850
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x19"
    },
    "6590": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6592": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6593": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6595": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6596": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1856
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6597": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C9"
    },
    "6600": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6601": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "offset": [
        1838,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F95"
    },
    "6604": {
      "fn": "AccessControlEnumerable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1838,
        1865
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6605": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5152,
        5299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6606": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4468,
        4475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6608": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6609": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6610": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6611": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "6613": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6615": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6616": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6618": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6619": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4506
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6620": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6622": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "ADD",
      "path": "0"
    },
    "6623": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4494,
        4516
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6624": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E8"
    },
    "6627": {
      "offset": [
        2509,
        2513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6628": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "6631": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6632": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6633": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5266,
        5292
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 107,
      "value": "0x932"
    },
    "6636": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5278,
        5282
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6637": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5284,
        5291
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6638": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5266,
        5277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5D"
    },
    "6641": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5266,
        5292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6642": {
      "fn": "Bank.addReporter",
      "offset": [
        14491,
        14653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6649": {
      "op": "SHL"
    },
    "6650": {
      "op": "SUB"
    },
    "6651": {
      "fn": "Bank.addReporter",
      "offset": [
        14556,
        14577
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 108
    },
    "6652": {
      "branch": 170,
      "fn": "Bank.addReporter",
      "offset": [
        14556,
        14577
      ],
      "op": "AND",
      "path": "3"
    },
    "6653": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A40"
    },
    "6656": {
      "branch": 170,
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6657": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6659": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6666": {
      "op": "SHL"
    },
    "6667": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6668": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6671": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6673": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6674": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "ADD",
      "path": "3"
    },
    "6675": {
      "op": "MSTORE"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6680": {
      "op": "DUP3"
    },
    "6681": {
      "op": "ADD"
    },
    "6682": {
      "op": "MSTORE"
    },
    "6683": {
      "op": "PUSH21",
      "value": "0x1BDC195C985D1A5BDB881B9BDD08185B1B1BDDD959"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "6707": {
      "op": "SHL"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6710": {
      "op": "DUP3"
    },
    "6711": {
      "op": "ADD"
    },
    "6712": {
      "op": "MSTORE"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6715": {
      "op": "ADD"
    },
    "6716": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "6719": {
      "op": "JUMP"
    },
    "6720": {
      "fn": "Bank.addReporter",
      "offset": [
        14548,
        14603
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6721": {
      "fn": "Bank.addReporter",
      "offset": [
        14613,
        14646
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 109,
      "value": "0xEC7"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6726": {
      "op": "DUP1"
    },
    "6727": {
      "op": "MLOAD"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6730": {
      "op": "PUSH2",
      "value": "0x2BA2"
    },
    "6733": {
      "op": "DUP4"
    },
    "6734": {
      "op": "CODECOPY"
    },
    "6735": {
      "op": "DUP2"
    },
    "6736": {
      "op": "MLOAD"
    },
    "6737": {
      "op": "SWAP2"
    },
    "6738": {
      "op": "MSTORE"
    },
    "6739": {
      "fn": "Bank.addReporter",
      "offset": [
        14638,
        14645
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6740": {
      "fn": "Bank.addReporter",
      "offset": [
        14613,
        14622
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x90D"
    },
    "6743": {
      "fn": "Bank.addReporter",
      "jump": "i",
      "offset": [
        14613,
        14646
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6744": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6745": {
      "offset": [
        2065,
        2069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6747": {
      "offset": [
        2498,
        2514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A63"
    },
    "6750": {
      "offset": [
        2065,
        2069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6751": {
      "offset": [
        2498,
        2508
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFE"
    },
    "6754": {
      "jump": "i",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6755": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        2498,
        2514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6756": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4983,
        4987
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 110,
      "value": "0x3"
    },
    "6758": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4983,
        5000
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6759": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6761": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6762": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6769": {
      "op": "SHL"
    },
    "6770": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6771": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6772": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5020,
        5024
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "6773": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6775": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6776": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "ADD",
      "path": "3"
    },
    "6777": {
      "op": "MSTORE"
    },
    "6778": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5030,
        5036
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6779": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5030,
        5036
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6786": {
      "op": "SHL"
    },
    "6787": {
      "op": "SUB"
    },
    "6788": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4983,
        5000
      ],
      "op": "AND",
      "path": "3"
    },
    "6789": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4983,
        5000
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6790": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5011
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "6795": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5011
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6798": {
      "op": "ADD"
    },
    "6799": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6801": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6803": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6804": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6805": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6806": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "SUB",
      "path": "3"
    },
    "6807": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6808": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6809": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "GAS",
      "path": "3"
    },
    "6810": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "6811": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6812": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6813": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6814": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AAB"
    },
    "6817": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6818": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6819": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6821": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6822": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6823": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6824": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6826": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6827": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6828": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "POP",
      "path": "3"
    },
    "6829": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "POP",
      "path": "3"
    },
    "6830": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "POP",
      "path": "3"
    },
    "6831": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "POP",
      "path": "3"
    },
    "6832": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6834": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6835": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6836": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6838": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "NOT",
      "path": "3"
    },
    "6839": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6841": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6842": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "ADD",
      "path": "3"
    },
    "6843": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "AND",
      "path": "3"
    },
    "6844": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6845": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "ADD",
      "path": "3"
    },
    "6846": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6847": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6849": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6850": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "POP",
      "path": "3"
    },
    "6851": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6852": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "ADD",
      "path": "3"
    },
    "6853": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6854": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ACF"
    },
    "6857": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6858": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6859": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A92"
    },
    "6862": {
      "fn": "Bank.reserveWithdraw",
      "jump": "i",
      "offset": [
        4976,
        5026
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6863": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6864": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5036
      ],
      "op": "LT",
      "path": "3"
    },
    "6865": {
      "branch": 171,
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4976,
        5036
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6866": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B27"
    },
    "6869": {
      "branch": 171,
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6870": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6872": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6879": {
      "op": "SHL"
    },
    "6880": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6881": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6884": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6886": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6887": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "ADD",
      "path": "3"
    },
    "6888": {
      "op": "MSTORE"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6893": {
      "op": "DUP3"
    },
    "6894": {
      "op": "ADD"
    },
    "6895": {
      "op": "MSTORE"
    },
    "6896": {
      "op": "PUSH32",
      "value": "0x4E4F5420454E4F554748204445425420544F4B454E5320494E20524553455256"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6931": {
      "op": "DUP3"
    },
    "6932": {
      "op": "ADD"
    },
    "6933": {
      "op": "MSTORE"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6938": {
      "op": "SHL"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6941": {
      "op": "DUP3"
    },
    "6942": {
      "op": "ADD"
    },
    "6943": {
      "op": "MSTORE"
    },
    "6944": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6946": {
      "op": "ADD"
    },
    "6947": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "6950": {
      "op": "JUMP"
    },
    "6951": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4955,
        5095
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6952": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5105,
        5122
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6954": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5125,
        5137
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B34"
    },
    "6957": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5134,
        5137
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC8"
    },
    "6959": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5125,
        5131
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6960": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5125,
        5137
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "6963": {
      "fn": "Bank.reserveWithdraw",
      "jump": "i",
      "offset": [
        5125,
        5137
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6964": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5125,
        5137
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6965": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5105,
        5137
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6966": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5105,
        5137
      ],
      "op": "POP",
      "path": "3"
    },
    "6967": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5204,
        5210
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 111
    },
    "6968": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5188
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "6970": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6972": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5200
      ],
      "op": "ADD",
      "path": "3"
    },
    "6973": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5200
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6975": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6976": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6977": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6978": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B4B"
    },
    "6981": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6982": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6983": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "6986": {
      "fn": "Bank.reserveWithdraw",
      "jump": "i",
      "offset": [
        5181,
        5210
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6987": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6988": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6989": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6990": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5181,
        5210
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6991": {
      "op": "POP"
    },
    "6992": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5220,
        5290
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 112,
      "value": "0x1B72"
    },
    "6995": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5220,
        5290
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6996": {
      "op": "POP"
    },
    "6997": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5259,
        5269
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6998": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5271,
        5289
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B5F"
    },
    "7001": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5280,
        5289
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7002": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5271,
        5277
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7003": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5271,
        5289
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "7006": {
      "fn": "Bank.reserveWithdraw",
      "jump": "i",
      "offset": [
        5271,
        5289
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7007": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5271,
        5289
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7008": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5227,
        5231
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7010": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5227,
        5244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7017": {
      "op": "SHL"
    },
    "7018": {
      "op": "SUB"
    },
    "7019": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5227,
        5244
      ],
      "op": "AND",
      "path": "3"
    },
    "7020": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5227,
        5244
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7021": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5220,
        5290
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7022": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5220,
        5258
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "7025": {
      "fn": "Bank.reserveWithdraw",
      "jump": "i",
      "offset": [
        5220,
        5290
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7026": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5220,
        5290
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7027": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5339,
        5356
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 113,
      "value": "0x4D"
    },
    "7029": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5339,
        5356
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7030": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5307,
        5311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "7032": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5307,
        5324
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7033": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5300,
        5368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B8F"
    },
    "7036": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5300,
        5368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7043": {
      "op": "SHL"
    },
    "7044": {
      "op": "SUB"
    },
    "7045": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5307,
        5324
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7046": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5307,
        5324
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7047": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5307,
        5324
      ],
      "op": "AND",
      "path": "3"
    },
    "7048": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5307,
        5324
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7049": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5339,
        5356
      ],
      "op": "AND",
      "path": "3"
    },
    "7050": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5358,
        5367
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7051": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5300,
        5338
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "7054": {
      "fn": "Bank.reserveWithdraw",
      "jump": "i",
      "offset": [
        5300,
        5368
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7055": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5300,
        5368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7056": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5399,
        5403
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 114,
      "value": "0x3"
    },
    "7058": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5399,
        5416
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7059": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7061": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7062": {
      "op": "DUP5"
    },
    "7063": {
      "op": "DUP2"
    },
    "7064": {
      "op": "MSTORE"
    },
    "7065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7071": {
      "op": "SHL"
    },
    "7072": {
      "op": "SUB"
    },
    "7073": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5399,
        5416
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7074": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5399,
        5416
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7075": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5399,
        5416
      ],
      "op": "AND",
      "path": "3"
    },
    "7076": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5399,
        5416
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7077": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x529AFC4538720FE0B3EADC40486369AB962002D72FEAD1387B300C66073E7BF"
    },
    "7110": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7113": {
      "op": "ADD"
    },
    "7114": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7116": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7117": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7118": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7119": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "SUB",
      "path": "3"
    },
    "7120": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7121": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        5383,
        5425
      ],
      "op": "LOG2",
      "path": "3"
    },
    "7122": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4945,
        5432
      ],
      "op": "POP",
      "path": "3"
    },
    "7123": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "POP",
      "path": "3"
    },
    "7124": {
      "fn": "Bank.reserveWithdraw",
      "offset": [
        4846,
        5432
      ],
      "op": "POP",
      "path": "3"
    },
    "7125": {
      "fn": "Bank.reserveWithdraw",
      "jump": "o",
      "offset": [
        4846,
        5432
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7126": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1718,
        1814
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7127": {
      "offset": [
        1308,
        1314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7129": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1308,
        1314
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7136": {
      "op": "SHL"
    },
    "7137": {
      "op": "SUB"
    },
    "7138": {
      "offset": [
        1308,
        1314
      ],
      "op": "AND",
      "path": "3"
    },
    "7139": {
      "offset": [
        1318,
        1328
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7140": {
      "offset": [
        1308,
        1328
      ],
      "op": "EQ",
      "path": "3"
    },
    "7141": {
      "offset": [
        1300,
        1345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C1F"
    },
    "7144": {
      "offset": [
        1300,
        1345
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7145": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1300,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7147": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1300,
        1345
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7154": {
      "op": "SHL"
    },
    "7155": {
      "offset": [
        1300,
        1345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7156": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1300,
        1345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7159": {
      "offset": [
        1300,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7161": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1300,
        1345
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7162": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1300,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "7163": {
      "op": "MSTORE"
    },
    "7164": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "7166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7168": {
      "op": "DUP3"
    },
    "7169": {
      "op": "ADD"
    },
    "7170": {
      "op": "MSTORE"
    },
    "7171": {
      "op": "PUSH12",
      "value": "0x24A9902727AA1027ABA722A9"
    },
    "7184": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "7186": {
      "op": "SHL"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7189": {
      "op": "DUP3"
    },
    "7190": {
      "op": "ADD"
    },
    "7191": {
      "op": "MSTORE"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7194": {
      "op": "ADD"
    },
    "7195": {
      "offset": [
        1300,
        1345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "7198": {
      "op": "JUMP"
    },
    "7199": {
      "offset": [
        1300,
        1345
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7200": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 115,
      "value": "0x0"
    },
    "7202": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7203": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7210": {
      "op": "SHL"
    },
    "7211": {
      "op": "SUB"
    },
    "7212": {
      "op": "NOT"
    },
    "7213": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "AND",
      "path": "3"
    },
    "7214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7220": {
      "op": "SHL"
    },
    "7221": {
      "op": "SUB"
    },
    "7222": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7223": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7224": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7225": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "AND",
      "path": "3"
    },
    "7226": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7227": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7228": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7229": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "OR",
      "path": "3"
    },
    "7230": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7231": {
      "fn": "Bank.transferOwnership",
      "offset": [
        1790,
        1807
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7232": {
      "fn": "Bank.transferOwnership",
      "jump": "o",
      "offset": [
        1718,
        1814
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7233": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12063,
        12938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7234": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12159,
        12169
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 116
    },
    "7235": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12170
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7237": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12170
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7238": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12170
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7239": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12170
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7240": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12158
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7242": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12170
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7244": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12170
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7245": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12170
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7247": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12170
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7248": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12170
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7249": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12152,
        12187
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7250": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12142,
        12187
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7251": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12142,
        12187
      ],
      "op": "GT",
      "path": "3"
    },
    "7252": {
      "branch": 172,
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12142,
        12187
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7253": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA0"
    },
    "7256": {
      "branch": 172,
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7257": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7259": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7266": {
      "op": "SHL"
    },
    "7267": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7268": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7271": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7273": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7274": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "ADD",
      "path": "3"
    },
    "7275": {
      "op": "MSTORE"
    },
    "7276": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7280": {
      "op": "DUP3"
    },
    "7281": {
      "op": "ADD"
    },
    "7282": {
      "op": "MSTORE"
    },
    "7283": {
      "op": "PUSH32",
      "value": "0x43414E4E4F54205749544844524157204D4F524520434F4C4C41544552414C00"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7318": {
      "op": "DUP3"
    },
    "7319": {
      "op": "ADD"
    },
    "7320": {
      "op": "MSTORE"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7323": {
      "op": "ADD"
    },
    "7324": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "7327": {
      "op": "JUMP"
    },
    "7328": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12121,
        12244
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7329": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12409,
        12439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x13"
    },
    "7331": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12409,
        12439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7332": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12409,
        12439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7334": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12384,
        12394
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7335": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12352,
        12368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "7337": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12352,
        12368
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7338": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12298,
        12308
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7339": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12255,
        12285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7341": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12309
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7342": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12309
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7343": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12309
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7344": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12297
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7346": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7348": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12309
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7349": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7351": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12309
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7352": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12309
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7353": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12339
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7354": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12255,
        12285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7355": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12255,
        12285
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7356": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12409,
        12439
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7357": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12384,
        12394
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7358": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12352,
        12368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7359": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CC9"
    },
    "7362": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7363": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12342,
        12348
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7364": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12342,
        12348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7365": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "7368": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12291,
        12348
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7369": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12291,
        12348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7370": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12290,
        12368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CD3"
    },
    "7373": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12290,
        12368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7374": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12290,
        12368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7375": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12290,
        12368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "7378": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12290,
        12368
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7379": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12290,
        12368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7380": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12394
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CDD"
    },
    "7383": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12394
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7384": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7385": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12394
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "7388": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12289,
        12394
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7389": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12394
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7390": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CE7"
    },
    "7393": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12439
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7394": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12439
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7395": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12439
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "7398": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12289,
        12439
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7399": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12289,
        12439
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7400": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12288,
        12446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CF2"
    },
    "7403": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12288,
        12446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7404": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12443,
        12446
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "7406": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12288,
        12446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "7409": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12288,
        12446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7410": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12288,
        12446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7411": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12482,
        12503
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 117,
      "value": "0x5"
    },
    "7413": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12482,
        12503
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7414": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12255,
        12446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7415": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12255,
        12446
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7416": {
      "op": "POP"
    },
    "7417": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12456,
        12503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D02"
    },
    "7420": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12456,
        12503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7421": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12255,
        12446
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7422": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12456,
        12503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A3A"
    },
    "7425": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12456,
        12503
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7426": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12456,
        12503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7427": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12539,
        12566
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 118,
      "value": "0xB"
    },
    "7429": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12539,
        12566
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7430": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12456,
        12503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7431": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12456,
        12503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7432": {
      "op": "POP"
    },
    "7433": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12513,
        12566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D12"
    },
    "7436": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12513,
        12566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7437": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12456,
        12503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7438": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12513,
        12566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A59"
    },
    "7441": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12513,
        12566
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7442": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12513,
        12566
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7443": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12604,
        12614
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 119
    },
    "7444": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7446": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12615
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7447": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12615
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7448": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12615
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7449": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12603
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7451": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7453": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12615
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7454": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7456": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12615
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7457": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12615
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7458": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7460": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12626
      ],
      "op": "ADD",
      "path": "3"
    },
    "7461": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12626
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7462": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12513,
        12566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7463": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12513,
        12566
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7464": {
      "op": "POP"
    },
    "7465": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12652
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7466": {
      "op": "LT"
    },
    "7467": {
      "branch": 173,
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12597,
        12652
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7468": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D77"
    },
    "7471": {
      "branch": 173,
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7472": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7474": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7475": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7479": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7481": {
      "op": "SHL"
    },
    "7482": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7483": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7486": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7488": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7489": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "ADD",
      "path": "3"
    },
    "7490": {
      "op": "MSTORE"
    },
    "7491": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7493": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7495": {
      "op": "DUP3"
    },
    "7496": {
      "op": "ADD"
    },
    "7497": {
      "op": "MSTORE"
    },
    "7498": {
      "op": "PUSH32",
      "value": "0x43414E4E4F5420554E444552434F4C4C41544552414C495A45205641554C5400"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7533": {
      "op": "DUP3"
    },
    "7534": {
      "op": "ADD"
    },
    "7535": {
      "op": "MSTORE"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7538": {
      "op": "ADD"
    },
    "7539": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x732"
    },
    "7542": {
      "op": "JUMP"
    },
    "7543": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12576,
        12709
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7544": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12726,
        12736
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 120
    },
    "7545": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7547": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7548": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7549": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7550": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7552": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7554": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7555": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7557": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7558": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "7559": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12764
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7560": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12764
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7561": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12758,
        12764
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7562": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12758,
        12764
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7563": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12737
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7564": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12764
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D96"
    },
    "7567": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12764
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7568": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12758,
        12764
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7569": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12758,
        12764
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7570": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12764
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "7573": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12719,
        12764
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7574": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12764
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7575": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12764
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7576": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12764
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7577": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12719,
        12764
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7578": {
      "op": "POP"
    },
    "7579": {
      "op": "POP"
    },
    "7580": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12781
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 121,
      "value": "0xF"
    },
    "7582": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12809
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7583": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12809
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7584": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12803,
        12809
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7585": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12803,
        12809
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7586": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12781
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7587": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12799
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7589": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12799
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7590": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12809
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB0"
    },
    "7593": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12809
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7594": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12803,
        12809
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7595": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12803,
        12809
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7596": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12809
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7B"
    },
    "7599": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12774,
        12809
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7600": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12809
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7601": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12809
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7602": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12809
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7603": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12774,
        12809
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7604": {
      "op": "POP"
    },
    "7605": {
      "op": "POP"
    },
    "7606": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12826,
        12836
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 122,
      "value": "0x9"
    },
    "7608": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12826,
        12849
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7609": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12819,
        12883
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DCC"
    },
    "7612": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12819,
        12883
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7619": {
      "op": "SHL"
    },
    "7620": {
      "op": "SUB"
    },
    "7621": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12826,
        12849
      ],
      "op": "AND",
      "path": "3"
    },
    "7622": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12864,
        12874
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7623": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12876,
        12882
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7624": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12819,
        12863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2D"
    },
    "7627": {
      "fn": "Bank.vaultWithdraw",
      "jump": "i",
      "offset": [
        12819,
        12883
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7628": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12819,
        12883
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7629": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12898,
        12931
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 123,
      "value": "0x40"
    },
    "7631": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12898,
        12931
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7632": {
      "op": "DUP3"
    },
    "7633": {
      "op": "DUP2"
    },
    "7634": {
      "op": "MSTORE"
    },
    "7635": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12912,
        12922
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7636": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12912,
        12922
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7637": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12898,
        12931
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xAC60FBF53B67F5A6A0C8031DD9D1610A06F01669B1A8B9AF98F3A6A477E8D7C"
    },
    "7670": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12898,
        12931
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7673": {
      "op": "ADD"
    },
    "7674": {
      "fn": "Bank.vaultWithdraw",
      "offset": [
        12898,
        12931
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E0"
    },
    "7677": {
      "op": "JUMP"
    },
    "7678": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3337,
        3440
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7679": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3403,
        3433
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 124,
      "value": "0xEC7"
    },
    "7682": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3414,
        3418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7683": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7684": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3403,
        3413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F9F"
    },
    "7687": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3403,
        3433
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7688": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "7689": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 125,
      "value": "0x40"
    },
    "7691": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7698": {
      "op": "SHL"
    },
    "7699": {
      "op": "SUB"
    },
    "7700": {
      "op": "DUP1"
    },
    "7701": {
      "op": "DUP6"
    },
    "7702": {
      "op": "AND"
    },
    "7703": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x24"
    },
    "7705": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP4",
      "path": "30"
    },
    "7706": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "ADD",
      "path": "30"
    },
    "7707": {
      "op": "MSTORE"
    },
    "7708": {
      "op": "DUP4"
    },
    "7709": {
      "op": "AND"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7712": {
      "op": "DUP3"
    },
    "7713": {
      "op": "ADD"
    },
    "7714": {
      "op": "MSTORE"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7717": {
      "op": "DUP2"
    },
    "7718": {
      "op": "ADD"
    },
    "7719": {
      "op": "DUP3"
    },
    "7720": {
      "op": "SWAP1"
    },
    "7721": {
      "op": "MSTORE"
    },
    "7722": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1048,
        1144
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1E73"
    },
    "7725": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1048,
        1144
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "7726": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1068,
        1073
      ],
      "op": "DUP6",
      "path": "30"
    },
    "7727": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1068,
        1073
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "7728": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7735": {
      "op": "SHL"
    },
    "7736": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1098,
        1125
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7739": {
      "op": "ADD"
    },
    "7740": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "7741": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "7743": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP1",
      "path": "30"
    },
    "7744": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7747": {
      "op": "NOT"
    },
    "7748": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP2",
      "path": "30"
    },
    "7749": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP5",
      "path": "30"
    },
    "7750": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SUB",
      "path": "30"
    },
    "7751": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "ADD",
      "path": "30"
    },
    "7752": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP2",
      "path": "30"
    },
    "7753": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "7754": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "7755": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "7756": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "7757": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "7759": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP2",
      "path": "30"
    },
    "7760": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "ADD",
      "path": "30"
    },
    "7761": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "DUP1",
      "path": "30"
    },
    "7762": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7769": {
      "op": "SHL"
    },
    "7770": {
      "op": "SUB"
    },
    "7771": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "AND",
      "path": "30"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7778": {
      "op": "SHL"
    },
    "7779": {
      "op": "SUB"
    },
    "7780": {
      "op": "NOT"
    },
    "7781": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "7782": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP4",
      "path": "30"
    },
    "7783": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "AND",
      "path": "30"
    },
    "7784": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "7785": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "7786": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "7787": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "OR",
      "path": "30"
    },
    "7788": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "7789": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "7790": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1075,
        1143
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "7791": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1048,
        1067
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2003"
    },
    "7794": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1048,
        1144
      ],
      "op": "JUMP",
      "path": "30"
    },
    "7795": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1048,
        1144
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "7796": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "POP",
      "path": "30"
    },
    "7797": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "POP",
      "path": "30"
    },
    "7798": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "POP",
      "path": "30"
    },
    "7799": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        910,
        1151
      ],
      "op": "POP",
      "path": "30"
    },
    "7800": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        910,
        1151
      ],
      "op": "JUMP",
      "path": "30"
    },
    "7801": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2599,
        2811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7802": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2684,
        2688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7810": {
      "op": "SHL"
    },
    "7811": {
      "op": "SUB"
    },
    "7812": {
      "op": "NOT"
    },
    "7813": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2754
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 126
    },
    "7814": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2754
      ],
      "op": "AND",
      "path": "0"
    },
    "7815": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7822": {
      "op": "SHL"
    },
    "7823": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2754
      ],
      "op": "EQ",
      "path": "0"
    },
    "7824": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2754
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7825": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C9"
    },
    "7828": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2707,
        2804
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7829": {
      "op": "POP"
    },
    "7830": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x17"
    },
    "7832": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7833": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7835": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7836": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7843": {
      "op": "SHL"
    },
    "7844": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7845": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7852": {
      "op": "SHL"
    },
    "7853": {
      "op": "SUB"
    },
    "7854": {
      "op": "NOT"
    },
    "7855": {
      "op": "DUP5"
    },
    "7856": {
      "op": "AND"
    },
    "7857": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7859": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7860": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ADD",
      "path": "0"
    },
    "7861": {
      "op": "MSTORE"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7868": {
      "op": "SHL"
    },
    "7869": {
      "op": "SUB"
    },
    "7870": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7871": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7872": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "AND",
      "path": "0"
    },
    "7873": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7874": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2791
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FFC9A7"
    },
    "7879": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7880": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7882": {
      "op": "ADD"
    },
    "7883": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7885": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7887": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7888": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7889": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7890": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "SUB",
      "path": "0"
    },
    "7891": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7892": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7893": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "GAS",
      "path": "0"
    },
    "7894": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7895": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7896": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7897": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7898": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE7"
    },
    "7901": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7902": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7903": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7905": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7906": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7907": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7908": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7910": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7911": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7912": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7913": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7914": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7915": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7916": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7918": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7919": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7920": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7922": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "NOT",
      "path": "0"
    },
    "7923": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7925": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7926": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ADD",
      "path": "0"
    },
    "7927": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "AND",
      "path": "0"
    },
    "7928": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7929": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ADD",
      "path": "0"
    },
    "7930": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7931": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7933": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7934": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "POP",
      "path": "0"
    },
    "7935": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7936": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "ADD",
      "path": "0"
    },
    "7937": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7938": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C9"
    },
    "7941": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7942": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7943": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        2758,
        2804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AAB"
    },
    "7946": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        2758,
        2804
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7947": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        1960,
        2126
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7948": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2047,
        2078
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 127,
      "value": "0x1F15"
    },
    "7951": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2064,
        2068
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7952": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2070,
        2077
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7953": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2047,
        2063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20D5"
    },
    "7956": {
      "fn": "AccessControlEnumerable._grantRole",
      "jump": "i",
      "offset": [
        2047,
        2078
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7957": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2047,
        2078
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7958": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 128,
      "value": "0x0"
    },
    "7960": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7961": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7962": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7963": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x19"
    },
    "7965": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7967": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7968": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7970": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7971": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2106
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7972": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2119
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x932"
    },
    "7975": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7976": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2111,
        2118
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7977": {
      "fn": "AccessControlEnumerable._grantRole",
      "offset": [
        2088,
        2110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x215B"
    },
    "7980": {
      "fn": "AccessControlEnumerable._grantRole",
      "jump": "i",
      "offset": [
        2088,
        2119
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7981": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        699,
        904
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "7982": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 129,
      "value": "0x40"
    },
    "7984": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7991": {
      "op": "SHL"
    },
    "7992": {
      "op": "SUB"
    },
    "7993": {
      "op": "DUP4"
    },
    "7994": {
      "op": "AND"
    },
    "7995": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x24"
    },
    "7997": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "DUP3",
      "path": "30"
    },
    "7998": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "ADD",
      "path": "30"
    },
    "7999": {
      "op": "MSTORE"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8002": {
      "op": "DUP2"
    },
    "8003": {
      "op": "ADD"
    },
    "8004": {
      "op": "DUP3"
    },
    "8005": {
      "op": "SWAP1"
    },
    "8006": {
      "op": "MSTORE"
    },
    "8007": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        811,
        897
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x932"
    },
    "8010": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        811,
        897
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8011": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        831,
        836
      ],
      "op": "DUP5",
      "path": "30"
    },
    "8012": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        831,
        836
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8013": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8020": {
      "op": "SHL"
    },
    "8021": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        861,
        884
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8024": {
      "op": "ADD"
    },
    "8025": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        838,
        896
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1E3C"
    },
    "8028": {
      "op": "JUMP"
    },
    "8029": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2215,
        2386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8030": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2303,
        2335
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 130,
      "value": "0x1F67"
    },
    "8033": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2321,
        2325
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8034": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2327,
        2334
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8035": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2303,
        2320
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2170"
    },
    "8038": {
      "fn": "AccessControlEnumerable._revokeRole",
      "jump": "i",
      "offset": [
        2303,
        2335
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8039": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2303,
        2335
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8040": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 131,
      "value": "0x0"
    },
    "8042": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8043": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8044": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8045": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x19"
    },
    "8047": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8049": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8050": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8052": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8053": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2363
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8054": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x932"
    },
    "8057": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8058": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2371,
        2378
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8059": {
      "fn": "AccessControlEnumerable._revokeRole",
      "offset": [
        2345,
        2370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21D7"
    },
    "8062": {
      "fn": "AccessControlEnumerable._revokeRole",
      "jump": "i",
      "offset": [
        2345,
        2379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8063": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6643,
        6753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8064": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6721,
        6746
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 132,
      "value": "0xC2B"
    },
    "8067": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6732,
        6736
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8068": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6738,
        6745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8069": {
      "fn": "AccessControl._setupRole",
      "offset": [
        6721,
        6731
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0B"
    },
    "8072": {
      "fn": "AccessControl._setupRole",
      "jump": "i",
      "offset": [
        6721,
        6746
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8073": {
      "op": "JUMPDEST"
    },
    "8074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8076": {
      "op": "PUSH2",
      "value": "0x1845"
    },
    "8079": {
      "op": "DUP4"
    },
    "8080": {
      "op": "DUP4"
    },
    "8081": {
      "op": "PUSH2",
      "value": "0x21EC"
    },
    "8084": {
      "jump": "i",
      "op": "JUMP"
    },
    "8085": {
      "op": "JUMPDEST"
    },
    "8086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8088": {
      "op": "PUSH2",
      "value": "0x7C9"
    },
    "8091": {
      "op": "DUP3"
    },
    "8092": {
      "op": "SLOAD"
    },
    "8093": {
      "op": "SWAP1"
    },
    "8094": {
      "op": "JUMP"
    },
    "8095": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3721,
        4213
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8096": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3809,
        3831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA9"
    },
    "8099": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3817,
        3821
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8100": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3823,
        3830
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8101": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3809,
        3816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184C"
    },
    "8104": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3809,
        3831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8105": {
      "branch": 175,
      "fn": "AccessControl._checkRole",
      "offset": [
        3809,
        3831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8106": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3804,
        4207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2B"
    },
    "8109": {
      "branch": 175,
      "fn": "AccessControl._checkRole",
      "offset": [
        3804,
        4207
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8110": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3992,
        4033
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 133,
      "value": "0x1FC1"
    },
    "8113": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4020,
        4027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8120": {
      "op": "SHL"
    },
    "8121": {
      "op": "SUB"
    },
    "8122": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3992,
        4033
      ],
      "op": "AND",
      "path": "0"
    },
    "8123": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4030,
        4032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "8125": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3992,
        4011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2216"
    },
    "8128": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3992,
        4033
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8129": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3992,
        4033
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8130": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4104,
        4142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FCC"
    },
    "8133": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4132,
        4136
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8134": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4139,
        4141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8136": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4104,
        4123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2216"
    },
    "8139": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        4104,
        4142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8140": {
      "fn": "AccessControl._checkRole",
      "offset": [
        4104,
        4142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8141": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8143": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8144": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8146": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "ADD",
      "path": "0"
    },
    "8147": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FDD"
    },
    "8150": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8151": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8152": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8153": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ACD"
    },
    "8156": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3899,
        4164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8157": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8158": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8160": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8161": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8162": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8164": {
      "op": "NOT"
    },
    "8165": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8166": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8167": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SUB",
      "path": "0"
    },
    "8168": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "ADD",
      "path": "0"
    },
    "8169": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8170": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8171": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8172": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8173": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8174": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3899,
        4164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8181": {
      "op": "SHL"
    },
    "8182": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8183": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8184": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "8187": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8188": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8190": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "ADD",
      "path": "0"
    },
    "8191": {
      "fn": "AccessControl._checkRole",
      "offset": [
        3847,
        4196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277D"
    },
    "8194": {
      "fn": "AccessControl._checkRole",
      "jump": "i",
      "offset": [
        3847,
        4196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8195": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3205,
        3911
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "8196": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3647
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "8198": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2058"
    },
    "8201": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3678,
        3682
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8202": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "8204": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "8205": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "DUP1",
      "path": "30"
    },
    "8206": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "8208": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "ADD",
      "path": "30"
    },
    "8209": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "8211": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "8212": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "DUP1",
      "path": "30"
    },
    "8213": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "8215": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8216": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "8217": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "8219": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "ADD",
      "path": "30"
    },
    "8220": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH32",
      "path": "30",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8253": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "8255": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "POP",
      "path": "30"
    },
    "8256": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3658,
        3663
      ],
      "op": "DUP6",
      "path": "30"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8263": {
      "op": "SHL"
    },
    "8264": {
      "op": "SUB"
    },
    "8265": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3677
      ],
      "op": "AND",
      "path": "30"
    },
    "8266": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3677
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x23B2"
    },
    "8269": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3677
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8270": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "8271": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "8272": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8273": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "PUSH4",
      "path": "30",
      "value": "0xFFFFFFFF"
    },
    "8278": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "AND",
      "path": "30"
    },
    "8279": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3650,
        3719
      ],
      "op": "JUMP",
      "path": "30"
    },
    "8280": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3650,
        3719
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "8281": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3733,
        3750
      ],
      "op": "DUP1",
      "path": "30"
    },
    "8282": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3733,
        3750
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "8283": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3719
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8284": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3719
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "8285": {
      "op": "POP"
    },
    "8286": {
      "branch": 183,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3733,
        3754
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "8287": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3729,
        3905
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x932"
    },
    "8290": {
      "branch": 183,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3729,
        3905
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "8291": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3828,
        3838
      ],
      "op": "DUP1",
      "path": "30",
      "statement": 134
    },
    "8292": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "DUP1",
      "path": "30"
    },
    "8293": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "8295": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "ADD",
      "path": "30"
    },
    "8296": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8297": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "8298": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8299": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "ADD",
      "path": "30"
    },
    "8300": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8301": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2076"
    },
    "8304": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "8305": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "8306": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2AAB"
    },
    "8309": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3817,
        3847
      ],
      "op": "JUMP",
      "path": "30"
    },
    "8310": {
      "branch": 184,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        3847
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "8311": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x932"
    },
    "8314": {
      "branch": 184,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "8315": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "8317": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "8318": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8322": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8324": {
      "op": "SHL"
    },
    "8325": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "DUP2",
      "path": "30"
    },
    "8326": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "8327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8329": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "8331": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "DUP3",
      "path": "30"
    },
    "8332": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "ADD",
      "path": "30"
    },
    "8333": {
      "op": "MSTORE"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8338": {
      "op": "DUP3"
    },
    "8339": {
      "op": "ADD"
    },
    "8340": {
      "op": "MSTORE"
    },
    "8341": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "8374": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8376": {
      "op": "DUP3"
    },
    "8377": {
      "op": "ADD"
    },
    "8378": {
      "op": "MSTORE"
    },
    "8379": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "8392": {
      "op": "SHL"
    },
    "8393": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8395": {
      "op": "DUP3"
    },
    "8396": {
      "op": "ADD"
    },
    "8397": {
      "op": "MSTORE"
    },
    "8398": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8400": {
      "op": "ADD"
    },
    "8401": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3809,
        3894
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x732"
    },
    "8404": {
      "op": "JUMP"
    },
    "8405": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7247,
        7480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8406": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7330,
        7352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20DF"
    },
    "8409": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7338,
        7342
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8410": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7344,
        7351
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8411": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7330,
        7337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184C"
    },
    "8414": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7330,
        7352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8415": {
      "branch": 176,
      "fn": "AccessControl._grantRole",
      "offset": [
        7330,
        7352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8416": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7325,
        7474
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2B"
    },
    "8419": {
      "branch": 176,
      "fn": "AccessControl._grantRole",
      "offset": [
        7325,
        7474
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8420": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 135,
      "value": "0x0"
    },
    "8422": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8423": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8424": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8425": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7374
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "8427": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8429": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8430": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8431": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8432": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8434": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8435": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8436": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7380
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8443": {
      "op": "SHL"
    },
    "8444": {
      "op": "SUB"
    },
    "8445": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8446": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "AND",
      "path": "0"
    },
    "8447": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8448": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8449": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8450": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8451": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8452": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8453": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7397
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8454": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8455": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8458": {
      "op": "NOT"
    },
    "8459": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "AND",
      "path": "0"
    },
    "8460": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7400,
        7404
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8462": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "OR",
      "path": "0"
    },
    "8463": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8464": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7368,
        7404
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8465": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7450,
        7462
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 136,
      "value": "0x2117"
    },
    "8468": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8469": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8470": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8471": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7450,
        7462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8478": {
      "op": "SHL"
    },
    "8479": {
      "op": "SUB"
    },
    "8480": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "AND",
      "path": "0"
    },
    "8481": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7441,
        7448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8488": {
      "op": "SHL"
    },
    "8489": {
      "op": "SUB"
    },
    "8490": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "AND",
      "path": "0"
    },
    "8491": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7435,
        7439
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8492": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "8525": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8527": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8528": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8530": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8531": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8532": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8533": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "SUB",
      "path": "0"
    },
    "8534": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8535": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7423,
        7463
      ],
      "op": "LOG4",
      "path": "0"
    },
    "8536": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7247,
        7480
      ],
      "op": "POP",
      "path": "0"
    },
    "8537": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7247,
        7480
      ],
      "op": "POP",
      "path": "0"
    },
    "8538": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        7247,
        7480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8539": {
      "op": "JUMPDEST"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8542": {
      "op": "PUSH2",
      "value": "0x1845"
    },
    "8545": {
      "op": "DUP4"
    },
    "8546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8552": {
      "op": "SHL"
    },
    "8553": {
      "op": "SUB"
    },
    "8554": {
      "op": "DUP5"
    },
    "8555": {
      "op": "AND"
    },
    "8556": {
      "op": "PUSH2",
      "value": "0x23C9"
    },
    "8559": {
      "jump": "i",
      "op": "JUMP"
    },
    "8560": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7605,
        7839
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8561": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7688,
        7710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217A"
    },
    "8564": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7696,
        7700
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8565": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7702,
        7709
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8566": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7688,
        7695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184C"
    },
    "8569": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7688,
        7710
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8570": {
      "branch": 177,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7688,
        7710
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8571": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7684,
        7833
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8572": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7684,
        7833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2B"
    },
    "8575": {
      "branch": 177,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7684,
        7833
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8576": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7758,
        7763
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 137,
      "value": "0x0"
    },
    "8578": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8579": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8580": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8581": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "8583": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8585": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8586": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8587": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8588": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8590": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8591": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8592": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8599": {
      "op": "SHL"
    },
    "8600": {
      "op": "SUB"
    },
    "8601": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8602": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "AND",
      "path": "0"
    },
    "8603": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8604": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8605": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8606": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8607": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8608": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8609": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8610": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7755
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8611": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8612": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8613": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8615": {
      "op": "NOT"
    },
    "8616": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "AND",
      "path": "0"
    },
    "8617": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8618": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7763
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8619": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7782,
        7822
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 138
    },
    "8620": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8621": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "8622": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8623": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7726,
        7738
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8624": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7782,
        7822
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "8657": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7782,
        7822
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8658": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7758,
        7763
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8659": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7782,
        7822
      ],
      "op": "LOG4",
      "path": "0"
    },
    "8660": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7605,
        7839
      ],
      "op": "POP",
      "path": "0"
    },
    "8661": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7605,
        7839
      ],
      "op": "POP",
      "path": "0"
    },
    "8662": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7605,
        7839
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8663": {
      "op": "JUMPDEST"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8666": {
      "op": "PUSH2",
      "value": "0x1845"
    },
    "8669": {
      "op": "DUP4"
    },
    "8670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8676": {
      "op": "SHL"
    },
    "8677": {
      "op": "SUB"
    },
    "8678": {
      "op": "DUP5"
    },
    "8679": {
      "op": "AND"
    },
    "8680": {
      "op": "PUSH2",
      "value": "0x2418"
    },
    "8683": {
      "jump": "i",
      "op": "JUMP"
    },
    "8684": {
      "op": "JUMPDEST"
    },
    "8685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8687": {
      "op": "DUP3"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8690": {
      "op": "ADD"
    },
    "8691": {
      "op": "DUP3"
    },
    "8692": {
      "op": "DUP2"
    },
    "8693": {
      "op": "SLOAD"
    },
    "8694": {
      "op": "DUP2"
    },
    "8695": {
      "op": "LT"
    },
    "8696": {
      "op": "PUSH2",
      "value": "0x2203"
    },
    "8699": {
      "op": "JUMPI"
    },
    "8700": {
      "op": "PUSH2",
      "value": "0x2203"
    },
    "8703": {
      "op": "PUSH2",
      "value": "0x2B42"
    },
    "8706": {
      "jump": "i",
      "op": "JUMP"
    },
    "8707": {
      "op": "JUMPDEST"
    },
    "8708": {
      "op": "SWAP1"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8711": {
      "op": "MSTORE"
    },
    "8712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8716": {
      "op": "KECCAK256"
    },
    "8717": {
      "op": "ADD"
    },
    "8718": {
      "op": "SLOAD"
    },
    "8719": {
      "op": "SWAP1"
    },
    "8720": {
      "op": "POP"
    },
    "8721": {
      "op": "SWAP3"
    },
    "8722": {
      "op": "SWAP2"
    },
    "8723": {
      "op": "POP"
    },
    "8724": {
      "op": "POP"
    },
    "8725": {
      "jump": "o",
      "op": "JUMP"
    },
    "8726": {
      "op": "JUMPDEST"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8731": {
      "op": "PUSH2",
      "value": "0x2225"
    },
    "8734": {
      "op": "DUP4"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8737": {
      "op": "PUSH2",
      "value": "0x2A3A"
    },
    "8740": {
      "jump": "i",
      "op": "JUMP"
    },
    "8741": {
      "op": "JUMPDEST"
    },
    "8742": {
      "op": "PUSH2",
      "value": "0x2230"
    },
    "8745": {
      "op": "SWAP1"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8748": {
      "op": "PUSH2",
      "value": "0x29E7"
    },
    "8751": {
      "jump": "i",
      "op": "JUMP"
    },
    "8752": {
      "op": "JUMPDEST"
    },
    "8753": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8762": {
      "op": "DUP2"
    },
    "8763": {
      "op": "GT"
    },
    "8764": {
      "op": "ISZERO"
    },
    "8765": {
      "op": "PUSH2",
      "value": "0x2248"
    },
    "8768": {
      "op": "JUMPI"
    },
    "8769": {
      "op": "PUSH2",
      "value": "0x2248"
    },
    "8772": {
      "op": "PUSH2",
      "value": "0x2858"
    },
    "8775": {
      "jump": "i",
      "op": "JUMP"
    },
    "8776": {
      "op": "JUMPDEST"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8779": {
      "op": "MLOAD"
    },
    "8780": {
      "op": "SWAP1"
    },
    "8781": {
      "op": "DUP1"
    },
    "8782": {
      "op": "DUP3"
    },
    "8783": {
      "op": "MSTORE"
    },
    "8784": {
      "op": "DUP1"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8787": {
      "op": "ADD"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8790": {
      "op": "NOT"
    },
    "8791": {
      "op": "AND"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8794": {
      "op": "ADD"
    },
    "8795": {
      "op": "DUP3"
    },
    "8796": {
      "op": "ADD"
    },
    "8797": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8799": {
      "op": "MSTORE"
    },
    "8800": {
      "op": "DUP1"
    },
    "8801": {
      "op": "ISZERO"
    },
    "8802": {
      "op": "PUSH2",
      "value": "0x2272"
    },
    "8805": {
      "op": "JUMPI"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8808": {
      "op": "DUP3"
    },
    "8809": {
      "op": "ADD"
    },
    "8810": {
      "op": "DUP2"
    },
    "8811": {
      "op": "DUP1"
    },
    "8812": {
      "op": "CALLDATASIZE"
    },
    "8813": {
      "op": "DUP4"
    },
    "8814": {
      "op": "CALLDATACOPY"
    },
    "8815": {
      "op": "ADD"
    },
    "8816": {
      "op": "SWAP1"
    },
    "8817": {
      "op": "POP"
    },
    "8818": {
      "op": "JUMPDEST"
    },
    "8819": {
      "op": "POP"
    },
    "8820": {
      "op": "SWAP1"
    },
    "8821": {
      "op": "POP"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8824": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "8826": {
      "op": "SHL"
    },
    "8827": {
      "op": "DUP2"
    },
    "8828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8830": {
      "op": "DUP2"
    },
    "8831": {
      "op": "MLOAD"
    },
    "8832": {
      "op": "DUP2"
    },
    "8833": {
      "op": "LT"
    },
    "8834": {
      "op": "PUSH2",
      "value": "0x228D"
    },
    "8837": {
      "op": "JUMPI"
    },
    "8838": {
      "op": "PUSH2",
      "value": "0x228D"
    },
    "8841": {
      "op": "PUSH2",
      "value": "0x2B42"
    },
    "8844": {
      "jump": "i",
      "op": "JUMP"
    },
    "8845": {
      "op": "JUMPDEST"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8848": {
      "op": "ADD"
    },
    "8849": {
      "op": "ADD"
    },
    "8850": {
      "op": "SWAP1"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8857": {
      "op": "SHL"
    },
    "8858": {
      "op": "SUB"
    },
    "8859": {
      "op": "NOT"
    },
    "8860": {
      "op": "AND"
    },
    "8861": {
      "op": "SWAP1"
    },
    "8862": {
      "op": "DUP2"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8865": {
      "op": "BYTE"
    },
    "8866": {
      "op": "SWAP1"
    },
    "8867": {
      "op": "MSTORE8"
    },
    "8868": {
      "op": "POP"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "8873": {
      "op": "SHL"
    },
    "8874": {
      "op": "DUP2"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8877": {
      "op": "DUP2"
    },
    "8878": {
      "op": "MLOAD"
    },
    "8879": {
      "op": "DUP2"
    },
    "8880": {
      "op": "LT"
    },
    "8881": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "8884": {
      "op": "JUMPI"
    },
    "8885": {
      "op": "PUSH2",
      "value": "0x22BC"
    },
    "8888": {
      "op": "PUSH2",
      "value": "0x2B42"
    },
    "8891": {
      "jump": "i",
      "op": "JUMP"
    },
    "8892": {
      "op": "JUMPDEST"
    },
    "8893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8895": {
      "op": "ADD"
    },
    "8896": {
      "op": "ADD"
    },
    "8897": {
      "op": "SWAP1"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8902": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8904": {
      "op": "SHL"
    },
    "8905": {
      "op": "SUB"
    },
    "8906": {
      "op": "NOT"
    },
    "8907": {
      "op": "AND"
    },
    "8908": {
      "op": "SWAP1"
    },
    "8909": {
      "op": "DUP2"
    },
    "8910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8912": {
      "op": "BYTE"
    },
    "8913": {
      "op": "SWAP1"
    },
    "8914": {
      "op": "MSTORE8"
    },
    "8915": {
      "op": "POP"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8918": {
      "op": "PUSH2",
      "value": "0x22E0"
    },
    "8921": {
      "op": "DUP5"
    },
    "8922": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8924": {
      "op": "PUSH2",
      "value": "0x2A3A"
    },
    "8927": {
      "jump": "i",
      "op": "JUMP"
    },
    "8928": {
      "op": "JUMPDEST"
    },
    "8929": {
      "op": "PUSH2",
      "value": "0x22EB"
    },
    "8932": {
      "op": "SWAP1"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8935": {
      "op": "PUSH2",
      "value": "0x29E7"
    },
    "8938": {
      "jump": "i",
      "op": "JUMP"
    },
    "8939": {
      "op": "JUMPDEST"
    },
    "8940": {
      "op": "SWAP1"
    },
    "8941": {
      "op": "POP"
    },
    "8942": {
      "op": "JUMPDEST"
    },
    "8943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8945": {
      "op": "DUP2"
    },
    "8946": {
      "op": "GT"
    },
    "8947": {
      "op": "ISZERO"
    },
    "8948": {
      "op": "PUSH2",
      "value": "0x2363"
    },
    "8951": {
      "op": "JUMPI"
    },
    "8952": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "8969": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "8971": {
      "op": "SHL"
    },
    "8972": {
      "op": "DUP6"
    },
    "8973": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "8975": {
      "op": "AND"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "8978": {
      "op": "DUP2"
    },
    "8979": {
      "op": "LT"
    },
    "8980": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "8983": {
      "op": "JUMPI"
    },
    "8984": {
      "op": "PUSH2",
      "value": "0x231F"
    },
    "8987": {
      "op": "PUSH2",
      "value": "0x2B42"
    },
    "8990": {
      "jump": "i",
      "op": "JUMP"
    },
    "8991": {
      "op": "JUMPDEST"
    },
    "8992": {
      "op": "BYTE"
    },
    "8993": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8995": {
      "op": "SHL"
    },
    "8996": {
      "op": "DUP3"
    },
    "8997": {
      "op": "DUP3"
    },
    "8998": {
      "op": "DUP2"
    },
    "8999": {
      "op": "MLOAD"
    },
    "9000": {
      "op": "DUP2"
    },
    "9001": {
      "op": "LT"
    },
    "9002": {
      "op": "PUSH2",
      "value": "0x2335"
    },
    "9005": {
      "op": "JUMPI"
    },
    "9006": {
      "op": "PUSH2",
      "value": "0x2335"
    },
    "9009": {
      "op": "PUSH2",
      "value": "0x2B42"
    },
    "9012": {
      "jump": "i",
      "op": "JUMP"
    },
    "9013": {
      "op": "JUMPDEST"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9016": {
      "op": "ADD"
    },
    "9017": {
      "op": "ADD"
    },
    "9018": {
      "op": "SWAP1"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9025": {
      "op": "SHL"
    },
    "9026": {
      "op": "SUB"
    },
    "9027": {
      "op": "NOT"
    },
    "9028": {
      "op": "AND"
    },
    "9029": {
      "op": "SWAP1"
    },
    "9030": {
      "op": "DUP2"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9033": {
      "op": "BYTE"
    },
    "9034": {
      "op": "SWAP1"
    },
    "9035": {
      "op": "MSTORE8"
    },
    "9036": {
      "op": "POP"
    },
    "9037": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9039": {
      "op": "SWAP5"
    },
    "9040": {
      "op": "SWAP1"
    },
    "9041": {
      "op": "SWAP5"
    },
    "9042": {
      "op": "SHR"
    },
    "9043": {
      "op": "SWAP4"
    },
    "9044": {
      "op": "PUSH2",
      "value": "0x235C"
    },
    "9047": {
      "op": "DUP2"
    },
    "9048": {
      "op": "PUSH2",
      "value": "0x2B58"
    },
    "9051": {
      "jump": "i",
      "op": "JUMP"
    },
    "9052": {
      "op": "JUMPDEST"
    },
    "9053": {
      "op": "SWAP1"
    },
    "9054": {
      "op": "POP"
    },
    "9055": {
      "op": "PUSH2",
      "value": "0x22EE"
    },
    "9058": {
      "op": "JUMP"
    },
    "9059": {
      "op": "JUMPDEST"
    },
    "9060": {
      "op": "POP"
    },
    "9061": {
      "op": "DUP4"
    },
    "9062": {
      "op": "ISZERO"
    },
    "9063": {
      "op": "PUSH2",
      "value": "0x1845"
    },
    "9066": {
      "op": "JUMPI"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9069": {
      "op": "MLOAD"
    },
    "9070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9076": {
      "op": "SHL"
    },
    "9077": {
      "op": "DUP2"
    },
    "9078": {
      "op": "MSTORE"
    },
    "9079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9081": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9083": {
      "op": "DUP3"
    },
    "9084": {
      "op": "ADD"
    },
    "9085": {
      "op": "DUP2"
    },
    "9086": {
      "op": "SWAP1"
    },
    "9087": {
      "op": "MSTORE"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9090": {
      "op": "DUP3"
    },
    "9091": {
      "op": "ADD"
    },
    "9092": {
      "op": "MSTORE"
    },
    "9093": {
      "op": "PUSH32",
      "value": "0x537472696E67733A20686578206C656E67746820696E73756666696369656E74"
    },
    "9126": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9128": {
      "op": "DUP3"
    },
    "9129": {
      "op": "ADD"
    },
    "9130": {
      "op": "MSTORE"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9133": {
      "op": "ADD"
    },
    "9134": {
      "op": "PUSH2",
      "value": "0x732"
    },
    "9137": {
      "op": "JUMP"
    },
    "9138": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9139": {
      "fn": "Address.functionCall",
      "offset": [
        3979,
        3991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9141": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 139,
      "value": "0x23C1"
    },
    "9144": {
      "fn": "Address.functionCall",
      "offset": [
        4032,
        4038
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9145": {
      "fn": "Address.functionCall",
      "offset": [
        4040,
        4044
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9146": {
      "fn": "Address.functionCall",
      "offset": [
        4046,
        4047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9148": {
      "fn": "Address.functionCall",
      "offset": [
        4049,
        4061
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9149": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x250B"
    },
    "9152": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9153": {
      "fn": "Address.functionCall",
      "offset": [
        4010,
        4062
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9154": {
      "fn": "Address.functionCall",
      "offset": [
        4003,
        4062
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9155": {
      "fn": "Address.functionCall",
      "offset": [
        3846,
        4069
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9156": {
      "op": "POP"
    },
    "9157": {
      "op": "POP"
    },
    "9158": {
      "op": "POP"
    },
    "9159": {
      "op": "POP"
    },
    "9160": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3846,
        4069
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9161": {
      "op": "JUMPDEST"
    },
    "9162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9164": {
      "op": "DUP2"
    },
    "9165": {
      "op": "DUP2"
    },
    "9166": {
      "op": "MSTORE"
    },
    "9167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9169": {
      "op": "DUP4"
    },
    "9170": {
      "op": "ADD"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9173": {
      "op": "MSTORE"
    },
    "9174": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9176": {
      "op": "DUP2"
    },
    "9177": {
      "op": "KECCAK256"
    },
    "9178": {
      "op": "SLOAD"
    },
    "9179": {
      "op": "PUSH2",
      "value": "0x2410"
    },
    "9182": {
      "op": "JUMPI"
    },
    "9183": {
      "op": "POP"
    },
    "9184": {
      "op": "DUP2"
    },
    "9185": {
      "op": "SLOAD"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9188": {
      "op": "DUP2"
    },
    "9189": {
      "op": "DUP2"
    },
    "9190": {
      "op": "ADD"
    },
    "9191": {
      "op": "DUP5"
    },
    "9192": {
      "op": "SSTORE"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9195": {
      "op": "DUP5"
    },
    "9196": {
      "op": "DUP2"
    },
    "9197": {
      "op": "MSTORE"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9200": {
      "op": "DUP1"
    },
    "9201": {
      "op": "DUP3"
    },
    "9202": {
      "op": "KECCAK256"
    },
    "9203": {
      "op": "SWAP1"
    },
    "9204": {
      "op": "SWAP4"
    },
    "9205": {
      "op": "ADD"
    },
    "9206": {
      "op": "DUP5"
    },
    "9207": {
      "op": "SWAP1"
    },
    "9208": {
      "op": "SSTORE"
    },
    "9209": {
      "op": "DUP5"
    },
    "9210": {
      "op": "SLOAD"
    },
    "9211": {
      "op": "DUP5"
    },
    "9212": {
      "op": "DUP3"
    },
    "9213": {
      "op": "MSTORE"
    },
    "9214": {
      "op": "DUP3"
    },
    "9215": {
      "op": "DUP7"
    },
    "9216": {
      "op": "ADD"
    },
    "9217": {
      "op": "SWAP1"
    },
    "9218": {
      "op": "SWAP4"
    },
    "9219": {
      "op": "MSTORE"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9222": {
      "op": "SWAP1"
    },
    "9223": {
      "op": "KECCAK256"
    },
    "9224": {
      "op": "SWAP2"
    },
    "9225": {
      "op": "SWAP1"
    },
    "9226": {
      "op": "SWAP2"
    },
    "9227": {
      "op": "SSTORE"
    },
    "9228": {
      "op": "PUSH2",
      "value": "0x7C9"
    },
    "9231": {
      "op": "JUMP"
    },
    "9232": {
      "op": "JUMPDEST"
    },
    "9233": {
      "op": "POP"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9236": {
      "op": "PUSH2",
      "value": "0x7C9"
    },
    "9239": {
      "op": "JUMP"
    },
    "9240": {
      "op": "JUMPDEST"
    },
    "9241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9243": {
      "op": "DUP2"
    },
    "9244": {
      "op": "DUP2"
    },
    "9245": {
      "op": "MSTORE"
    },
    "9246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9248": {
      "op": "DUP4"
    },
    "9249": {
      "op": "ADD"
    },
    "9250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9252": {
      "op": "MSTORE"
    },
    "9253": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9255": {
      "op": "DUP2"
    },
    "9256": {
      "op": "KECCAK256"
    },
    "9257": {
      "op": "SLOAD"
    },
    "9258": {
      "op": "DUP1"
    },
    "9259": {
      "op": "ISZERO"
    },
    "9260": {
      "op": "PUSH2",
      "value": "0x2501"
    },
    "9263": {
      "op": "JUMPI"
    },
    "9264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9266": {
      "op": "PUSH2",
      "value": "0x243C"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9271": {
      "op": "DUP4"
    },
    "9272": {
      "op": "PUSH2",
      "value": "0x2A7B"
    },
    "9275": {
      "jump": "i",
      "op": "JUMP"
    },
    "9276": {
      "op": "JUMPDEST"
    },
    "9277": {
      "op": "DUP6"
    },
    "9278": {
      "op": "SLOAD"
    },
    "9279": {
      "op": "SWAP1"
    },
    "9280": {
      "op": "SWAP2"
    },
    "9281": {
      "op": "POP"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9284": {
      "op": "SWAP1"
    },
    "9285": {
      "op": "PUSH2",
      "value": "0x2450"
    },
    "9288": {
      "op": "SWAP1"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9291": {
      "op": "SWAP1"
    },
    "9292": {
      "op": "PUSH2",
      "value": "0x2A7B"
    },
    "9295": {
      "jump": "i",
      "op": "JUMP"
    },
    "9296": {
      "op": "JUMPDEST"
    },
    "9297": {
      "op": "SWAP1"
    },
    "9298": {
      "op": "POP"
    },
    "9299": {
      "op": "DUP2"
    },
    "9300": {
      "op": "DUP2"
    },
    "9301": {
      "op": "EQ"
    },
    "9302": {
      "op": "PUSH2",
      "value": "0x24B5"
    },
    "9305": {
      "op": "JUMPI"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9308": {
      "op": "DUP7"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9311": {
      "op": "ADD"
    },
    "9312": {
      "op": "DUP3"
    },
    "9313": {
      "op": "DUP2"
    },
    "9314": {
      "op": "SLOAD"
    },
    "9315": {
      "op": "DUP2"
    },
    "9316": {
      "op": "LT"
    },
    "9317": {
      "op": "PUSH2",
      "value": "0x2470"
    },
    "9320": {
      "op": "JUMPI"
    },
    "9321": {
      "op": "PUSH2",
      "value": "0x2470"
    },
    "9324": {
      "op": "PUSH2",
      "value": "0x2B42"
    },
    "9327": {
      "jump": "i",
      "op": "JUMP"
    },
    "9328": {
      "op": "JUMPDEST"
    },
    "9329": {
      "op": "SWAP1"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9332": {
      "op": "MSTORE"
    },
    "9333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9337": {
      "op": "KECCAK256"
    },
    "9338": {
      "op": "ADD"
    },
    "9339": {
      "op": "SLOAD"
    },
    "9340": {
      "op": "SWAP1"
    },
    "9341": {
      "op": "POP"
    },
    "9342": {
      "op": "DUP1"
    },
    "9343": {
      "op": "DUP8"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9346": {
      "op": "ADD"
    },
    "9347": {
      "op": "DUP5"
    },
    "9348": {
      "op": "DUP2"
    },
    "9349": {
      "op": "SLOAD"
    },
    "9350": {
      "op": "DUP2"
    },
    "9351": {
      "op": "LT"
    },
    "9352": {
      "op": "PUSH2",
      "value": "0x2493"
    },
    "9355": {
      "op": "JUMPI"
    },
    "9356": {
      "op": "PUSH2",
      "value": "0x2493"
    },
    "9359": {
      "op": "PUSH2",
      "value": "0x2B42"
    },
    "9362": {
      "jump": "i",
      "op": "JUMP"
    },
    "9363": {
      "op": "JUMPDEST"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9366": {
      "op": "SWAP2"
    },
    "9367": {
      "op": "DUP3"
    },
    "9368": {
      "op": "MSTORE"
    },
    "9369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9371": {
      "op": "DUP1"
    },
    "9372": {
      "op": "DUP4"
    },
    "9373": {
      "op": "KECCAK256"
    },
    "9374": {
      "op": "SWAP1"
    },
    "9375": {
      "op": "SWAP2"
    },
    "9376": {
      "op": "ADD"
    },
    "9377": {
      "op": "SWAP3"
    },
    "9378": {
      "op": "SWAP1"
    },
    "9379": {
      "op": "SWAP3"
    },
    "9380": {
      "op": "SSTORE"
    },
    "9381": {
      "op": "SWAP2"
    },
    "9382": {
      "op": "DUP3"
    },
    "9383": {
      "op": "MSTORE"
    },
    "9384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9386": {
      "op": "DUP9"
    },
    "9387": {
      "op": "ADD"
    },
    "9388": {
      "op": "SWAP1"
    },
    "9389": {
      "op": "MSTORE"
    },
    "9390": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9392": {
      "op": "SWAP1"
    },
    "9393": {
      "op": "KECCAK256"
    },
    "9394": {
      "op": "DUP4"
    },
    "9395": {
      "op": "SWAP1"
    },
    "9396": {
      "op": "SSTORE"
    },
    "9397": {
      "op": "JUMPDEST"
    },
    "9398": {
      "op": "DUP6"
    },
    "9399": {
      "op": "SLOAD"
    },
    "9400": {
      "op": "DUP7"
    },
    "9401": {
      "op": "SWAP1"
    },
    "9402": {
      "op": "DUP1"
    },
    "9403": {
      "op": "PUSH2",
      "value": "0x24C6"
    },
    "9406": {
      "op": "JUMPI"
    },
    "9407": {
      "op": "PUSH2",
      "value": "0x24C6"
    },
    "9410": {
      "op": "PUSH2",
      "value": "0x2B6F"
    },
    "9413": {
      "jump": "i",
      "op": "JUMP"
    },
    "9414": {
      "op": "JUMPDEST"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9417": {
      "op": "SWAP1"
    },
    "9418": {
      "op": "SUB"
    },
    "9419": {
      "op": "DUP2"
    },
    "9420": {
      "op": "DUP2"
    },
    "9421": {
      "op": "SWAP1"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9424": {
      "op": "MSTORE"
    },
    "9425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9429": {
      "op": "KECCAK256"
    },
    "9430": {
      "op": "ADD"
    },
    "9431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9433": {
      "op": "SWAP1"
    },
    "9434": {
      "op": "SSTORE"
    },
    "9435": {
      "op": "SWAP1"
    },
    "9436": {
      "op": "SSTORE"
    },
    "9437": {
      "op": "DUP6"
    },
    "9438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9440": {
      "op": "ADD"
    },
    "9441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9443": {
      "op": "DUP7"
    },
    "9444": {
      "op": "DUP2"
    },
    "9445": {
      "op": "MSTORE"
    },
    "9446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9448": {
      "op": "ADD"
    },
    "9449": {
      "op": "SWAP1"
    },
    "9450": {
      "op": "DUP2"
    },
    "9451": {
      "op": "MSTORE"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9454": {
      "op": "ADD"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9457": {
      "op": "KECCAK256"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9460": {
      "op": "SWAP1"
    },
    "9461": {
      "op": "SSTORE"
    },
    "9462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9464": {
      "op": "SWAP4"
    },
    "9465": {
      "op": "POP"
    },
    "9466": {
      "op": "POP"
    },
    "9467": {
      "op": "POP"
    },
    "9468": {
      "op": "POP"
    },
    "9469": {
      "op": "PUSH2",
      "value": "0x7C9"
    },
    "9472": {
      "op": "JUMP"
    },
    "9473": {
      "op": "JUMPDEST"
    },
    "9474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9476": {
      "op": "SWAP2"
    },
    "9477": {
      "op": "POP"
    },
    "9478": {
      "op": "POP"
    },
    "9479": {
      "op": "PUSH2",
      "value": "0x7C9"
    },
    "9482": {
      "op": "JUMP"
    },
    "9483": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5098,
        5110
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5155,
        5160
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 140
    },
    "9487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5151
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "9488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "LT",
      "path": "2"
    },
    "9489": {
      "branch": 178,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5130,
        5160
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x256C"
    },
    "9493": {
      "branch": 178,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9497": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9501": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9503": {
      "op": "SHL"
    },
    "9504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9511": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "ADD",
      "path": "2"
    },
    "9512": {
      "op": "MSTORE"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9515": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9517": {
      "op": "DUP3"
    },
    "9518": {
      "op": "ADD"
    },
    "9519": {
      "op": "MSTORE"
    },
    "9520": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9555": {
      "op": "DUP3"
    },
    "9556": {
      "op": "ADD"
    },
    "9557": {
      "op": "MSTORE"
    },
    "9558": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "9565": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "9567": {
      "op": "SHL"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9570": {
      "op": "DUP3"
    },
    "9571": {
      "op": "ADD"
    },
    "9572": {
      "op": "MSTORE"
    },
    "9573": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9575": {
      "op": "ADD"
    },
    "9576": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x732"
    },
    "9579": {
      "op": "JUMP"
    },
    "9580": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5122,
        5203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9587": {
      "op": "SHL"
    },
    "9588": {
      "op": "SUB"
    },
    "9589": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 141
    },
    "9590": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "AND",
      "path": "2"
    },
    "9591": {
      "fn": "Address.isContract",
      "offset": [
        1450,
        1469
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9592": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 142,
      "value": "0x25C3"
    },
    "9595": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9596": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9598": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9605": {
      "op": "SHL"
    },
    "9606": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9607": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9610": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9612": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9613": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "ADD",
      "path": "2"
    },
    "9614": {
      "op": "MSTORE"
    },
    "9615": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "9617": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9619": {
      "op": "DUP3"
    },
    "9620": {
      "op": "ADD"
    },
    "9621": {
      "op": "MSTORE"
    },
    "9622": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9657": {
      "op": "DUP3"
    },
    "9658": {
      "op": "ADD"
    },
    "9659": {
      "op": "MSTORE"
    },
    "9660": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9662": {
      "op": "ADD"
    },
    "9663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x732"
    },
    "9666": {
      "op": "JUMP"
    },
    "9667": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5213,
        5273
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5285,
        5297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9670": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9671": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5332
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9678": {
      "op": "SHL"
    },
    "9679": {
      "op": "SUB"
    },
    "9680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5337
      ],
      "op": "AND",
      "path": "2"
    },
    "9681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5345,
        5350
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5352,
        5356
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25DF"
    },
    "9689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B85"
    },
    "9694": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9695": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9700": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SUB",
      "path": "2"
    },
    "9704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9707": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "GAS",
      "path": "2"
    },
    "9708": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "CALL",
      "path": "2"
    },
    "9709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9712": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9714": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9715": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "EQ",
      "path": "2"
    },
    "9719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x261C"
    },
    "9722": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "NOT",
      "path": "2"
    },
    "9731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "2"
    },
    "9735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "AND",
      "path": "2"
    },
    "9736": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9737": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "2"
    },
    "9738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9741": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9742": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9743": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9744": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9747": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9750": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "ADD",
      "path": "2"
    },
    "9751": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9752": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2621"
    },
    "9755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9756": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9757": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9759": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9760": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9761": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9762": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5326,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9763": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9764": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9765": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9766": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5284,
        5357
      ],
      "op": "POP",
      "path": "2"
    },
    "9767": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 143,
      "value": "0x2631"
    },
    "9770": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5391,
        5398
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9771": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5400,
        5410
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9772": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5412,
        5424
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9773": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x263C"
    },
    "9776": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9777": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9778": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5425
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "9779": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4933,
        5432
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "9780": {
      "op": "POP"
    },
    "9781": {
      "op": "POP"
    },
    "9782": {
      "op": "POP"
    },
    "9783": {
      "op": "POP"
    },
    "9784": {
      "op": "POP"
    },
    "9785": {
      "op": "POP"
    },
    "9786": {
      "op": "POP"
    },
    "9787": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4933,
        5432
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9788": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7546,
        8238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9789": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7692,
        7704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9791": {
      "branch": 179,
      "fn": "Address.verifyCallResult",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9792": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9793": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x264B"
    },
    "9796": {
      "branch": 179,
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9797": {
      "op": "POP"
    },
    "9798": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7750,
        7760
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 144
    },
    "9799": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1845"
    },
    "9802": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7743,
        7760
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9803": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7716,
        8232
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9804": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9805": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9806": {
      "branch": 180,
      "fn": "Address.verifyCallResult",
      "offset": [
        7861,
        7882
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9807": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x265B"
    },
    "9810": {
      "branch": 180,
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9811": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8055,
        8065
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9812": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8049,
        8066
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9813": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8115,
        8130
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9814": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8112
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9815": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8098,
        8100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9817": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8094,
        8113
      ],
      "op": "ADD",
      "path": "2"
    },
    "9818": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8087,
        8131
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9819": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7857,
        8222
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9820": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8194,
        8206
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 145
    },
    "9821": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9823": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9824": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9828": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9830": {
      "op": "SHL"
    },
    "9831": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9832": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9833": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9835": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "ADD",
      "path": "2"
    },
    "9836": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x732"
    },
    "9839": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9840": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9841": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8187,
        8207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x277D"
    },
    "9844": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8187,
        8207
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9845": {
      "op": "JUMPDEST"
    },
    "9846": {
      "op": "DUP3"
    },
    "9847": {
      "op": "DUP1"
    },
    "9848": {
      "op": "SLOAD"
    },
    "9849": {
      "op": "PUSH2",
      "value": "0x2681"
    },
    "9852": {
      "op": "SWAP1"
    },
    "9853": {
      "op": "PUSH2",
      "value": "0x29FF"
    },
    "9856": {
      "jump": "i",
      "op": "JUMP"
    },
    "9857": {
      "op": "JUMPDEST"
    },
    "9858": {
      "op": "SWAP1"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9861": {
      "op": "MSTORE"
    },
    "9862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9866": {
      "op": "KECCAK256"
    },
    "9867": {
      "op": "SWAP1"
    },
    "9868": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9870": {
      "op": "ADD"
    },
    "9871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9873": {
      "op": "SWAP1"
    },
    "9874": {
      "op": "DIV"
    },
    "9875": {
      "op": "DUP2"
    },
    "9876": {
      "op": "ADD"
    },
    "9877": {
      "op": "SWAP3"
    },
    "9878": {
      "op": "DUP3"
    },
    "9879": {
      "op": "PUSH2",
      "value": "0x26A3"
    },
    "9882": {
      "op": "JUMPI"
    },
    "9883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9885": {
      "op": "DUP6"
    },
    "9886": {
      "op": "SSTORE"
    },
    "9887": {
      "op": "PUSH2",
      "value": "0x26E9"
    },
    "9890": {
      "op": "JUMP"
    },
    "9891": {
      "op": "JUMPDEST"
    },
    "9892": {
      "op": "DUP3"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9895": {
      "op": "LT"
    },
    "9896": {
      "op": "PUSH2",
      "value": "0x26BC"
    },
    "9899": {
      "op": "JUMPI"
    },
    "9900": {
      "op": "DUP1"
    },
    "9901": {
      "op": "MLOAD"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9904": {
      "op": "NOT"
    },
    "9905": {
      "op": "AND"
    },
    "9906": {
      "op": "DUP4"
    },
    "9907": {
      "op": "DUP1"
    },
    "9908": {
      "op": "ADD"
    },
    "9909": {
      "op": "OR"
    },
    "9910": {
      "op": "DUP6"
    },
    "9911": {
      "op": "SSTORE"
    },
    "9912": {
      "op": "PUSH2",
      "value": "0x26E9"
    },
    "9915": {
      "op": "JUMP"
    },
    "9916": {
      "op": "JUMPDEST"
    },
    "9917": {
      "op": "DUP3"
    },
    "9918": {
      "op": "DUP1"
    },
    "9919": {
      "op": "ADD"
    },
    "9920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9922": {
      "op": "ADD"
    },
    "9923": {
      "op": "DUP6"
    },
    "9924": {
      "op": "SSTORE"
    },
    "9925": {
      "op": "DUP3"
    },
    "9926": {
      "op": "ISZERO"
    },
    "9927": {
      "op": "PUSH2",
      "value": "0x26E9"
    },
    "9930": {
      "op": "JUMPI"
    },
    "9931": {
      "op": "SWAP2"
    },
    "9932": {
      "op": "DUP3"
    },
    "9933": {
      "op": "ADD"
    },
    "9934": {
      "op": "JUMPDEST"
    },
    "9935": {
      "op": "DUP3"
    },
    "9936": {
      "op": "DUP2"
    },
    "9937": {
      "op": "GT"
    },
    "9938": {
      "op": "ISZERO"
    },
    "9939": {
      "op": "PUSH2",
      "value": "0x26E9"
    },
    "9942": {
      "op": "JUMPI"
    },
    "9943": {
      "op": "DUP3"
    },
    "9944": {
      "op": "MLOAD"
    },
    "9945": {
      "op": "DUP3"
    },
    "9946": {
      "op": "SSTORE"
    },
    "9947": {
      "op": "SWAP2"
    },
    "9948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9950": {
      "op": "ADD"
    },
    "9951": {
      "op": "SWAP2"
    },
    "9952": {
      "op": "SWAP1"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9955": {
      "op": "ADD"
    },
    "9956": {
      "op": "SWAP1"
    },
    "9957": {
      "op": "PUSH2",
      "value": "0x26CE"
    },
    "9960": {
      "op": "JUMP"
    },
    "9961": {
      "op": "JUMPDEST"
    },
    "9962": {
      "op": "POP"
    },
    "9963": {
      "op": "PUSH2",
      "value": "0x26F5"
    },
    "9966": {
      "op": "SWAP3"
    },
    "9967": {
      "op": "SWAP2"
    },
    "9968": {
      "op": "POP"
    },
    "9969": {
      "op": "PUSH2",
      "value": "0x26F9"
    },
    "9972": {
      "jump": "i",
      "op": "JUMP"
    },
    "9973": {
      "op": "JUMPDEST"
    },
    "9974": {
      "op": "POP"
    },
    "9975": {
      "op": "SWAP1"
    },
    "9976": {
      "jump": "o",
      "op": "JUMP"
    },
    "9977": {
      "op": "JUMPDEST"
    },
    "9978": {
      "op": "JUMPDEST"
    },
    "9979": {
      "op": "DUP1"
    },
    "9980": {
      "op": "DUP3"
    },
    "9981": {
      "op": "GT"
    },
    "9982": {
      "op": "ISZERO"
    },
    "9983": {
      "op": "PUSH2",
      "value": "0x26F5"
    },
    "9986": {
      "op": "JUMPI"
    },
    "9987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9989": {
      "op": "DUP2"
    },
    "9990": {
      "op": "SSTORE"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9993": {
      "op": "ADD"
    },
    "9994": {
      "op": "PUSH2",
      "value": "0x26FA"
    },
    "9997": {
      "op": "JUMP"
    },
    "9998": {
      "op": "JUMPDEST"
    },
    "9999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10003": {
      "op": "DUP3"
    },
    "10004": {
      "op": "DUP5"
    },
    "10005": {
      "op": "SUB"
    },
    "10006": {
      "op": "SLT"
    },
    "10007": {
      "op": "ISZERO"
    },
    "10008": {
      "op": "PUSH2",
      "value": "0x2720"
    },
    "10011": {
      "op": "JUMPI"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10014": {
      "op": "DUP1"
    },
    "10015": {
      "op": "REVERT"
    },
    "10016": {
      "op": "JUMPDEST"
    },
    "10017": {
      "op": "POP"
    },
    "10018": {
      "op": "CALLDATALOAD"
    },
    "10019": {
      "op": "SWAP2"
    },
    "10020": {
      "op": "SWAP1"
    },
    "10021": {
      "op": "POP"
    },
    "10022": {
      "jump": "o",
      "op": "JUMP"
    },
    "10023": {
      "op": "JUMPDEST"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10028": {
      "op": "DUP3"
    },
    "10029": {
      "op": "DUP5"
    },
    "10030": {
      "op": "SUB"
    },
    "10031": {
      "op": "SLT"
    },
    "10032": {
      "op": "ISZERO"
    },
    "10033": {
      "op": "PUSH2",
      "value": "0x2739"
    },
    "10036": {
      "op": "JUMPI"
    },
    "10037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10039": {
      "op": "DUP1"
    },
    "10040": {
      "op": "REVERT"
    },
    "10041": {
      "op": "JUMPDEST"
    },
    "10042": {
      "op": "DUP2"
    },
    "10043": {
      "op": "CALLDATALOAD"
    },
    "10044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10048": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10050": {
      "op": "SHL"
    },
    "10051": {
      "op": "SUB"
    },
    "10052": {
      "op": "NOT"
    },
    "10053": {
      "op": "DUP2"
    },
    "10054": {
      "op": "AND"
    },
    "10055": {
      "op": "DUP2"
    },
    "10056": {
      "op": "EQ"
    },
    "10057": {
      "op": "PUSH2",
      "value": "0x1845"
    },
    "10060": {
      "op": "JUMPI"
    },
    "10061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10063": {
      "op": "DUP1"
    },
    "10064": {
      "op": "REVERT"
    },
    "10065": {
      "op": "JUMPDEST"
    },
    "10066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10068": {
      "op": "JUMPDEST"
    },
    "10069": {
      "op": "DUP4"
    },
    "10070": {
      "op": "DUP2"
    },
    "10071": {
      "op": "LT"
    },
    "10072": {
      "op": "ISZERO"
    },
    "10073": {
      "op": "PUSH2",
      "value": "0x276C"
    },
    "10076": {
      "op": "JUMPI"
    },
    "10077": {
      "op": "DUP2"
    },
    "10078": {
      "op": "DUP2"
    },
    "10079": {
      "op": "ADD"
    },
    "10080": {
      "op": "MLOAD"
    },
    "10081": {
      "op": "DUP4"
    },
    "10082": {
      "op": "DUP3"
    },
    "10083": {
      "op": "ADD"
    },
    "10084": {
      "op": "MSTORE"
    },
    "10085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10087": {
      "op": "ADD"
    },
    "10088": {
      "op": "PUSH2",
      "value": "0x2754"
    },
    "10091": {
      "op": "JUMP"
    },
    "10092": {
      "op": "JUMPDEST"
    },
    "10093": {
      "op": "DUP4"
    },
    "10094": {
      "op": "DUP2"
    },
    "10095": {
      "op": "GT"
    },
    "10096": {
      "op": "ISZERO"
    },
    "10097": {
      "op": "PUSH2",
      "value": "0x1E73"
    },
    "10100": {
      "op": "JUMPI"
    },
    "10101": {
      "op": "POP"
    },
    "10102": {
      "op": "POP"
    },
    "10103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10105": {
      "op": "SWAP2"
    },
    "10106": {
      "op": "ADD"
    },
    "10107": {
      "op": "MSTORE"
    },
    "10108": {
      "jump": "o",
      "op": "JUMP"
    },
    "10109": {
      "op": "JUMPDEST"
    },
    "10110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10112": {
      "op": "DUP2"
    },
    "10113": {
      "op": "MSTORE"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10116": {
      "op": "DUP3"
    },
    "10117": {
      "op": "MLOAD"
    },
    "10118": {
      "op": "DUP1"
    },
    "10119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10121": {
      "op": "DUP5"
    },
    "10122": {
      "op": "ADD"
    },
    "10123": {
      "op": "MSTORE"
    },
    "10124": {
      "op": "PUSH2",
      "value": "0x279C"
    },
    "10127": {
      "op": "DUP2"
    },
    "10128": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10130": {
      "op": "DUP6"
    },
    "10131": {
      "op": "ADD"
    },
    "10132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10134": {
      "op": "DUP8"
    },
    "10135": {
      "op": "ADD"
    },
    "10136": {
      "op": "PUSH2",
      "value": "0x2751"
    },
    "10139": {
      "jump": "i",
      "op": "JUMP"
    },
    "10140": {
      "op": "JUMPDEST"
    },
    "10141": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10143": {
      "op": "ADD"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10146": {
      "op": "NOT"
    },
    "10147": {
      "op": "AND"
    },
    "10148": {
      "op": "SWAP2"
    },
    "10149": {
      "op": "SWAP1"
    },
    "10150": {
      "op": "SWAP2"
    },
    "10151": {
      "op": "ADD"
    },
    "10152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10154": {
      "op": "ADD"
    },
    "10155": {
      "op": "SWAP3"
    },
    "10156": {
      "op": "SWAP2"
    },
    "10157": {
      "op": "POP"
    },
    "10158": {
      "op": "POP"
    },
    "10159": {
      "jump": "o",
      "op": "JUMP"
    },
    "10160": {
      "op": "JUMPDEST"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10167": {
      "op": "SHL"
    },
    "10168": {
      "op": "SUB"
    },
    "10169": {
      "op": "DUP2"
    },
    "10170": {
      "op": "AND"
    },
    "10171": {
      "op": "DUP2"
    },
    "10172": {
      "op": "EQ"
    },
    "10173": {
      "op": "PUSH2",
      "value": "0xEC7"
    },
    "10176": {
      "op": "JUMPI"
    },
    "10177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10179": {
      "op": "DUP1"
    },
    "10180": {
      "op": "REVERT"
    },
    "10181": {
      "op": "JUMPDEST"
    },
    "10182": {
      "op": "DUP1"
    },
    "10183": {
      "op": "CALLDATALOAD"
    },
    "10184": {
      "op": "PUSH2",
      "value": "0x908"
    },
    "10187": {
      "op": "DUP2"
    },
    "10188": {
      "op": "PUSH2",
      "value": "0x27B0"
    },
    "10191": {
      "jump": "i",
      "op": "JUMP"
    },
    "10192": {
      "op": "JUMPDEST"
    },
    "10193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10197": {
      "op": "DUP3"
    },
    "10198": {
      "op": "DUP5"
    },
    "10199": {
      "op": "SUB"
    },
    "10200": {
      "op": "SLT"
    },
    "10201": {
      "op": "ISZERO"
    },
    "10202": {
      "op": "PUSH2",
      "value": "0x27E2"
    },
    "10205": {
      "op": "JUMPI"
    },
    "10206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10208": {
      "op": "DUP1"
    },
    "10209": {
      "op": "REVERT"
    },
    "10210": {
      "op": "JUMPDEST"
    },
    "10211": {
      "op": "DUP2"
    },
    "10212": {
      "op": "CALLDATALOAD"
    },
    "10213": {
      "op": "PUSH2",
      "value": "0x1845"
    },
    "10216": {
      "op": "DUP2"
    },
    "10217": {
      "op": "PUSH2",
      "value": "0x27B0"
    },
    "10220": {
      "jump": "i",
      "op": "JUMP"
    },
    "10221": {
      "op": "JUMPDEST"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10224": {
      "op": "DUP1"
    },
    "10225": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10227": {
      "op": "DUP4"
    },
    "10228": {
      "op": "DUP6"
    },
    "10229": {
      "op": "SUB"
    },
    "10230": {
      "op": "SLT"
    },
    "10231": {
      "op": "ISZERO"
    },
    "10232": {
      "op": "PUSH2",
      "value": "0x2800"
    },
    "10235": {
      "op": "JUMPI"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10238": {
      "op": "DUP1"
    },
    "10239": {
      "op": "REVERT"
    },
    "10240": {
      "op": "JUMPDEST"
    },
    "10241": {
      "op": "DUP3"
    },
    "10242": {
      "op": "CALLDATALOAD"
    },
    "10243": {
      "op": "SWAP2"
    },
    "10244": {
      "op": "POP"
    },
    "10245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10247": {
      "op": "DUP4"
    },
    "10248": {
      "op": "ADD"
    },
    "10249": {
      "op": "CALLDATALOAD"
    },
    "10250": {
      "op": "PUSH2",
      "value": "0x2812"
    },
    "10253": {
      "op": "DUP2"
    },
    "10254": {
      "op": "PUSH2",
      "value": "0x27B0"
    },
    "10257": {
      "jump": "i",
      "op": "JUMP"
    },
    "10258": {
      "op": "JUMPDEST"
    },
    "10259": {
      "op": "DUP1"
    },
    "10260": {
      "op": "SWAP2"
    },
    "10261": {
      "op": "POP"
    },
    "10262": {
      "op": "POP"
    },
    "10263": {
      "op": "SWAP3"
    },
    "10264": {
      "op": "POP"
    },
    "10265": {
      "op": "SWAP3"
    },
    "10266": {
      "op": "SWAP1"
    },
    "10267": {
      "op": "POP"
    },
    "10268": {
      "jump": "o",
      "op": "JUMP"
    },
    "10269": {
      "op": "JUMPDEST"
    },
    "10270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10272": {
      "op": "DUP1"
    },
    "10273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10275": {
      "op": "DUP1"
    },
    "10276": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10278": {
      "op": "DUP6"
    },
    "10279": {
      "op": "DUP8"
    },
    "10280": {
      "op": "SUB"
    },
    "10281": {
      "op": "SLT"
    },
    "10282": {
      "op": "ISZERO"
    },
    "10283": {
      "op": "PUSH2",
      "value": "0x2833"
    },
    "10286": {
      "op": "JUMPI"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10289": {
      "op": "DUP1"
    },
    "10290": {
      "op": "REVERT"
    },
    "10291": {
      "op": "JUMPDEST"
    },
    "10292": {
      "op": "DUP5"
    },
    "10293": {
      "op": "CALLDATALOAD"
    },
    "10294": {
      "op": "PUSH2",
      "value": "0x283E"
    },
    "10297": {
      "op": "DUP2"
    },
    "10298": {
      "op": "PUSH2",
      "value": "0x27B0"
    },
    "10301": {
      "jump": "i",
      "op": "JUMP"
    },
    "10302": {
      "op": "JUMPDEST"
    },
    "10303": {
      "op": "SWAP7"
    },
    "10304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10306": {
      "op": "DUP7"
    },
    "10307": {
      "op": "ADD"
    },
    "10308": {
      "op": "CALLDATALOAD"
    },
    "10309": {
      "op": "SWAP7"
    },
    "10310": {
      "op": "POP"
    },
    "10311": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10313": {
      "op": "DUP7"
    },
    "10314": {
      "op": "ADD"
    },
    "10315": {
      "op": "CALLDATALOAD"
    },
    "10316": {
      "op": "SWAP6"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10319": {
      "op": "ADD"
    },
    "10320": {
      "op": "CALLDATALOAD"
    },
    "10321": {
      "op": "SWAP5"
    },
    "10322": {
      "op": "POP"
    },
    "10323": {
      "op": "SWAP3"
    },
    "10324": {
      "op": "POP"
    },
    "10325": {
      "op": "POP"
    },
    "10326": {
      "op": "POP"
    },
    "10327": {
      "jump": "o",
      "op": "JUMP"
    },
    "10328": {
      "op": "JUMPDEST"
    },
    "10329": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10336": {
      "op": "SHL"
    },
    "10337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10339": {
      "op": "MSTORE"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10342": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10344": {
      "op": "MSTORE"
    },
    "10345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10349": {
      "op": "REVERT"
    },
    "10350": {
      "op": "JUMPDEST"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10353": {
      "op": "DUP1"
    },
    "10354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10356": {
      "op": "DUP1"
    },
    "10357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10359": {
      "op": "DUP1"
    },
    "10360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10362": {
      "op": "DUP1"
    },
    "10363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10365": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10368": {
      "op": "DUP11"
    },
    "10369": {
      "op": "DUP13"
    },
    "10370": {
      "op": "SUB"
    },
    "10371": {
      "op": "SLT"
    },
    "10372": {
      "op": "ISZERO"
    },
    "10373": {
      "op": "PUSH2",
      "value": "0x288D"
    },
    "10376": {
      "op": "JUMPI"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10379": {
      "op": "DUP1"
    },
    "10380": {
      "op": "REVERT"
    },
    "10381": {
      "op": "JUMPDEST"
    },
    "10382": {
      "op": "DUP10"
    },
    "10383": {
      "op": "CALLDATALOAD"
    },
    "10384": {
      "op": "PUSH2",
      "value": "0x2898"
    },
    "10387": {
      "op": "DUP2"
    },
    "10388": {
      "op": "PUSH2",
      "value": "0x27B0"
    },
    "10391": {
      "jump": "i",
      "op": "JUMP"
    },
    "10392": {
      "op": "JUMPDEST"
    },
    "10393": {
      "op": "SWAP9"
    },
    "10394": {
      "op": "POP"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10397": {
      "op": "DUP11"
    },
    "10398": {
      "op": "ADD"
    },
    "10399": {
      "op": "CALLDATALOAD"
    },
    "10400": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10409": {
      "op": "DUP1"
    },
    "10410": {
      "op": "DUP3"
    },
    "10411": {
      "op": "GT"
    },
    "10412": {
      "op": "ISZERO"
    },
    "10413": {
      "op": "PUSH2",
      "value": "0x28B5"
    },
    "10416": {
      "op": "JUMPI"
    },
    "10417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10419": {
      "op": "DUP1"
    },
    "10420": {
      "op": "REVERT"
    },
    "10421": {
      "op": "JUMPDEST"
    },
    "10422": {
      "op": "DUP2"
    },
    "10423": {
      "op": "DUP13"
    },
    "10424": {
      "op": "ADD"
    },
    "10425": {
      "op": "SWAP2"
    },
    "10426": {
      "op": "POP"
    },
    "10427": {
      "op": "DUP13"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10430": {
      "op": "DUP4"
    },
    "10431": {
      "op": "ADD"
    },
    "10432": {
      "op": "SLT"
    },
    "10433": {
      "op": "PUSH2",
      "value": "0x28C9"
    },
    "10436": {
      "op": "JUMPI"
    },
    "10437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10439": {
      "op": "DUP1"
    },
    "10440": {
      "op": "REVERT"
    },
    "10441": {
      "op": "JUMPDEST"
    },
    "10442": {
      "op": "DUP2"
    },
    "10443": {
      "op": "CALLDATALOAD"
    },
    "10444": {
      "op": "DUP2"
    },
    "10445": {
      "op": "DUP2"
    },
    "10446": {
      "op": "GT"
    },
    "10447": {
      "op": "ISZERO"
    },
    "10448": {
      "op": "PUSH2",
      "value": "0x28DB"
    },
    "10451": {
      "op": "JUMPI"
    },
    "10452": {
      "op": "PUSH2",
      "value": "0x28DB"
    },
    "10455": {
      "op": "PUSH2",
      "value": "0x2858"
    },
    "10458": {
      "jump": "i",
      "op": "JUMP"
    },
    "10459": {
      "op": "JUMPDEST"
    },
    "10460": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10462": {
      "op": "MLOAD"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10465": {
      "op": "DUP3"
    },
    "10466": {
      "op": "ADD"
    },
    "10467": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10469": {
      "op": "NOT"
    },
    "10470": {
      "op": "SWAP1"
    },
    "10471": {
      "op": "DUP2"
    },
    "10472": {
      "op": "AND"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10475": {
      "op": "ADD"
    },
    "10476": {
      "op": "AND"
    },
    "10477": {
      "op": "DUP2"
    },
    "10478": {
      "op": "ADD"
    },
    "10479": {
      "op": "SWAP1"
    },
    "10480": {
      "op": "DUP4"
    },
    "10481": {
      "op": "DUP3"
    },
    "10482": {
      "op": "GT"
    },
    "10483": {
      "op": "DUP2"
    },
    "10484": {
      "op": "DUP4"
    },
    "10485": {
      "op": "LT"
    },
    "10486": {
      "op": "OR"
    },
    "10487": {
      "op": "ISZERO"
    },
    "10488": {
      "op": "PUSH2",
      "value": "0x2903"
    },
    "10491": {
      "op": "JUMPI"
    },
    "10492": {
      "op": "PUSH2",
      "value": "0x2903"
    },
    "10495": {
      "op": "PUSH2",
      "value": "0x2858"
    },
    "10498": {
      "jump": "i",
      "op": "JUMP"
    },
    "10499": {
      "op": "JUMPDEST"
    },
    "10500": {
      "op": "DUP2"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10503": {
      "op": "MSTORE"
    },
    "10504": {
      "op": "DUP3"
    },
    "10505": {
      "op": "DUP2"
    },
    "10506": {
      "op": "MSTORE"
    },
    "10507": {
      "op": "DUP16"
    },
    "10508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10510": {
      "op": "DUP5"
    },
    "10511": {
      "op": "DUP8"
    },
    "10512": {
      "op": "ADD"
    },
    "10513": {
      "op": "ADD"
    },
    "10514": {
      "op": "GT"
    },
    "10515": {
      "op": "ISZERO"
    },
    "10516": {
      "op": "PUSH2",
      "value": "0x291C"
    },
    "10519": {
      "op": "JUMPI"
    },
    "10520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10522": {
      "op": "DUP1"
    },
    "10523": {
      "op": "REVERT"
    },
    "10524": {
      "op": "JUMPDEST"
    },
    "10525": {
      "op": "DUP3"
    },
    "10526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10528": {
      "op": "DUP7"
    },
    "10529": {
      "op": "ADD"
    },
    "10530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10532": {
      "op": "DUP4"
    },
    "10533": {
      "op": "ADD"
    },
    "10534": {
      "op": "CALLDATACOPY"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10539": {
      "op": "DUP5"
    },
    "10540": {
      "op": "DUP4"
    },
    "10541": {
      "op": "ADD"
    },
    "10542": {
      "op": "ADD"
    },
    "10543": {
      "op": "MSTORE"
    },
    "10544": {
      "op": "DUP1"
    },
    "10545": {
      "op": "SWAP13"
    },
    "10546": {
      "op": "POP"
    },
    "10547": {
      "op": "POP"
    },
    "10548": {
      "op": "POP"
    },
    "10549": {
      "op": "POP"
    },
    "10550": {
      "op": "POP"
    },
    "10551": {
      "op": "POP"
    },
    "10552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10554": {
      "op": "DUP11"
    },
    "10555": {
      "op": "ADD"
    },
    "10556": {
      "op": "CALLDATALOAD"
    },
    "10557": {
      "op": "SWAP7"
    },
    "10558": {
      "op": "POP"
    },
    "10559": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10561": {
      "op": "DUP11"
    },
    "10562": {
      "op": "ADD"
    },
    "10563": {
      "op": "CALLDATALOAD"
    },
    "10564": {
      "op": "SWAP6"
    },
    "10565": {
      "op": "POP"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10568": {
      "op": "DUP11"
    },
    "10569": {
      "op": "ADD"
    },
    "10570": {
      "op": "CALLDATALOAD"
    },
    "10571": {
      "op": "SWAP5"
    },
    "10572": {
      "op": "POP"
    },
    "10573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10575": {
      "op": "DUP11"
    },
    "10576": {
      "op": "ADD"
    },
    "10577": {
      "op": "CALLDATALOAD"
    },
    "10578": {
      "op": "SWAP4"
    },
    "10579": {
      "op": "POP"
    },
    "10580": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10582": {
      "op": "DUP11"
    },
    "10583": {
      "op": "ADD"
    },
    "10584": {
      "op": "CALLDATALOAD"
    },
    "10585": {
      "op": "SWAP3"
    },
    "10586": {
      "op": "POP"
    },
    "10587": {
      "op": "PUSH2",
      "value": "0x2966"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10592": {
      "op": "DUP12"
    },
    "10593": {
      "op": "ADD"
    },
    "10594": {
      "op": "PUSH2",
      "value": "0x27C5"
    },
    "10597": {
      "jump": "i",
      "op": "JUMP"
    },
    "10598": {
      "op": "JUMPDEST"
    },
    "10599": {
      "op": "SWAP2"
    },
    "10600": {
      "op": "POP"
    },
    "10601": {
      "op": "PUSH2",
      "value": "0x2975"
    },
    "10604": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10607": {
      "op": "DUP12"
    },
    "10608": {
      "op": "ADD"
    },
    "10609": {
      "op": "PUSH2",
      "value": "0x27C5"
    },
    "10612": {
      "jump": "i",
      "op": "JUMP"
    },
    "10613": {
      "op": "JUMPDEST"
    },
    "10614": {
      "op": "SWAP1"
    },
    "10615": {
      "op": "POP"
    },
    "10616": {
      "op": "SWAP3"
    },
    "10617": {
      "op": "SWAP6"
    },
    "10618": {
      "op": "SWAP9"
    },
    "10619": {
      "op": "POP"
    },
    "10620": {
      "op": "SWAP3"
    },
    "10621": {
      "op": "SWAP6"
    },
    "10622": {
      "op": "SWAP9"
    },
    "10623": {
      "op": "POP"
    },
    "10624": {
      "op": "SWAP3"
    },
    "10625": {
      "op": "SWAP6"
    },
    "10626": {
      "op": "SWAP9"
    },
    "10627": {
      "jump": "o",
      "op": "JUMP"
    },
    "10628": {
      "op": "JUMPDEST"
    },
    "10629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10631": {
      "op": "DUP1"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10634": {
      "op": "DUP4"
    },
    "10635": {
      "op": "DUP6"
    },
    "10636": {
      "op": "SUB"
    },
    "10637": {
      "op": "SLT"
    },
    "10638": {
      "op": "ISZERO"
    },
    "10639": {
      "op": "PUSH2",
      "value": "0x2997"
    },
    "10642": {
      "op": "JUMPI"
    },
    "10643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10645": {
      "op": "DUP1"
    },
    "10646": {
      "op": "REVERT"
    },
    "10647": {
      "op": "JUMPDEST"
    },
    "10648": {
      "op": "POP"
    },
    "10649": {
      "op": "POP"
    },
    "10650": {
      "op": "DUP1"
    },
    "10651": {
      "op": "CALLDATALOAD"
    },
    "10652": {
      "op": "SWAP3"
    },
    "10653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10655": {
      "op": "SWAP1"
    },
    "10656": {
      "op": "SWAP2"
    },
    "10657": {
      "op": "ADD"
    },
    "10658": {
      "op": "CALLDATALOAD"
    },
    "10659": {
      "op": "SWAP2"
    },
    "10660": {
      "op": "POP"
    },
    "10661": {
      "jump": "o",
      "op": "JUMP"
    },
    "10662": {
      "op": "JUMPDEST"
    },
    "10663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10665": {
      "op": "DUP1"
    },
    "10666": {
      "op": "DUP3"
    },
    "10667": {
      "op": "MSTORE"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10670": {
      "op": "SWAP1"
    },
    "10671": {
      "op": "DUP3"
    },
    "10672": {
      "op": "ADD"
    },
    "10673": {
      "op": "MSTORE"
    },
    "10674": {
      "op": "PUSH17",
      "value": "0x416D6F756E74206973207A65726F202121"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "10694": {
      "op": "SHL"
    },
    "10695": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10697": {
      "op": "DUP3"
    },
    "10698": {
      "op": "ADD"
    },
    "10699": {
      "op": "MSTORE"
    },
    "10700": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10702": {
      "op": "ADD"
    },
    "10703": {
      "op": "SWAP1"
    },
    "10704": {
      "jump": "o",
      "op": "JUMP"
    },
    "10705": {
      "op": "JUMPDEST"
    },
    "10706": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10713": {
      "op": "SHL"
    },
    "10714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10716": {
      "op": "MSTORE"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10719": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10721": {
      "op": "MSTORE"
    },
    "10722": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10726": {
      "op": "REVERT"
    },
    "10727": {
      "op": "JUMPDEST"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10730": {
      "op": "DUP3"
    },
    "10731": {
      "op": "NOT"
    },
    "10732": {
      "op": "DUP3"
    },
    "10733": {
      "op": "GT"
    },
    "10734": {
      "op": "ISZERO"
    },
    "10735": {
      "op": "PUSH2",
      "value": "0x29FA"
    },
    "10738": {
      "op": "JUMPI"
    },
    "10739": {
      "op": "PUSH2",
      "value": "0x29FA"
    },
    "10742": {
      "op": "PUSH2",
      "value": "0x29D1"
    },
    "10745": {
      "jump": "i",
      "op": "JUMP"
    },
    "10746": {
      "op": "JUMPDEST"
    },
    "10747": {
      "op": "POP"
    },
    "10748": {
      "op": "ADD"
    },
    "10749": {
      "op": "SWAP1"
    },
    "10750": {
      "jump": "o",
      "op": "JUMP"
    },
    "10751": {
      "op": "JUMPDEST"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10754": {
      "op": "DUP2"
    },
    "10755": {
      "op": "DUP2"
    },
    "10756": {
      "op": "SHR"
    },
    "10757": {
      "op": "SWAP1"
    },
    "10758": {
      "op": "DUP3"
    },
    "10759": {
      "op": "AND"
    },
    "10760": {
      "op": "DUP1"
    },
    "10761": {
      "op": "PUSH2",
      "value": "0x2A13"
    },
    "10764": {
      "op": "JUMPI"
    },
    "10765": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10767": {
      "op": "DUP3"
    },
    "10768": {
      "op": "AND"
    },
    "10769": {
      "op": "SWAP2"
    },
    "10770": {
      "op": "POP"
    },
    "10771": {
      "op": "JUMPDEST"
    },
    "10772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10774": {
      "op": "DUP3"
    },
    "10775": {
      "op": "LT"
    },
    "10776": {
      "op": "DUP2"
    },
    "10777": {
      "op": "EQ"
    },
    "10778": {
      "op": "ISZERO"
    },
    "10779": {
      "op": "PUSH2",
      "value": "0x2A34"
    },
    "10782": {
      "op": "JUMPI"
    },
    "10783": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10788": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10790": {
      "op": "SHL"
    },
    "10791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10793": {
      "op": "MSTORE"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10796": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10798": {
      "op": "MSTORE"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10803": {
      "op": "REVERT"
    },
    "10804": {
      "op": "JUMPDEST"
    },
    "10805": {
      "op": "POP"
    },
    "10806": {
      "op": "SWAP2"
    },
    "10807": {
      "op": "SWAP1"
    },
    "10808": {
      "op": "POP"
    },
    "10809": {
      "jump": "o",
      "op": "JUMP"
    },
    "10810": {
      "op": "JUMPDEST"
    },
    "10811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10813": {
      "op": "DUP2"
    },
    "10814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10816": {
      "op": "NOT"
    },
    "10817": {
      "op": "DIV"
    },
    "10818": {
      "op": "DUP4"
    },
    "10819": {
      "op": "GT"
    },
    "10820": {
      "op": "DUP3"
    },
    "10821": {
      "op": "ISZERO"
    },
    "10822": {
      "op": "ISZERO"
    },
    "10823": {
      "op": "AND"
    },
    "10824": {
      "op": "ISZERO"
    },
    "10825": {
      "op": "PUSH2",
      "value": "0x2A54"
    },
    "10828": {
      "op": "JUMPI"
    },
    "10829": {
      "op": "PUSH2",
      "value": "0x2A54"
    },
    "10832": {
      "op": "PUSH2",
      "value": "0x29D1"
    },
    "10835": {
      "jump": "i",
      "op": "JUMP"
    },
    "10836": {
      "op": "JUMPDEST"
    },
    "10837": {
      "op": "POP"
    },
    "10838": {
      "op": "MUL"
    },
    "10839": {
      "op": "SWAP1"
    },
    "10840": {
      "jump": "o",
      "op": "JUMP"
    },
    "10841": {
      "op": "JUMPDEST"
    },
    "10842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10844": {
      "op": "DUP3"
    },
    "10845": {
      "op": "PUSH2",
      "value": "0x2A76"
    },
    "10848": {
      "op": "JUMPI"
    },
    "10849": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10856": {
      "op": "SHL"
    },
    "10857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10859": {
      "op": "MSTORE"
    },
    "10860": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10862": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10864": {
      "op": "MSTORE"
    },
    "10865": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10869": {
      "op": "REVERT"
    },
    "10870": {
      "op": "JUMPDEST"
    },
    "10871": {
      "op": "POP"
    },
    "10872": {
      "op": "DIV"
    },
    "10873": {
      "op": "SWAP1"
    },
    "10874": {
      "jump": "o",
      "op": "JUMP"
    },
    "10875": {
      "op": "JUMPDEST"
    },
    "10876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10878": {
      "op": "DUP3"
    },
    "10879": {
      "op": "DUP3"
    },
    "10880": {
      "op": "LT"
    },
    "10881": {
      "op": "ISZERO"
    },
    "10882": {
      "op": "PUSH2",
      "value": "0x2A8D"
    },
    "10885": {
      "op": "JUMPI"
    },
    "10886": {
      "op": "PUSH2",
      "value": "0x2A8D"
    },
    "10889": {
      "op": "PUSH2",
      "value": "0x29D1"
    },
    "10892": {
      "jump": "i",
      "op": "JUMP"
    },
    "10893": {
      "op": "JUMPDEST"
    },
    "10894": {
      "op": "POP"
    },
    "10895": {
      "op": "SUB"
    },
    "10896": {
      "op": "SWAP1"
    },
    "10897": {
      "jump": "o",
      "op": "JUMP"
    },
    "10898": {
      "op": "JUMPDEST"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10903": {
      "op": "DUP3"
    },
    "10904": {
      "op": "DUP5"
    },
    "10905": {
      "op": "SUB"
    },
    "10906": {
      "op": "SLT"
    },
    "10907": {
      "op": "ISZERO"
    },
    "10908": {
      "op": "PUSH2",
      "value": "0x2AA4"
    },
    "10911": {
      "op": "JUMPI"
    },
    "10912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10914": {
      "op": "DUP1"
    },
    "10915": {
      "op": "REVERT"
    },
    "10916": {
      "op": "JUMPDEST"
    },
    "10917": {
      "op": "POP"
    },
    "10918": {
      "op": "MLOAD"
    },
    "10919": {
      "op": "SWAP2"
    },
    "10920": {
      "op": "SWAP1"
    },
    "10921": {
      "op": "POP"
    },
    "10922": {
      "jump": "o",
      "op": "JUMP"
    },
    "10923": {
      "op": "JUMPDEST"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10928": {
      "op": "DUP3"
    },
    "10929": {
      "op": "DUP5"
    },
    "10930": {
      "op": "SUB"
    },
    "10931": {
      "op": "SLT"
    },
    "10932": {
      "op": "ISZERO"
    },
    "10933": {
      "op": "PUSH2",
      "value": "0x2ABD"
    },
    "10936": {
      "op": "JUMPI"
    },
    "10937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10939": {
      "op": "DUP1"
    },
    "10940": {
      "op": "REVERT"
    },
    "10941": {
      "op": "JUMPDEST"
    },
    "10942": {
      "op": "DUP2"
    },
    "10943": {
      "op": "MLOAD"
    },
    "10944": {
      "op": "DUP1"
    },
    "10945": {
      "op": "ISZERO"
    },
    "10946": {
      "op": "ISZERO"
    },
    "10947": {
      "op": "DUP2"
    },
    "10948": {
      "op": "EQ"
    },
    "10949": {
      "op": "PUSH2",
      "value": "0x1845"
    },
    "10952": {
      "op": "JUMPI"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10955": {
      "op": "DUP1"
    },
    "10956": {
      "op": "REVERT"
    },
    "10957": {
      "op": "JUMPDEST"
    },
    "10958": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
    },
    "10991": {
      "op": "DUP2"
    },
    "10992": {
      "op": "MSTORE"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10995": {
      "op": "DUP4"
    },
    "10996": {
      "op": "MLOAD"
    },
    "10997": {
      "op": "PUSH2",
      "value": "0x2B05"
    },
    "11000": {
      "op": "DUP2"
    },
    "11001": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "11003": {
      "op": "DUP6"
    },
    "11004": {
      "op": "ADD"
    },
    "11005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11007": {
      "op": "DUP9"
    },
    "11008": {
      "op": "ADD"
    },
    "11009": {
      "op": "PUSH2",
      "value": "0x2751"
    },
    "11012": {
      "jump": "i",
      "op": "JUMP"
    },
    "11013": {
      "op": "JUMPDEST"
    },
    "11014": {
      "op": "PUSH17",
      "value": "0x1034B99036B4B9B9B4B733903937B6329"
    },
    "11032": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "11034": {
      "op": "SHL"
    },
    "11035": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "11037": {
      "op": "SWAP2"
    },
    "11038": {
      "op": "DUP5"
    },
    "11039": {
      "op": "ADD"
    },
    "11040": {
      "op": "SWAP2"
    },
    "11041": {
      "op": "DUP3"
    },
    "11042": {
      "op": "ADD"
    },
    "11043": {
      "op": "MSTORE"
    },
    "11044": {
      "op": "DUP4"
    },
    "11045": {
      "op": "MLOAD"
    },
    "11046": {
      "op": "PUSH2",
      "value": "0x2B36"
    },
    "11049": {
      "op": "DUP2"
    },
    "11050": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11052": {
      "op": "DUP5"
    },
    "11053": {
      "op": "ADD"
    },
    "11054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11056": {
      "op": "DUP9"
    },
    "11057": {
      "op": "ADD"
    },
    "11058": {
      "op": "PUSH2",
      "value": "0x2751"
    },
    "11061": {
      "jump": "i",
      "op": "JUMP"
    },
    "11062": {
      "op": "JUMPDEST"
    },
    "11063": {
      "op": "ADD"
    },
    "11064": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11066": {
      "op": "ADD"
    },
    "11067": {
      "op": "SWAP5"
    },
    "11068": {
      "op": "SWAP4"
    },
    "11069": {
      "op": "POP"
    },
    "11070": {
      "op": "POP"
    },
    "11071": {
      "op": "POP"
    },
    "11072": {
      "op": "POP"
    },
    "11073": {
      "jump": "o",
      "op": "JUMP"
    },
    "11074": {
      "op": "JUMPDEST"
    },
    "11075": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11080": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11082": {
      "op": "SHL"
    },
    "11083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11085": {
      "op": "MSTORE"
    },
    "11086": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11088": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11090": {
      "op": "MSTORE"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11095": {
      "op": "REVERT"
    },
    "11096": {
      "op": "JUMPDEST"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11099": {
      "op": "DUP2"
    },
    "11100": {
      "op": "PUSH2",
      "value": "0x2B67"
    },
    "11103": {
      "op": "JUMPI"
    },
    "11104": {
      "op": "PUSH2",
      "value": "0x2B67"
    },
    "11107": {
      "op": "PUSH2",
      "value": "0x29D1"
    },
    "11110": {
      "jump": "i",
      "op": "JUMP"
    },
    "11111": {
      "op": "JUMPDEST"
    },
    "11112": {
      "op": "POP"
    },
    "11113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11115": {
      "op": "NOT"
    },
    "11116": {
      "op": "ADD"
    },
    "11117": {
      "op": "SWAP1"
    },
    "11118": {
      "jump": "o",
      "op": "JUMP"
    },
    "11119": {
      "op": "JUMPDEST"
    },
    "11120": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11125": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11127": {
      "op": "SHL"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11130": {
      "op": "MSTORE"
    },
    "11131": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11133": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11135": {
      "op": "MSTORE"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11140": {
      "op": "REVERT"
    },
    "11141": {
      "op": "JUMPDEST"
    },
    "11142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11144": {
      "op": "DUP3"
    },
    "11145": {
      "op": "MLOAD"
    },
    "11146": {
      "op": "PUSH2",
      "value": "0x2B97"
    },
    "11149": {
      "op": "DUP2"
    },
    "11150": {
      "op": "DUP5"
    },
    "11151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11153": {
      "op": "DUP8"
    },
    "11154": {
      "op": "ADD"
    },
    "11155": {
      "op": "PUSH2",
      "value": "0x2751"
    },
    "11158": {
      "jump": "i",
      "op": "JUMP"
    },
    "11159": {
      "op": "JUMPDEST"
    },
    "11160": {
      "op": "SWAP2"
    },
    "11161": {
      "op": "SWAP1"
    },
    "11162": {
      "op": "SWAP2"
    },
    "11163": {
      "op": "ADD"
    },
    "11164": {
      "op": "SWAP3"
    },
    "11165": {
      "op": "SWAP2"
    },
    "11166": {
      "op": "POP"
    },
    "11167": {
      "op": "POP"
    },
    "11168": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d6e0948af75da2ff436c37545a16ce27ab77309e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./BankStorage.sol\";\nimport \"../interfaces/ITellor.sol\";\nimport \"../interfaces/IERC20.sol\";\nimport \"./SafeERC20.sol\";\nimport \"./Initializable.sol\";\nimport \"./AccessControlEnumerable.sol\";\n\n/**\n * @title Bank\n * This contract allows the owner to deposit reserves(debt token), earn interest and\n * origination fees from users that borrow against their collateral.\n * The oracle for Bank is Tellor.\n */\ncontract Bank is BankStorage, AccessControlEnumerable, Initializable {\n    using SafeERC20 for IERC20;\n\n    address private _bankFactoryOwner;\n\n    /*Events*/\n    event ReserveDeposit(uint256 amount);\n    event ReserveWithdraw(address indexed token, uint256 amount);\n    event VaultDeposit(address indexed owner, uint256 amount);\n    event VaultBorrow(address indexed borrower, uint256 amount);\n    event VaultRepay(address indexed borrower, uint256 amount);\n    event VaultWithdraw(address indexed borrower, uint256 amount);\n    event PriceUpdate(address indexed token, uint256 price);\n    event Liquidation(address indexed borrower, uint256 debtAmount);\n\n    /*Constructor*/\n    constructor(address payable oracleContract) {\n        reserve.oracleContract = oracleContract;\n    }\n\n    /*Modifiers*/\n    modifier onlyOwner() {\n        require(_owner == msg.sender, \"IS NOT OWNER\");\n        _;\n    }\n\n    /*Functions*/\n    /**\n     * @dev Returns the owner of the bank\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     * NOTE: Override this to add changing the\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _owner = newOwner;\n    }\n\n    /**\n     * @dev This function sets the fundamental parameters for the bank\n     *      and assigns the first admin\n     */\n    function init(\n        address creator,\n        string memory bankName,\n        uint256 interestRate,\n        uint256 originationFee,\n        uint256 collateralizationRatio,\n        uint256 liquidationPenalty,\n        uint256 period,\n        address bankFactoryOwner,\n        address payable oracleContract\n    ) public initializer {\n        //set up as admin / owner\n        _setupRole(DEFAULT_ADMIN_ROLE, creator);\n        reserve.interestRate = interestRate;\n        reserve.originationFee = originationFee;\n        reserve.collateralizationRatio = collateralizationRatio;\n        reserve.oracleContract = oracleContract;\n        reserve.liquidationPenalty = liquidationPenalty;\n        reserve.period = period;\n        _bankFactoryOwner = bankFactoryOwner;\n        name = bankName;\n    }\n\n    /**\n     * @dev This function sets the collateral token properties, only callable one time\n     */\n    function setCollateral(\n        address collateralToken,\n        uint256 collateralTokenTellorRequestId,\n        uint256 collateralTokenPriceGranularity,\n        uint256 collateralTokenPrice\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(\n            collateral.tokenAddress == address(0) &&\n                collateralToken != address(0),\n            \"!setable\"\n        );\n        collateral.tokenAddress = collateralToken;\n        collateral.price = collateralTokenPrice;\n        collateral.priceGranularity = collateralTokenPriceGranularity;\n        collateral.tellorRequestId = collateralTokenTellorRequestId;\n    }\n\n    /**\n     * @dev This function sets the debt token properties, only callable one time\n     */\n    function setDebt(\n        address debtToken,\n        uint256 debtTokenTellorRequestId,\n        uint256 debtTokenPriceGranularity,\n        uint256 debtTokenPrice\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(\n            debt.tokenAddress == address(0) && debtToken != address(0),\n            \"!setable\"\n        );\n        debt.tokenAddress = debtToken;\n        debt.price = debtTokenPrice;\n        debt.priceGranularity = debtTokenPriceGranularity;\n        debt.tellorRequestId = debtTokenTellorRequestId;\n    }\n\n    /**\n     * @dev This function allows the Bank owner to deposit the reserve (debt tokens)\n     * @param amount is the amount to deposit\n     */\n    function reserveDeposit(uint256 amount)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(amount > 0, \"Amount is zero !!\");\n        reserve.debtBalance += amount;\n        IERC20(debt.tokenAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            amount\n        );\n        emit ReserveDeposit(amount);\n    }\n\n    /**\n     * @dev This function allows the Bank owner to withdraw the reserve (debt tokens)\n     *      Withdraws incur a 0.5% fee paid to the bankFactoryOwner\n     * @param amount is the amount to withdraw\n     */\n    function reserveWithdraw(uint256 amount)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(\n            IERC20(debt.tokenAddress).balanceOf(address(this)) >= amount,\n            \"NOT ENOUGH DEBT TOKENS IN RESERVE\"\n        );\n        uint256 feeAmount = amount / 200; // Bank Factory collects 0.5% fee\n        reserve.debtBalance -= amount;\n        IERC20(debt.tokenAddress).safeTransfer(msg.sender, amount - feeAmount);\n        IERC20(debt.tokenAddress).safeTransfer(_bankFactoryOwner, feeAmount);\n        emit ReserveWithdraw(debt.tokenAddress, amount);\n    }\n\n    /**\n  * @dev This function allows the user to withdraw their collateral\n         Withdraws incur a 0.5% fee paid to the bankFactoryOwner\n  * @param amount is the amount to withdraw\n  */\n    function reserveWithdrawCollateral(uint256 amount)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(\n            reserve.collateralBalance >= amount,\n            \"NOT ENOUGH COLLATERAL IN RESERVE\"\n        );\n        uint256 feeAmount = amount / 200; // Bank Factory collects 0.5% fee\n        reserve.collateralBalance -= amount;\n        emit ReserveWithdraw(collateral.tokenAddress, amount);\n        IERC20(collateral.tokenAddress).safeTransfer(\n            msg.sender,\n            amount - feeAmount\n        );\n        IERC20(collateral.tokenAddress).safeTransfer(\n            _bankFactoryOwner,\n            feeAmount\n        );\n    }\n\n    /**\n     * @dev Use this function to get and update the price for the collateral token\n     * using the Tellor Oracle.\n     */\n    function updateCollateralPrice() external {\n        require(\n            hasRole(REPORTER_ROLE, msg.sender) ||\n                hasRole(DEFAULT_ADMIN_ROLE, msg.sender),\n            \"not price updater or admin\"\n        );\n        (, collateral.price, collateral.lastUpdatedAt) = getCurrentValue(\n            collateral.tellorRequestId\n        ); //,now - 1 hours);\n        emit PriceUpdate(collateral.tokenAddress, collateral.price);\n    }\n\n    /**\n     * @dev Use this function to get and update the price for the debt token\n     * using the Tellor Oracle.\n     */\n    function updateDebtPrice() external {\n        require(\n            hasRole(REPORTER_ROLE, msg.sender) ||\n                hasRole(DEFAULT_ADMIN_ROLE, msg.sender),\n            \"not price updater or admin\"\n        );\n        (, debt.price, debt.lastUpdatedAt) = getCurrentValue(\n            debt.tellorRequestId\n        ); //,now - 1 hours);\n        emit PriceUpdate(debt.tokenAddress, debt.price);\n    }\n\n    /**\n     * @dev Only keepers or admins can use this function to liquidate a vault's debt,\n     * the bank admins gets the collateral liquidated, liquidated collateral\n     * is charged a 10% fee which gets paid to the bankFactoryOwner\n     * @param vaultOwner is the user the bank admins wants to liquidate\n     */\n    function liquidate(address vaultOwner) external {\n        require(\n            hasRole(KEEPER_ROLE, msg.sender) ||\n                hasRole(DEFAULT_ADMIN_ROLE, msg.sender),\n            \"not keeper or admin\"\n        );\n        // Require undercollateralization\n        require(\n            getVaultCollateralizationRatio(vaultOwner) <\n                reserve.collateralizationRatio * 100,\n            \"VAULT NOT UNDERCOLLATERALIZED\"\n        );\n        uint256 debtOwned = vaults[vaultOwner].debtAmount +\n            ((vaults[vaultOwner].debtAmount *\n                100 *\n                reserve.liquidationPenalty) /\n                100 /\n                100);\n        uint256 collateralToLiquidate = (debtOwned * debt.price) /\n            collateral.price;\n\n        if (collateralToLiquidate > vaults[vaultOwner].collateralAmount) {\n            collateralToLiquidate = vaults[vaultOwner].collateralAmount;\n        }\n\n        uint256 feeAmount = collateralToLiquidate / 10; // Bank Factory collects 10% fee\n        reserve.collateralBalance += collateralToLiquidate - feeAmount;\n        vaults[vaultOwner].collateralAmount -= collateralToLiquidate;\n        vaults[vaultOwner].debtAmount = 0;\n        IERC20(collateral.tokenAddress).safeTransfer(\n            _bankFactoryOwner,\n            feeAmount\n        );\n        emit Liquidation(vaultOwner, debtOwned);\n    }\n\n    /**\n     * @dev Use this function to allow users to deposit collateral to the vault\n     * @param amount is the collateral amount\n     */\n    function vaultDeposit(uint256 amount) external {\n        require(amount > 0, \"Amount is zero !!\");\n        vaults[msg.sender].collateralAmount += amount;\n        reserve.collateralBalance += amount;\n        IERC20(collateral.tokenAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            amount\n        );\n        emit VaultDeposit(msg.sender, amount);\n    }\n\n    /**\n     * @dev Use this function to allow users to borrow against their collateral\n     * @param amount to borrow\n     */\n    function vaultBorrow(uint256 amount) external {\n        if (vaults[msg.sender].debtAmount != 0) {\n            vaults[msg.sender].debtAmount = getVaultRepayAmount();\n        }\n        uint256 maxBorrow = ((vaults[msg.sender].collateralAmount *\n            collateral.price) /\n            debt.price /\n            reserve.collateralizationRatio) * 100;\n        maxBorrow *= debt.priceGranularity;\n        maxBorrow /= collateral.priceGranularity;\n        maxBorrow -= vaults[msg.sender].debtAmount;\n        vaults[msg.sender].debtAmount +=\n            amount +\n            ((amount * reserve.originationFee) / 10000);\n        require(\n            vaults[msg.sender].debtAmount < maxBorrow,\n            \"NOT ENOUGH COLLATERAL\"\n        );\n        require(\n            amount <= IERC20(debt.tokenAddress).balanceOf(address(this)),\n            \"NOT ENOUGH RESERVES\"\n        );\n        if (block.timestamp - vaults[msg.sender].createdAt > reserve.period) {\n            // Only adjust if more than 1 interest rate period has past\n            vaults[msg.sender].createdAt = block.timestamp;\n        }\n        reserve.debtBalance -= amount;\n        IERC20(debt.tokenAddress).safeTransfer(msg.sender, amount);\n        emit VaultBorrow(msg.sender, amount);\n    }\n\n    /**\n     * @dev This function allows users to pay the interest and origination fee to the\n     *  vault before being able to withdraw\n     * @param amount owed\n     */\n    function vaultRepay(uint256 amount) external {\n        require(amount > 0, \"Amount is zero !!\");\n        vaults[msg.sender].debtAmount = getVaultRepayAmount();\n        require(\n            amount <= vaults[msg.sender].debtAmount,\n            \"CANNOT REPAY MORE THAN OWED\"\n        );\n        vaults[msg.sender].debtAmount -= amount;\n        reserve.debtBalance += amount;\n        uint256 periodsElapsed = (block.timestamp / reserve.period) -\n            (vaults[msg.sender].createdAt / reserve.period);\n        vaults[msg.sender].createdAt += periodsElapsed * reserve.period;\n        IERC20(debt.tokenAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            amount\n        );\n        emit VaultRepay(msg.sender, amount);\n    }\n\n    /**\n     * @dev Allows users to withdraw their collateral from the vault\n     * @param amount withdrawn\n     */\n    function vaultWithdraw(uint256 amount) external {\n        require(\n            amount <= vaults[msg.sender].collateralAmount,\n            \"CANNOT WITHDRAW MORE COLLATERAL\"\n        );\n\n        uint256 maxBorrowAfterWithdraw = (((vaults[msg.sender]\n            .collateralAmount - amount) * collateral.price) /\n            debt.price /\n            reserve.collateralizationRatio) * 100;\n        maxBorrowAfterWithdraw *= debt.priceGranularity;\n        maxBorrowAfterWithdraw /= collateral.priceGranularity;\n        require(\n            vaults[msg.sender].debtAmount <= maxBorrowAfterWithdraw,\n            \"CANNOT UNDERCOLLATERALIZE VAULT\"\n        );\n        vaults[msg.sender].collateralAmount -= amount;\n        reserve.collateralBalance -= amount;\n        IERC20(collateral.tokenAddress).safeTransfer(msg.sender, amount);\n        emit VaultWithdraw(msg.sender, amount);\n    }\n\n    function getBankFactoryOwner() public view returns (address) {\n        return _bankFactoryOwner;\n    }\n\n    function setBankFactoryOwner(address newOwner) external {\n        require(_bankFactoryOwner == msg.sender, \"IS NOT BANK FACTORY OWNER\");\n        _bankFactoryOwner = newOwner;\n    }\n\n    function getCurrentValue(uint256 _requestId)\n        public\n        view\n        returns (\n            bool ifRetrieve,\n            uint256 value,\n            uint256 _timestampRetrieved\n        )\n    {\n        ITellor oracle = ITellor(reserve.oracleContract);\n        uint256 _count = oracle.getNewValueCountbyRequestId(_requestId);\n        uint256 _time = oracle.getTimestampbyRequestIDandIndex(\n            _requestId,\n            _count - 1\n        );\n        uint256 _value = oracle.retrieveData(_requestId, _time);\n        if (_value > 0) return (true, _value, _time);\n        return (false, 0, _time);\n    }\n\n    /**\n     * @dev Allows admin to add address to keeper role\n     * @param keeper address of new keeper\n     */\n    function addKeeper(address keeper) external {\n        require(keeper != address(0), \"operation not allowed\");\n        grantRole(KEEPER_ROLE, keeper);\n    }\n\n    /**\n     * @dev Allows admin to remove address from keeper role\n     * @param oldKeeper address of old keeper\n     */\n    function revokeKeeper(address oldKeeper) external {\n        revokeRole(KEEPER_ROLE, oldKeeper);\n    }\n\n    /**\n     * @dev Allows admin to add address to price updater role\n     * @param updater address of new price updater\n     */\n    function addReporter(address updater) external {\n        require(updater != address(0), \"operation not allowed\");\n        grantRole(REPORTER_ROLE, updater);\n    }\n\n    /**\n     * @dev Allows admin to remove address from price updater role\n     * @param oldUpdater address of old price updater\n     */\n    function revokeReporter(address oldUpdater) external {\n        revokeRole(REPORTER_ROLE, oldUpdater);\n    }\n}\n",
  "sourceMap": "464:14441:3:-:0;;;1145:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1199:22;:39;;-1:-1:-1;;;;;;1199:39:3;-1:-1:-1;;;;;1199:39:3;;;;;;;;;;464:14441;;14:298:68;92:6;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;187:16;;-1:-1:-1;;;;;232:31:68;;222:42;;212:70;;278:1;275;268:12;212:70;301:5;14:298;-1:-1:-1;;;14:298:68:o;:::-;464:14441:3;;;;;;",
  "sourcePath": "contracts/Bank.sol",
  "type": "contract"
}